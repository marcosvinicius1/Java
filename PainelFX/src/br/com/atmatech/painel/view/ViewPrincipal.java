/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atmatech.painel.view;

import br.com.atmatech.painel.beans.DBConfigBeans;
import br.com.atmatech.painel.beans.Tb_ConfigBeans;
import br.com.atmatech.painel.beans.Tb_ConfigTempBeans;
import br.com.atmatech.painel.beans.Tb_ProdBeans;
import br.com.atmatech.painel.beans.Tb_Prod_PainelBeans;
import br.com.atmatech.painel.config.DBConfig;
import br.com.atmatech.painel.config.DBConfigManagement;
import br.com.atmatech.painel.controller.CargaController;
import br.com.atmatech.painel.dao.Tb_ConfigDao;
import br.com.atmatech.painel.dao.Tb_ProdDao;
import br.com.atmatech.painel.dao.Tb_Prod_PainelDao;
import com.towel.swing.img.JImagePanel;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos
 */
public class ViewPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form viewPrincipal
     */
    int x = 0;
    Thread vthreadletreiro;
    boolean ativaletreiro = false;
    JImagePanel configfundo;
    JImagePanel configlateral;
    JImagePanel configtopo;
    int configtabela = 0;

    public ViewPrincipal() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
////        try {
////            jMenu.setVisible(false);
////            DBConfigBeans dbc = new DBConfig().getConfig();
////            if(dbc.getTipo()==null){
////                
////            }else if(dbc.getTipo().equals("Estacao")){
////                
////            }else if(dbc.getTipo().equals("Management")){
////                
////            }
////        } catch (IOException ex) {
////            JOptionPane.showMessageDialog(rootPane, "Erro ao Carregar Config \n" + ex);
////            System.exit(0);
////        }
////        jFileChooser1.setFileFilter(new FileNameExtensionFilter("jpg", "jpg"));
////        jFileChooser1.setAcceptAllFileFilterUsed(false);
////        new Thread(new Runnable() {
////            @Override
////            public void run() {
////                while (true) {
////                    new CargaController().cargaProd();
////                    try {
////                        Thread.sleep(1000);
////                    } catch (InterruptedException ex) {
////                        new DBConfig().createArqLog("\nViewPrincipal Construtor:Thread Encerrou:\n" + ex + "\n");
////                    }
////                }
////            }
////        }).start();

        //criado procedure para subistituir metodo
//         new Thread(new Runnable() {
//            @Override
//            public void run() {
//                while (true) {
//                    new CargaController().cargaProdLocal();
//                    try {
//                        Thread.sleep(1000);
//                    } catch (InterruptedException ex) {
//                        new DBConfig().createArqLog("\nViewPrincipal Construtor:Thread Encerrou cargaProdLocal:\n" + ex + "\n");
//                    }
//                }
//            }
//        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDcarga = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTlocalbalancabanco = new javax.swing.JTextField();
        jTusuariobalancabanco = new javax.swing.JTextField();
        jTsenhabalancabanco = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTsenhabanco = new javax.swing.JTextField();
        jTusuariobanco = new javax.swing.JTextField();
        jTlocalbanco = new javax.swing.JTextField();
        jSTerminal = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jCTipo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jDlayout = new javax.swing.JDialog();
        jPConfigTabela = new javax.swing.JPanel();
        jRTabela1 = new javax.swing.JRadioButton();
        jRTabela2 = new javax.swing.JRadioButton();
        jRTabela3 = new javax.swing.JRadioButton();
        jRTabela4 = new javax.swing.JRadioButton();
        jSFonteTabela = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jCCTCodigo = new javax.swing.JCheckBox();
        jCCTProduto = new javax.swing.JCheckBox();
        jCCTOferta = new javax.swing.JCheckBox();
        jCCTValor1 = new javax.swing.JCheckBox();
        jCCTValor2 = new javax.swing.JCheckBox();
        jTNomeValor2 = new javax.swing.JTextField();
        jTNomevalor1 = new javax.swing.JTextField();
        jCCTUnid = new javax.swing.JCheckBox();
        jPCorFonteTabela = new javax.swing.JPanel();
        jPCorFundoTabela = new javax.swing.JPanel();
        jCFonteEstiloTabela = new javax.swing.JComboBox<>();
        jCFonteTipoTabela = new javax.swing.JComboBox<>();
        jRTabelaCheia = new javax.swing.JRadioButton();
        jRTransparencia = new javax.swing.JRadioButton();
        jSEspacamento = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jTTabela1nome = new javax.swing.JTextField();
        jTTabela2nome = new javax.swing.JTextField();
        jTTabela3nome = new javax.swing.JTextField();
        jTTabela4nome = new javax.swing.JTextField();
        jPConfigLetreiro = new javax.swing.JPanel();
        jRletreiro = new javax.swing.JRadioButton();
        jTletreirotexto = new javax.swing.JTextField();
        jStransicaoLetreiro = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jPCorFundoLetreiro = new javax.swing.JPanel();
        jPCorFonteLetreiro = new javax.swing.JPanel();
        jBsalvar = new javax.swing.JButton();
        jPConfigImagem = new javax.swing.JPanel();
        jCTipoLocalizacao = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jSTamanhox = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jSTamanhoy = new javax.swing.JSpinner();
        jBImagem1 = new javax.swing.JButton();
        jBImagemTopo = new javax.swing.JButton();
        jBImagemLateral = new javax.swing.JButton();
        jPCImagemFundo = new javax.swing.JPanel();
        jPCImagemTopo = new javax.swing.JPanel();
        jPCImagemLateral = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jDFileImagem = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDColorLetreiro = new javax.swing.JDialog();
        jColorChooser1 = new javax.swing.JColorChooser();
        jDLayoutTabelas = new javax.swing.JDialog();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCTable1 = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTCTable2 = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTCTable3 = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTCTable4 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jDConsultaProduto = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTConsultaProduto = new javax.swing.JTable();
        jPbackground = new javax.swing.JPanel();
        jPCentral = new javax.swing.JPanel();
        jPImagemTopo = new javax.swing.JPanel();
        jPImagemLateral = new javax.swing.JPanel();
        jPletreiro = new javax.swing.JPanel();
        jPletreiroint = new javax.swing.JPanel();
        jLletreirointFrase = new javax.swing.JLabel();
        jMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        jDcarga.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDcarga.setTitle("CARGA");
        jDcarga.setAlwaysOnTop(true);
        jDcarga.setMinimumSize(new java.awt.Dimension(485, 315));
        jDcarga.setModal(true);
        jDcarga.setPreferredSize(new java.awt.Dimension(485, 315));
        jDcarga.setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Banco Balança"));

        jLabel1.setText("Local:");

        jLabel2.setText("Usuario:");

        jLabel3.setText("Senha:");

        jTlocalbalancabanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTlocalbalancabancoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTlocalbalancabanco)
                    .addComponent(jTusuariobalancabanco)
                    .addComponent(jTsenhabalancabanco))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTlocalbalancabanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTusuariobalancabanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTsenhabalancabanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Banco Local"));

        jLabel4.setText("Local:");

        jLabel5.setText("Usuario:");

        jLabel6.setText("Senha:");

        jTsenhabanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTsenhabancoActionPerformed(evt);
            }
        });

        jTlocalbanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTlocalbancoActionPerformed(evt);
            }
        });

        jSTerminal.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel10.setText("Terminal");

        jCTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Management", "Terminal" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTlocalbanco)
                    .addComponent(jTusuariobanco, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .addComponent(jTsenhabanco))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTlocalbanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTusuariobanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTsenhabanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSTerminal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jCTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("SALVAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDcargaLayout = new javax.swing.GroupLayout(jDcarga.getContentPane());
        jDcarga.getContentPane().setLayout(jDcargaLayout);
        jDcargaLayout.setHorizontalGroup(
            jDcargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDcargaLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDcargaLayout.setVerticalGroup(
            jDcargaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDcargaLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDlayout.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDlayout.setTitle("Layout");
        jDlayout.setMinimumSize(new java.awt.Dimension(1100, 580));
        jDlayout.setModal(true);
        jDlayout.setResizable(false);

        jPConfigTabela.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabelas"));
        jPConfigTabela.setToolTipText("");

        jRTabela1.setText("1 Tabela");

        jRTabela2.setText("2 Tabelas");
        jRTabela2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRTabela2ActionPerformed(evt);
            }
        });

        jRTabela3.setText("3 Tabelas");
        jRTabela3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRTabela3ActionPerformed(evt);
            }
        });

        jRTabela4.setText("4 Tabelas");

        jSFonteTabela.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel8.setText("Fonte Tabela");

        jButton2.setText("Produtos Tabelas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Campos Tabela"));

        jCCTCodigo.setText("Codigo");

        jCCTProduto.setText("Produto");

        jCCTOferta.setText("Oferta");

        jCCTValor1.setText("Valor1");

        jCCTValor2.setText("Valor 2");

        jTNomeValor2.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));

        jTNomevalor1.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));
        jTNomevalor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNomevalor1ActionPerformed(evt);
            }
        });

        jCCTUnid.setText("UNID");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCCTCodigo)
                    .addComponent(jCCTProduto))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCCTUnid)
                    .addComponent(jCCTOferta))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jCCTValor2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTNomeValor2))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(jCCTValor1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTNomevalor1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCCTCodigo)
                    .addComponent(jCCTOferta)
                    .addComponent(jCCTValor2)
                    .addComponent(jTNomeValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCCTProduto)
                    .addComponent(jCCTValor1)
                    .addComponent(jTNomevalor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCCTUnid))
                .addGap(0, 19, Short.MAX_VALUE))
        );

        jPCorFonteTabela.setBorder(javax.swing.BorderFactory.createTitledBorder("Cor Fonte"));
        jPCorFonteTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPCorFonteTabelaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPCorFonteTabelaLayout = new javax.swing.GroupLayout(jPCorFonteTabela);
        jPCorFonteTabela.setLayout(jPCorFonteTabelaLayout);
        jPCorFonteTabelaLayout.setHorizontalGroup(
            jPCorFonteTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        jPCorFonteTabelaLayout.setVerticalGroup(
            jPCorFonteTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPCorFundoTabela.setBorder(javax.swing.BorderFactory.createTitledBorder("Cor Fundo"));
        jPCorFundoTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPCorFundoTabelaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPCorFundoTabelaLayout = new javax.swing.GroupLayout(jPCorFundoTabela);
        jPCorFundoTabela.setLayout(jPCorFundoTabelaLayout);
        jPCorFundoTabelaLayout.setHorizontalGroup(
            jPCorFundoTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        jPCorFundoTabelaLayout.setVerticalGroup(
            jPCorFundoTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jCFonteEstiloTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simples", "Negrito", "Itálico", "Negrito e Itálico" }));

        jCFonteTipoTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agency FB", "Algerian", "Arial", "Arial Black", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Baskerville Old Face", "Bauhaus 93", "Bell MT", "Berlin Sans FB", "Berlin Sans FB Demi", "Bernard MT Condensed", "Blackadder ITC", "Bodoni MT", "Bodoni MT Black", "Bodoni MT Condensed", "Bodoni MT Poster Compressed", "Book Antiqua", "Bookman Old Style", "Bookshelf Symbol 7", "Bradley Hand ITC", "Britannic Bold", "Broadway", "Brush Script MT", "Calibri", "Calibri Light", "Californian FB", "Calisto MT", "Cambria", "Cambria Math", "Candara", "Castellar", "Centaur", "Century", "Century Gothic", "Century Schoolbook", "Chiller", "Colonna MT", "Comic Sans MS", "Consolas", "Constantia", "Cooper Black", "Copperplate Gothic Bold", "Copperplate Gothic Light", "Corbel", "Courier New", "Curlz MT", "dbldwrsw", "Dialog", "DialogInput", "Ebrima", "Edwardian Script ITC", "Elephant", "Engravers MT", "Eras Bold ITC", "Eras Demi ITC", "Eras Light ITC", "Eras Medium ITC", "Felix Titling", "Footlight MT Light", "Forte", "Franklin Gothic Book", "Franklin Gothic Demi", "Franklin Gothic Demi Cond", "Franklin Gothic Heavy", "Franklin Gothic Medium", "Franklin Gothic Medium Cond", "Freestyle Script", "French Script MT", "Gabriola", "Gadugi", "Garamond", "Georgia", "Gigi", "Gill Sans MT", "Gill Sans MT Condensed", "Gill Sans MT Ext Condensed Bold", "Gill Sans Ultra Bold", "Gill Sans Ultra Bold Condensed", "Gloucester MT Extra Condensed", "Goudy Old Style", "Goudy Stout", "Haettenschweiler", "Harlow Solid Italic", "Harrington", "High Tower Text", "Impact", "Imprint MT Shadow", "Informal Roman", "Javanese Text", "Jokerman", "Juice ITC", "Kristen ITC", "Kunstler Script", "Leelawadee UI", "Leelawadee UI Semilight", "LettrGoth12 BT", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Magneto", "Maiandra GD", "Malgun Gothic", "Malgun Gothic Semilight", "Marlett", "Matura MT Script Capitals", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft JhengHei Light", "Microsoft JhengHei UI", "Microsoft JhengHei UI Light", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Sans Serif", "Microsoft Tai Le", "Microsoft YaHei", "Microsoft YaHei Light", "Microsoft YaHei UI", "Microsoft YaHei UI Light", "Microsoft Yi Baiti", "MingLiU-ExtB", "MingLiU_HKSCS-ExtB", "Mistral", "Modern No. 20", "Mongolian Baiti", "Monospaced", "Monotype Corsiva", "MS Gothic", "MS Mincho", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Reference Specialty", "MS UI Gothic", "MT Extra", "MV Boli", "Myanmar Text", "Niagara Engraved", "Niagara Solid", "Nirmala UI", "Nirmala UI Semilight", "NSimSun", "OCR A Extended", "Old English Text MT", "Onyx", "Palace Script MT", "Palatino Linotype", "Papyrus", "Parchment", "Perpetua", "Perpetua Titling MT", "Playbill", "PMingLiU-ExtB", "Poor Richard", "Pristina", "Rage Italic", "Ravie", "Rockwell", "Rockwell Condensed", "Rockwell Extra Bold", "SansSerif", "Script MT Bold", "Segoe MDL2 Assets", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Black", "Segoe UI Emoji", "Segoe UI Historic", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Semilight", "Segoe UI Symbol", "Serif", "Showcard Gothic", "SimSun", "SimSun-ExtB", "Sitka Banner", "Sitka Display", "Sitka Heading", "Sitka Small", "Sitka Subheading", "Sitka Text", "Snap ITC", "Stencil", "Sylfaen", "Symbol", "Tahoma", "Tempus Sans ITC", "Times New Roman", "Trebuchet MS", "Tw Cen MT", "Tw Cen MT Condensed", "Tw Cen MT Condensed Extra Bold", "Verdana", "Viner Hand ITC", "Vivaldi", "Vladimir Script", "Warsaw", "Webdings", "Wide Latin", "Wingdings", "Wingdings 2", "Wingdings 3", "Yu Gothic", "Yu Gothic Light", "Yu Gothic Medium", "Yu Gothic UI", "Yu Gothic UI Light", "Yu Gothic UI Semibold", "Yu Gothic UI Semilight" }));
        jCFonteTipoTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCFonteTipoTabelaActionPerformed(evt);
            }
        });

        jRTabelaCheia.setText("Tabelas Cheias");

        jRTransparencia.setText("Transparencia");
        jRTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRTransparenciaActionPerformed(evt);
            }
        });

        jSEspacamento.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel12.setText("Espaçamento");

        jTTabela1nome.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));

        jTTabela2nome.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));

        jTTabela3nome.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));

        jTTabela4nome.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(45,true));
        jTTabela4nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTTabela4nomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPConfigTabelaLayout = new javax.swing.GroupLayout(jPConfigTabela);
        jPConfigTabela.setLayout(jPConfigTabelaLayout);
        jPConfigTabelaLayout.setHorizontalGroup(
            jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRTabela2)
                            .addComponent(jRTabela3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTTabela3nome, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTTabela2nome, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                            .addComponent(jRTabela4)
                            .addGap(1, 1, 1)
                            .addComponent(jTTabela4nome))
                        .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                            .addComponent(jRTabela1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTTabela1nome, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(9, 9, 9)
                .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCFonteEstiloTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCFonteTipoTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRTabelaCheia, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRTransparencia)
                            .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                                .addComponent(jPCorFonteTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPCorFundoTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                        .addComponent(jSFonteTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSEspacamento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(49, 49, 49)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPConfigTabelaLayout.setVerticalGroup(
            jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                                .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jRTabela1)
                                        .addComponent(jTTabela1nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton2)
                                        .addComponent(jSFonteTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jSEspacamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)))
                                .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPConfigTabelaLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jRTabela2)
                                            .addComponent(jTTabela2nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jCFonteEstiloTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jRTabela3)
                                            .addComponent(jTTabela3nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jCFonteTipoTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPConfigTabelaLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPCorFonteTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPCorFundoTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPConfigTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRTabela4)
                            .addComponent(jTTabela4nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRTabelaCheia)
                            .addComponent(jRTransparencia)))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPConfigLetreiro.setBorder(javax.swing.BorderFactory.createTitledBorder("Letreiro"));

        jRletreiro.setText("Letreiro");
        jRletreiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRletreiroActionPerformed(evt);
            }
        });

        jTletreirotexto.setDocument(new br.com.atmatech.painel.util.LimitaCaracterUpper(100,true));

        jStransicaoLetreiro.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel9.setText("Tempo Transição Letreiro");

        jPCorFundoLetreiro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cor Fundo"));
        jPCorFundoLetreiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPCorFundoLetreiroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPCorFundoLetreiroLayout = new javax.swing.GroupLayout(jPCorFundoLetreiro);
        jPCorFundoLetreiro.setLayout(jPCorFundoLetreiroLayout);
        jPCorFundoLetreiroLayout.setHorizontalGroup(
            jPCorFundoLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        jPCorFundoLetreiroLayout.setVerticalGroup(
            jPCorFundoLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPCorFonteLetreiro.setBorder(javax.swing.BorderFactory.createTitledBorder("Cor Fonte"));
        jPCorFonteLetreiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPCorFonteLetreiroMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPCorFonteLetreiroLayout = new javax.swing.GroupLayout(jPCorFonteLetreiro);
        jPCorFonteLetreiro.setLayout(jPCorFonteLetreiroLayout);
        jPCorFonteLetreiroLayout.setHorizontalGroup(
            jPCorFonteLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        jPCorFonteLetreiroLayout.setVerticalGroup(
            jPCorFonteLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPConfigLetreiroLayout = new javax.swing.GroupLayout(jPConfigLetreiro);
        jPConfigLetreiro.setLayout(jPConfigLetreiroLayout);
        jPConfigLetreiroLayout.setHorizontalGroup(
            jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigLetreiroLayout.createSequentialGroup()
                .addGroup(jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPConfigLetreiroLayout.createSequentialGroup()
                            .addComponent(jRletreiro)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTletreirotexto, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPConfigLetreiroLayout.createSequentialGroup()
                            .addComponent(jStransicaoLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPConfigLetreiroLayout.createSequentialGroup()
                        .addComponent(jPCorFundoLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPCorFonteLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPConfigLetreiroLayout.setVerticalGroup(
            jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigLetreiroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRletreiro)
                    .addComponent(jTletreirotexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStransicaoLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConfigLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPCorFundoLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPCorFonteLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBsalvar.setText("Salvar");
        jBsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalvarActionPerformed(evt);
            }
        });

        jPConfigImagem.setBorder(javax.swing.BorderFactory.createTitledBorder("Plano de Fundo"));

        jCTipoLocalizacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RESIZE", "CENTER", "SIDE_BY_SIDE" }));
        jCTipoLocalizacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoLocalizacaoActionPerformed(evt);
            }
        });

        jLabel7.setText("Tipo de Localização");

        jSTamanhox.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel11.setText("Tamanho Plano de Fundo");

        jSTamanhoy.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jBImagem1.setText("...");
        jBImagem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImagem1ActionPerformed(evt);
            }
        });

        jBImagemTopo.setText("...");
        jBImagemTopo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImagemTopoActionPerformed(evt);
            }
        });

        jBImagemLateral.setText("...");
        jBImagemLateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImagemLateralActionPerformed(evt);
            }
        });

        jPCImagemFundo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPCImagemFundoLayout = new javax.swing.GroupLayout(jPCImagemFundo);
        jPCImagemFundo.setLayout(jPCImagemFundoLayout);
        jPCImagemFundoLayout.setHorizontalGroup(
            jPCImagemFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPCImagemFundoLayout.setVerticalGroup(
            jPCImagemFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );

        jPCImagemTopo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPCImagemTopoLayout = new javax.swing.GroupLayout(jPCImagemTopo);
        jPCImagemTopo.setLayout(jPCImagemTopoLayout);
        jPCImagemTopoLayout.setHorizontalGroup(
            jPCImagemTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPCImagemTopoLayout.setVerticalGroup(
            jPCImagemTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );

        jPCImagemLateral.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPCImagemLateralLayout = new javax.swing.GroupLayout(jPCImagemLateral);
        jPCImagemLateral.setLayout(jPCImagemLateralLayout);
        jPCImagemLateralLayout.setHorizontalGroup(
            jPCImagemLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPCImagemLateralLayout.setVerticalGroup(
            jPCImagemLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );

        jLabel14.setText("Imagem Fundo");

        jLabel15.setText("Imagem Topo");

        jLabel16.setText("Imagem Lateral");

        javax.swing.GroupLayout jPConfigImagemLayout = new javax.swing.GroupLayout(jPConfigImagem);
        jPConfigImagem.setLayout(jPConfigImagemLayout);
        jPConfigImagemLayout.setHorizontalGroup(
            jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigImagemLayout.createSequentialGroup()
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigImagemLayout.createSequentialGroup()
                        .addComponent(jSTamanhox, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSTamanhoy, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11)
                    .addGroup(jPConfigImagemLayout.createSequentialGroup()
                        .addComponent(jCTipoLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jPCImagemFundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBImagem1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPCImagemTopo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jBImagemTopo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBImagemLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jPCImagemLateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPConfigImagemLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPCImagemFundo, jPCImagemLateral, jPCImagemTopo});

        jPConfigImagemLayout.setVerticalGroup(
            jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConfigImagemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCTipoLocalizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSTamanhox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSTamanhoy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPConfigImagemLayout.createSequentialGroup()
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPConfigImagemLayout.createSequentialGroup()
                        .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPCImagemLateral, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPCImagemTopo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPConfigImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBImagemTopo)
                            .addComponent(jBImagemLateral)))
                    .addGroup(jPConfigImagemLayout.createSequentialGroup()
                        .addComponent(jPCImagemFundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBImagem1)))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        jPConfigImagemLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPCImagemFundo, jPCImagemLateral, jPCImagemTopo});

        javax.swing.GroupLayout jDlayoutLayout = new javax.swing.GroupLayout(jDlayout.getContentPane());
        jDlayout.getContentPane().setLayout(jDlayoutLayout);
        jDlayoutLayout.setHorizontalGroup(
            jDlayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDlayoutLayout.createSequentialGroup()
                .addComponent(jBsalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPConfigLetreiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPConfigImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPConfigTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDlayoutLayout.setVerticalGroup(
            jDlayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDlayoutLayout.createSequentialGroup()
                .addComponent(jPConfigTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPConfigLetreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPConfigImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBsalvar)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jDFileImagem.setTitle("ARQUIVO");
        jDFileImagem.setMinimumSize(new java.awt.Dimension(614, 397));
        jDFileImagem.setModal(true);

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setControlButtonsAreShown(false);
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDFileImagemLayout = new javax.swing.GroupLayout(jDFileImagem.getContentPane());
        jDFileImagem.getContentPane().setLayout(jDFileImagemLayout);
        jDFileImagemLayout.setHorizontalGroup(
            jDFileImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDFileImagemLayout.setVerticalGroup(
            jDFileImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDFileImagemLayout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDColorLetreiro.setTitle("Cor");
        jDColorLetreiro.setMinimumSize(new java.awt.Dimension(615, 350));
        jDColorLetreiro.setModal(true);
        jDColorLetreiro.setResizable(false);

        jColorChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jColorChooser1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDColorLetreiroLayout = new javax.swing.GroupLayout(jDColorLetreiro.getContentPane());
        jDColorLetreiro.getContentPane().setLayout(jDColorLetreiroLayout);
        jDColorLetreiroLayout.setHorizontalGroup(
            jDColorLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jDColorLetreiroLayout.setVerticalGroup(
            jDColorLetreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDColorLetreiroLayout.createSequentialGroup()
                .addComponent(jColorChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDLayoutTabelas.setTitle("Dados Tabelas");
        jDLayoutTabelas.setMinimumSize(new java.awt.Dimension(1000, 590));
        jDLayoutTabelas.setModal(true);

        jPanel16.setAutoscrolls(true);
        jPanel16.setPreferredSize(new java.awt.Dimension(900, 496));
        jPanel16.setLayout(new java.awt.GridLayout(2, 2));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabela 01"));

        jTCTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Produto", "UNID", "Oferta", "Valor 1", "Valor 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTCTable1);
        if (jTCTable1.getColumnModel().getColumnCount() > 0) {
            jTCTable1.getColumnModel().getColumn(0).setResizable(false);
            jTCTable1.getColumnModel().getColumn(1).setResizable(false);
            jTCTable1.getColumnModel().getColumn(2).setResizable(false);
            jTCTable1.getColumnModel().getColumn(3).setResizable(false);
            jTCTable1.getColumnModel().getColumn(4).setResizable(false);
            jTCTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel17);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabela 02"));

        jTCTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Produto", "UNID", "Oferta", "Valor 1", "Valor 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCTable2MouseClicked(evt);
            }
        });
        jTCTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCTable2KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTCTable2);
        if (jTCTable2.getColumnModel().getColumnCount() > 0) {
            jTCTable2.getColumnModel().getColumn(0).setResizable(false);
            jTCTable2.getColumnModel().getColumn(1).setResizable(false);
            jTCTable2.getColumnModel().getColumn(2).setResizable(false);
            jTCTable2.getColumnModel().getColumn(3).setResizable(false);
            jTCTable2.getColumnModel().getColumn(4).setResizable(false);
            jTCTable2.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel18);

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabela 03"));

        jTCTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Produto", "UNID", "Oferta", "Valor 1", "Valor 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCTable3KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTCTable3);
        if (jTCTable3.getColumnModel().getColumnCount() > 0) {
            jTCTable3.getColumnModel().getColumn(0).setResizable(false);
            jTCTable3.getColumnModel().getColumn(1).setResizable(false);
            jTCTable3.getColumnModel().getColumn(2).setResizable(false);
            jTCTable3.getColumnModel().getColumn(3).setResizable(false);
            jTCTable3.getColumnModel().getColumn(4).setResizable(false);
            jTCTable3.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );

        jPanel16.add(jPanel19);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabela 04"));

        jTCTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Produto", "UNID", "Oferta", "Valor 1", "Valor 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCTable4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCTable4KeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTCTable4);
        if (jTCTable4.getColumnModel().getColumnCount() > 0) {
            jTCTable4.getColumnModel().getColumn(0).setResizable(false);
            jTCTable4.getColumnModel().getColumn(1).setResizable(false);
            jTCTable4.getColumnModel().getColumn(2).setResizable(false);
            jTCTable4.getColumnModel().getColumn(3).setResizable(false);
            jTCTable4.getColumnModel().getColumn(4).setResizable(false);
            jTCTable4.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
        );

        jPanel16.add(jPanel20);

        jButton3.setText("Salvar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDLayoutTabelasLayout = new javax.swing.GroupLayout(jDLayoutTabelas.getContentPane());
        jDLayoutTabelas.getContentPane().setLayout(jDLayoutTabelasLayout);
        jDLayoutTabelasLayout.setHorizontalGroup(
            jDLayoutTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDLayoutTabelasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(927, Short.MAX_VALUE))
            .addGroup(jDLayoutTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDLayoutTabelasLayout.setVerticalGroup(
            jDLayoutTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDLayoutTabelasLayout.createSequentialGroup()
                .addGap(498, 498, 498)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDLayoutTabelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDLayoutTabelasLayout.createSequentialGroup()
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(94, 94, 94)))
        );

        jDConsultaProduto.setTitle("Consulta Produto");
        jDConsultaProduto.setMinimumSize(new java.awt.Dimension(715, 340));
        jDConsultaProduto.setModal(true);
        jDConsultaProduto.setResizable(false);

        jTConsultaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Produto", "Oferta", "Unidade", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTConsultaProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTConsultaProdutoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTConsultaProduto);
        if (jTConsultaProduto.getColumnModel().getColumnCount() > 0) {
            jTConsultaProduto.getColumnModel().getColumn(0).setResizable(false);
            jTConsultaProduto.getColumnModel().getColumn(1).setResizable(false);
            jTConsultaProduto.getColumnModel().getColumn(2).setResizable(false);
            jTConsultaProduto.getColumnModel().getColumn(3).setResizable(false);
            jTConsultaProduto.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jDConsultaProdutoLayout = new javax.swing.GroupLayout(jDConsultaProduto.getContentPane());
        jDConsultaProduto.getContentPane().setLayout(jDConsultaProdutoLayout);
        jDConsultaProdutoLayout.setHorizontalGroup(
            jDConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
        jDConsultaProdutoLayout.setVerticalGroup(
            jDConsultaProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPbackground.setBackground(new java.awt.Color(204, 0, 0));
        jPbackground.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPCentral.setBackground(new java.awt.Color(204, 0, 0));
        jPCentral.setForeground(new java.awt.Color(204, 0, 0));
        jPCentral.setLayout(new javax.swing.BoxLayout(jPCentral, javax.swing.BoxLayout.LINE_AXIS));

        jPImagemTopo.setBackground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPImagemTopoLayout = new javax.swing.GroupLayout(jPImagemTopo);
        jPImagemTopo.setLayout(jPImagemTopoLayout);
        jPImagemTopoLayout.setHorizontalGroup(
            jPImagemTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPImagemTopoLayout.setVerticalGroup(
            jPImagemTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 87, Short.MAX_VALUE)
        );

        jPImagemLateral.setBackground(new java.awt.Color(204, 0, 0));
        jPImagemLateral.setPreferredSize(new java.awt.Dimension(137, 0));

        javax.swing.GroupLayout jPImagemLateralLayout = new javax.swing.GroupLayout(jPImagemLateral);
        jPImagemLateral.setLayout(jPImagemLateralLayout);
        jPImagemLateralLayout.setHorizontalGroup(
            jPImagemLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 137, Short.MAX_VALUE)
        );
        jPImagemLateralLayout.setVerticalGroup(
            jPImagemLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPletreiro.setBackground(new java.awt.Color(204, 0, 0));
        jPletreiro.setPreferredSize(new java.awt.Dimension(1394, 53));

        jPletreiroint.setBackground(new java.awt.Color(204, 0, 0));

        jLletreirointFrase.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        javax.swing.GroupLayout jPletreirointLayout = new javax.swing.GroupLayout(jPletreiroint);
        jPletreiroint.setLayout(jPletreirointLayout);
        jPletreirointLayout.setHorizontalGroup(
            jPletreirointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPletreirointLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLletreirointFrase, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPletreirointLayout.setVerticalGroup(
            jPletreirointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLletreirointFrase, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPletreiroLayout = new javax.swing.GroupLayout(jPletreiro);
        jPletreiro.setLayout(jPletreiroLayout);
        jPletreiroLayout.setHorizontalGroup(
            jPletreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPletreiroLayout.createSequentialGroup()
                .addGap(0, 1215, Short.MAX_VALUE)
                .addComponent(jPletreiroint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPletreiroLayout.setVerticalGroup(
            jPletreiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPletreiroLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPletreiroint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPbackgroundLayout = new javax.swing.GroupLayout(jPbackground);
        jPbackground.setLayout(jPbackgroundLayout);
        jPbackgroundLayout.setHorizontalGroup(
            jPbackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPbackgroundLayout.createSequentialGroup()
                .addComponent(jPImagemLateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPletreiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPImagemTopo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPbackgroundLayout.setVerticalGroup(
            jPbackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPbackgroundLayout.createSequentialGroup()
                .addComponent(jPImagemTopo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPbackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                    .addComponent(jPImagemLateral, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addComponent(jPletreiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu1.setText("Configuração");

        jMenuItem1.setText("Carga");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Layout");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenu.add(jMenu1);

        jMenu2.setText("Sair");

        jMenuItem3.setText("Sair");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenu.add(jMenu2);

        setJMenuBar(jMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPbackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPbackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:  
        setVisibleJdcarga();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jMenu.setVisible(false);
        DBConfigBeans dbc = new DBConfigBeans();
        Tb_ConfigBeans tbc = new Tb_ConfigBeans();
        if (tbc.getTerminal() != null) {
            jRTabela1.setSelected(tbc.isTabela1());
            jRTabela2.setSelected(tbc.isTabela2());
            jRTabela3.setSelected(tbc.isTabela3());
            jRTabela4.setSelected(tbc.isTabela4());
            jTTabela1nome.setText(tbc.getTabela1nome());
            jTTabela2nome.setText(tbc.getTabela2nome());
            jTTabela3nome.setText(tbc.getTabela3nome());
            jTTabela4nome.setText(tbc.getTabela4nome());
            jRTransparencia.setSelected(tbc.isTransparencia());
            jRletreiro.setSelected(tbc.isLetreiro());
            jSFonteTabela.setValue((Integer) tbc.getFonteTabela());
            jTletreirotexto.setText(tbc.getLetreirotexto());
            jStransicaoLetreiro.setValue((Integer) tbc.getLetreirotempo());
            jRTabelaCheia.setSelected(tbc.isTabelacheia());
            jCTipoLocalizacao.setSelectedItem(tbc.getTipolocalizacao());
            try {
                //carrega o config com imagem
                //imagem fundo            
                jPCImagemFundo.removeAll();
                configfundo = new JImagePanel(loadImage(tbc.getArquivoFundoImagem1()));
                configfundo.setSize(100, 100);
                configfundo.setVisible(true);
                configfundo.setFillType(JImagePanel.FillType.RESIZE);
                jPCImagemFundo.add(configfundo);
                jPCImagemFundo.validate();
                jPCImagemFundo.repaint();
                //imagem lateral
                jPCImagemLateral.removeAll();
                configlateral = new JImagePanel(loadImage(tbc.getArquivoLateralImagem()));
                configlateral.setSize(100, 100);
                configlateral.setVisible(true);
                configlateral.setFillType(JImagePanel.FillType.RESIZE);
                jPCImagemLateral.add(configlateral);
                jPCImagemLateral.validate();
                jPCImagemLateral.repaint();
                //imagem topo
                jPCImagemTopo.removeAll();
                configtopo = new JImagePanel(loadImage(tbc.getArquivoTopoImagem()));
                configtopo.setSize(100, 100);
                configtopo.setVisible(true);
                configtopo.setFillType(JImagePanel.FillType.RESIZE);
                jPCImagemTopo.add(configtopo);
                jPCImagemTopo.validate();
                jPCImagemTopo.repaint();
                // configfundo = new JImagePanel(loadImage(tbc.getArquivoFundoImagem1()));
                configlateral = new JImagePanel(loadImage(tbc.getArquivoLateralImagem()));
                configtopo = new JImagePanel(loadImage(tbc.getArquivoTopoImagem()));
            } catch (IOException ex) {
                new DBConfig().createArqLog("jMenuItem2ActionPerformed-ViewPrincipal:" + ex);
            }
            jSTamanhox.setValue(tbc.getTamanhox());
            jSTamanhoy.setValue(tbc.getTamanhoy());
            jPCorFundoLetreiro.setBackground(new Color(Integer.valueOf(tbc.getLetreirocorfundo())));
            jPCorFonteLetreiro.setBackground(new Color(Integer.valueOf(tbc.getLetreirocorfonte())));
            jPCorFonteTabela.setBackground(new Color(Integer.valueOf(tbc.getCorfontetabela())));
            jPCorFundoTabela.setBackground(new Color(Integer.valueOf(tbc.getCorfundotabela())));
            jCCTCodigo.setSelected(tbc.isCtcodigo());
            jCCTProduto.setSelected(tbc.isCtproduto());
            jCCTOferta.setSelected(tbc.isCtoferta());
            jCCTValor1.setSelected(tbc.isCtvalor1());
            jCCTValor2.setSelected(tbc.isCtvalor2());
            jTNomevalor1.setText(tbc.getNomevalor1());
            jTNomeValor2.setText(tbc.getNomevalor2());
            jCCTUnid.setSelected(tbc.isCtunid());
            jCFonteEstiloTabela.setSelectedIndex(tbc.getFonteestilotabela());
            jCFonteTipoTabela.setSelectedItem(tbc.getFontetipotabela());
            jSEspacamento.setValue(tbc.getEspacamento());
        }
        jDlayout.setLocationRelativeTo(this);
        jDlayout.setVisible(true);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jCTipo.getSelectedItem().toString().equals("Management")) {
            try {
                new DBConfigManagement().createConfigManagementInicial();
                System.exit(0);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao Salvar" + ex);
            }
        } else {
            DBConfigBeans dbc = new DBConfigBeans();
            dbc.setDirdb(jTlocalbalancabanco.getText());
            dbc.setUser(jTusuariobalancabanco.getText());
            dbc.setPassword(jTsenhabalancabanco.getText());
            dbc.setLocaldirdb(jTlocalbanco.getText());
            dbc.setLocalpassword(jTsenhabanco.getText());
            dbc.setLocaluser(jTusuariobanco.getText());
            dbc.setTerminal((Integer) jSTerminal.getValue());
            dbc.setTipo(jCTipo.getSelectedItem().toString());
            try {
                new DBConfig().createConfig(dbc);
                jDcarga.setVisible(false);
                System.exit(0);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao Salvar" + ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTlocalbalancabancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlocalbalancabancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTlocalbalancabancoActionPerformed

    private void jTlocalbancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlocalbancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTlocalbancoActionPerformed

    private void jTsenhabancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTsenhabancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTsenhabancoActionPerformed

    private void jBsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalvarActionPerformed
        // TODO add your handling code here:  
        try {
            Tb_ConfigBeans tbc = new Tb_ConfigBeans();
            tbc.setTerminal(new DBConfigBeans().getTerminal());
            tbc.setTabela1(jRTabela1.isSelected());
            tbc.setTabela2(jRTabela2.isSelected());
            tbc.setTabela3(jRTabela3.isSelected());
            tbc.setTabela4(jRTabela4.isSelected());
            tbc.setTabela1nome(jTTabela1nome.getText());
            tbc.setTabela2nome(jTTabela2nome.getText());
            tbc.setTabela3nome(jTTabela3nome.getText());
            tbc.setTabela4nome(jTTabela4nome.getText());
            tbc.setTransparencia(jRTransparencia.isSelected());
            tbc.setLetreiro(jRletreiro.isSelected());
            tbc.setFonteTabela((Integer) jSFonteTabela.getValue());
            tbc.setLetreirotexto(jTletreirotexto.getText());
            tbc.setLetreirotempo((Integer) jStransicaoLetreiro.getValue());
            tbc.setTabelacheia(jRTabelaCheia.isSelected());
            tbc.setTipolocalizacao(jCTipoLocalizacao.getSelectedItem().toString());
            try {
                tbc.setFundoimagem1(converteArquivo(configfundo.getImage()));
                tbc.setLateralimagem(converteArquivo(configlateral.getImage()));
                tbc.setTopoimagem(converteArquivo(configtopo.getImage()));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao Salvar Imagem\n" + ex);
            }
            tbc.setTamanhox((Integer) jSTamanhox.getValue());
            tbc.setTamanhoy((Integer) jSTamanhoy.getValue());
            tbc.setLetreirocorfundo(Integer.valueOf(jPCorFundoLetreiro.getBackground().getRGB()));
            tbc.setLetreirocorfonte(Integer.valueOf(jPCorFonteLetreiro.getBackground().getRGB()));
            tbc.setCorfontetabela(Integer.valueOf(jPCorFonteTabela.getBackground().getRGB()));
            tbc.setCorfundotabela(Integer.valueOf(jPCorFundoTabela.getBackground().getRGB()));
            tbc.setCtcodigo(jCCTCodigo.isSelected());
            tbc.setCtproduto(jCCTProduto.isSelected());
            tbc.setCtoferta(jCCTOferta.isSelected());
            tbc.setCtvalor1(jCCTValor1.isSelected());
            tbc.setCtvalor2(jCCTValor2.isSelected());
            tbc.setNomevalor1(jTNomevalor1.getText());
            tbc.setNomevalor2(jTNomeValor2.getText());
            tbc.setCtunid(jCCTUnid.isSelected());
            tbc.setFonteestilotabela(jCFonteEstiloTabela.getSelectedIndex());
            tbc.setFontetipotabela(jCFonteTipoTabela.getSelectedItem().toString());
            tbc.setEspacamento((Integer) jSEspacamento.getValue());
            int key = new Tb_ConfigDao().setTb_Config(tbc);
            if (key > 0) {
                new Tb_ConfigDao().delTb_Config(new DBConfigBeans().getTerminal(), key - 1);
            }
            jDlayout.setVisible(false);
            if (jPCentral.getComponentCount() > 0) {
                for (int i = 0; i < jPCentral.getComponentCount(); i++) {
                    jPCentral.getComponent(i).setVisible(false);
                }
                jPCentral.setVisible(false);
                jPCentral.setVisible(true);
            }
            inicializaGrade();
            inicializaLetreiro();
            inicializaTipoLayout();
            inicializaCorBackground();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Salvar Nova Configuracao\n" + ex);
        }
    }//GEN-LAST:event_jBsalvarActionPerformed

    private void jRletreiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRletreiroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRletreiroActionPerformed

    private void jCTipoLocalizacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoLocalizacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCTipoLocalizacaoActionPerformed

    private void jBImagem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImagem1ActionPerformed
        // TODO add your handling code here:
        jDFileImagem.setLocationRelativeTo(null);
        jDFileImagem.setVisible(true);
        String file = jFileChooser1.getSelectedFile().toString();
        try {
            jPCImagemFundo.removeAll();
            configfundo = new JImagePanel(loadImage(file));
            configfundo.setSize(100, 100);
            configfundo.setVisible(true);
            configfundo.setFillType(JImagePanel.FillType.RESIZE);
            jPCImagemFundo.add(configfundo);
            jPCImagemFundo.validate();
            jPCImagemFundo.repaint();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Configurar Nova Imagem de Fundo" + ex);
        }
    }//GEN-LAST:event_jBImagem1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:       
        jDFileImagem.setVisible(false);
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void jPCorFundoLetreiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPCorFundoLetreiroMouseClicked
        // TODO add your handling code here:
        jDColorLetreiro.setLocationRelativeTo(null);
        jDColorLetreiro.setVisible(true);
        jPCorFundoLetreiro.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jPCorFundoLetreiroMouseClicked

    private void jColorChooser1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jColorChooser1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            jDColorLetreiro.setVisible(false);
        }
    }//GEN-LAST:event_jColorChooser1MouseClicked

    private void jPCorFonteLetreiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPCorFonteLetreiroMouseClicked
        // TODO add your handling code here:
        jDColorLetreiro.setLocationRelativeTo(null);
        jDColorLetreiro.setVisible(true);
        jPCorFonteLetreiro.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jPCorFonteLetreiroMouseClicked

    private void jBImagemTopoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImagemTopoActionPerformed
        // TODO add your handling code here:
        jDFileImagem.setLocationRelativeTo(null);
        jDFileImagem.setVisible(true);
        String file = jFileChooser1.getSelectedFile().toString();
        try {
            jPCImagemTopo.removeAll();
            configtopo = new JImagePanel(loadImage(file));
            configtopo.setSize(100, 100);
            configtopo.setVisible(true);
            configtopo.setFillType(JImagePanel.FillType.RESIZE);
            jPCImagemTopo.add(configtopo);
            jPCImagemTopo.validate();
            jPCImagemTopo.repaint();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Configurar Nova Imagem de Topo" + ex);
        }
    }//GEN-LAST:event_jBImagemTopoActionPerformed

    private void jBImagemLateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImagemLateralActionPerformed
        // TODO add your handling code here:
        jDFileImagem.setLocationRelativeTo(null);
        jDFileImagem.setVisible(true);
        String file = jFileChooser1.getSelectedFile().toString();
        try {
            jPCImagemLateral.removeAll();
            configlateral = new JImagePanel(loadImage(file));
            configlateral.setSize(100, 100);
            configlateral.setVisible(true);
            configlateral.setFillType(JImagePanel.FillType.RESIZE);
            jPCImagemLateral.add(configlateral);
            jPCImagemLateral.validate();
            jPCImagemLateral.repaint();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Configurar Nova Imagem Lateral" + ex);
        }
    }//GEN-LAST:event_jBImagemLateralActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:        
        try {
            DBConfigBeans dbc = new DBConfig().getConfig();
            if (dbc.getTipo().equals("Terminal")) {
                setInicializaTerminal();
            } else if (dbc.getTipo().equals("Management")) {
                setInicializaManagement();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Determine o Tipo Desta Estação");
                setVisibleJdcarga();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Carregar Config \n" + ex);
            System.exit(0);
        }


    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        inicializaTabelasConfig();
        consultaTbProdPainel();
        jDLayoutTabelas.setLocationRelativeTo(this);
        jDLayoutTabelas.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTNomevalor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNomevalor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTNomevalor1ActionPerformed

    private void jPCorFonteTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPCorFonteTabelaMouseClicked
        // TODO add your handling code here:
        jDColorLetreiro.setLocationRelativeTo(null);
        jDColorLetreiro.setVisible(true);
        jPCorFonteTabela.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jPCorFonteTabelaMouseClicked

    private void jPCorFundoTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPCorFundoTabelaMouseClicked
        // TODO add your handling code here:
        jDColorLetreiro.setLocationRelativeTo(null);
        jDColorLetreiro.setVisible(true);
        jPCorFundoTabela.setBackground(jColorChooser1.getColor());
    }//GEN-LAST:event_jPCorFundoTabelaMouseClicked

    private void jTCTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCTable1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            configtabela = 1;
            consultaProdutoConfigTabela();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            deletaProdutoConfigTabela1();
        }

    }//GEN-LAST:event_jTCTable1KeyPressed

    private void jTConsultaProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTConsultaProdutoMouseClicked
        // TODO add your handling code here:        
        if (evt.getClickCount() == 2) {
            if (configtabela == 1) {
                jTCTable1.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 0), jTCTable1.getSelectedRow(), 0);
                jTCTable1.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 1), jTCTable1.getSelectedRow(), 1);
                jTCTable1.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 3), jTCTable1.getSelectedRow(), 2);
                jTCTable1.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 2), jTCTable1.getSelectedRow(), 3);
                jTCTable1.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 4), jTCTable1.getSelectedRow(), 4);
            } else if (configtabela == 2) {
                jTCTable2.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 0), jTCTable2.getSelectedRow(), 0);
                jTCTable2.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 1), jTCTable2.getSelectedRow(), 1);
                jTCTable2.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 3), jTCTable2.getSelectedRow(), 2);
                jTCTable2.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 2), jTCTable2.getSelectedRow(), 3);
                jTCTable2.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 4), jTCTable2.getSelectedRow(), 4);
            } else if (configtabela == 3) {
                jTCTable3.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 0), jTCTable3.getSelectedRow(), 0);
                jTCTable3.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 1), jTCTable3.getSelectedRow(), 1);
                jTCTable3.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 3), jTCTable3.getSelectedRow(), 2);
                jTCTable3.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 2), jTCTable3.getSelectedRow(), 3);
                jTCTable3.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 4), jTCTable3.getSelectedRow(), 4);
            } else if (configtabela == 4) {
                jTCTable4.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 0), jTCTable4.getSelectedRow(), 0);
                jTCTable4.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 1), jTCTable4.getSelectedRow(), 1);
                jTCTable4.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 3), jTCTable4.getSelectedRow(), 2);
                jTCTable4.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 2), jTCTable4.getSelectedRow(), 3);
                jTCTable4.setValueAt(jTConsultaProduto.getValueAt(jTConsultaProduto.getSelectedRow(), 4), jTCTable4.getSelectedRow(), 4);
            }

            jDConsultaProduto.setVisible(false);
        }
    }//GEN-LAST:event_jTConsultaProdutoMouseClicked

    private void jTCTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCTable2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTCTable2MouseClicked

    private void jTCTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCTable2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            configtabela = 2;
            consultaProdutoConfigTabela();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            deletaProdutoConfigTabela2();
        }
    }//GEN-LAST:event_jTCTable2KeyPressed

    private void jTCTable3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCTable3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            configtabela = 3;
            consultaProdutoConfigTabela();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            deletaProdutoConfigTabela3();
        }
    }//GEN-LAST:event_jTCTable3KeyPressed

    private void jTCTable4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCTable4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            configtabela = 4;
            consultaProdutoConfigTabela();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            deletaProdutoConfigTabela4();
        }
    }//GEN-LAST:event_jTCTable4KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setConfigProdTerminal();
        if (jPCentral.getComponentCount() > 0) {
            for (int i = 0; i < jPCentral.getComponentCount(); i++) {
                jPCentral.getComponent(i).setVisible(false);
            }
            jPCentral.setVisible(false);
            jPCentral.setVisible(true);
        }
        inicializaGrade();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCFonteTipoTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCFonteTipoTabelaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCFonteTipoTabelaActionPerformed

    private void jRTabela2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRTabela2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRTabela2ActionPerformed

    private void jTTabela4nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTTabela4nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTTabela4nomeActionPerformed

    private void jRTabela3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRTabela3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRTabela3ActionPerformed

    private void jRTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRTransparenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRTransparenciaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBImagem1;
    private javax.swing.JButton jBImagemLateral;
    private javax.swing.JButton jBImagemTopo;
    private javax.swing.JButton jBsalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCCTCodigo;
    private javax.swing.JCheckBox jCCTOferta;
    private javax.swing.JCheckBox jCCTProduto;
    private javax.swing.JCheckBox jCCTUnid;
    private javax.swing.JCheckBox jCCTValor1;
    private javax.swing.JCheckBox jCCTValor2;
    private javax.swing.JComboBox<String> jCFonteEstiloTabela;
    private javax.swing.JComboBox<String> jCFonteTipoTabela;
    private javax.swing.JComboBox<String> jCTipo;
    private javax.swing.JComboBox<String> jCTipoLocalizacao;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JDialog jDColorLetreiro;
    private javax.swing.JDialog jDConsultaProduto;
    private javax.swing.JDialog jDFileImagem;
    private javax.swing.JDialog jDLayoutTabelas;
    private javax.swing.JDialog jDcarga;
    private javax.swing.JDialog jDlayout;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLletreirointFrase;
    public javax.swing.JMenuBar jMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPCImagemFundo;
    private javax.swing.JPanel jPCImagemLateral;
    private javax.swing.JPanel jPCImagemTopo;
    public javax.swing.JPanel jPCentral;
    private javax.swing.JPanel jPConfigImagem;
    private javax.swing.JPanel jPConfigLetreiro;
    private javax.swing.JPanel jPConfigTabela;
    private javax.swing.JPanel jPCorFonteLetreiro;
    private javax.swing.JPanel jPCorFonteTabela;
    private javax.swing.JPanel jPCorFundoLetreiro;
    private javax.swing.JPanel jPCorFundoTabela;
    private javax.swing.JPanel jPImagemLateral;
    private javax.swing.JPanel jPImagemTopo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPbackground;
    public javax.swing.JPanel jPletreiro;
    private javax.swing.JPanel jPletreiroint;
    private javax.swing.JRadioButton jRTabela1;
    private javax.swing.JRadioButton jRTabela2;
    private javax.swing.JRadioButton jRTabela3;
    private javax.swing.JRadioButton jRTabela4;
    private javax.swing.JRadioButton jRTabelaCheia;
    private javax.swing.JRadioButton jRTransparencia;
    private javax.swing.JRadioButton jRletreiro;
    private javax.swing.JSpinner jSEspacamento;
    private javax.swing.JSpinner jSFonteTabela;
    private javax.swing.JSpinner jSTamanhox;
    private javax.swing.JSpinner jSTamanhoy;
    private javax.swing.JSpinner jSTerminal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSpinner jStransicaoLetreiro;
    private javax.swing.JTable jTCTable1;
    private javax.swing.JTable jTCTable2;
    private javax.swing.JTable jTCTable3;
    private javax.swing.JTable jTCTable4;
    private javax.swing.JTable jTConsultaProduto;
    private javax.swing.JTextField jTNomeValor2;
    private javax.swing.JTextField jTNomevalor1;
    private javax.swing.JTextField jTTabela1nome;
    private javax.swing.JTextField jTTabela2nome;
    private javax.swing.JTextField jTTabela3nome;
    private javax.swing.JTextField jTTabela4nome;
    private javax.swing.JTextField jTletreirotexto;
    private javax.swing.JTextField jTlocalbalancabanco;
    private javax.swing.JTextField jTlocalbanco;
    private javax.swing.JTextField jTsenhabalancabanco;
    private javax.swing.JTextField jTsenhabanco;
    private javax.swing.JTextField jTusuariobalancabanco;
    private javax.swing.JTextField jTusuariobanco;
    // End of variables declaration//GEN-END:variables

    private void inicializarAtalhos() {
        KeyStroke keyStrokeJBalterar = KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0);
        String actionNameJBalterar = "TECLA_F3";
        InputMap inputMapJBalterar = jPbackground.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);

        inputMapJBalterar.put(keyStrokeJBalterar, actionNameJBalterar);
        ActionMap actionMapJBMARCA = jPbackground.getActionMap();
        actionMapJBMARCA.put(actionNameJBalterar, ativaMenu);
    }

    Action ativaMenu = new AbstractAction() {  //funcao da acao do botao
        @Override
        public void actionPerformed(ActionEvent e) {
            //simula o click no botão              
            if (jMenu.isVisible()) {
                jMenu.setVisible(false);
            } else {
                jMenu.setVisible(true);
            }
        }
    };

    private void inicializaGrade() {
        Tb_ConfigBeans tbc = new Tb_ConfigBeans();

        ViewLayoutTabelas view = new ViewLayoutTabelas(tbc.isTabela1(), tbc.isTabela2(), tbc.isTabela3(), tbc.isTabela4(), this);
        view.setSize(jPCentral.getSize());
        jPCentral.add(view);
        jPCentral.repaint();
        jPCentral.validate();
    }

    private void threadletreiro(final String frase, final Integer tempo) {
        x = jPletreiro.getSize().width;
        vthreadletreiro = new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Thread.sleep(tempo);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(ViewPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    jLletreirointFrase.setText(frase.toUpperCase());
                    jPletreiroint.setLocation(x--, jPletreiroint.getY());
                    if ((0 - (jLletreirointFrase.getText().length() * 20)) >= x) {
                        x = jPletreiro.getSize().width;
                    }
                }
            }
        });
        vthreadletreiro.start();

    }

    private void inicializaLetreiro() {
        DBConfigBeans dbc = new DBConfigBeans();
        Tb_ConfigBeans tbc = new Tb_ConfigBeans();
        jPletreiro.setBackground(new Color(Integer.valueOf(tbc.getLetreirocorfundo())));
        jPletreiroint.setBackground(new Color(Integer.valueOf(tbc.getLetreirocorfundo())));
        jLletreirointFrase.setForeground(new Color(Integer.valueOf(tbc.getLetreirocorfonte())));
        if (tbc.isLetreiro()) {
            if (vthreadletreiro == null) {
                jPletreiro.setVisible(true);
                threadletreiro(tbc.getLetreirotexto(), tbc.getLetreirotempo());
            } else if (vthreadletreiro.isAlive()) {
                vthreadletreiro.stop();
                jPletreiro.setVisible(false);
                jPletreiro.setVisible(true);
                threadletreiro(tbc.getLetreirotexto(), tbc.getLetreirotempo());
            } else {
                jPletreiro.setVisible(true);
                threadletreiro(tbc.getLetreirotexto(), tbc.getLetreirotempo());
            }
        } else {
            if (vthreadletreiro != null) {
                vthreadletreiro.stop();
            }
            jPletreiro.setVisible(false);
        }
    }

    private void inicializaBackground() {
        try {
            JImagePanel background;
            JImagePanel backgroundtopo;
            JImagePanel backgroundlateral;
            DBConfigBeans dbc = new DBConfigBeans();
            Tb_ConfigBeans tbc = new Tb_ConfigBeans();
            background = new JImagePanel(loadImage(tbc.getArquivoFundoImagem1()));
            background.setVisible(true);
            background.setSize(tbc.getTamanhox(), tbc.getTamanhoy());
            String filltype = tbc.getTipolocalizacao();
            background.setFillType(JImagePanel.FillType.valueOf(filltype));
            //jPbackground.add(background);
            if (jPbackground.getComponentCount() == 5) {
                jPbackground.remove(4);
            }
            jPbackground.add(background);
            background.setLocation((jPbackground.getSize().width - tbc.getTamanhox()) / 2, (jPbackground.getSize().height - tbc.getTamanhoy()) / 2);
            jPbackground.repaint();
            jPbackground.validate();
            if (!tbc.isTabelacheia()) {
                jPImagemTopo.removeAll();
                jPImagemLateral.removeAll();
                backgroundtopo = new JImagePanel(loadImage(tbc.getArquivoTopoImagem()));
                backgroundtopo.setVisible(true);
                backgroundtopo.setFillType(JImagePanel.FillType.RESIZE);
                jPImagemTopo.add(backgroundtopo);
                jPImagemTopo.repaint();
                jPImagemTopo.validate();
                backgroundtopo.setSize(jPImagemTopo.getSize());
                backgroundlateral = new JImagePanel(loadImage(tbc.getArquivoLateralImagem()));
                backgroundlateral.setVisible(true);
                backgroundlateral.setFillType(JImagePanel.FillType.RESIZE);
                jPImagemLateral.add(backgroundlateral);
                jPImagemLateral.repaint();
                jPImagemLateral.validate();
                backgroundlateral.setSize(jPImagemLateral.getSize());
            }
        } catch (IOException ex) {
            new DBConfig().createArqLog("Erro ao Buscar Imagem Background" + ex);
        }
    }

    private BufferedImage loadImage(String file) throws IOException {
        return ImageIO.read(new File(file));
    }

    private void inicializaCorBackground() {
        Color cor = new Color(0, 0, 0, 0);
        jPCentral.setBackground(cor);
        jPImagemTopo.setBackground(cor);
        jPImagemLateral.setBackground(cor);
        inicializaBackground();
    }

    private void inicializaTipoLayout() {
        DBConfigBeans dbc = new DBConfigBeans();
        Tb_ConfigBeans tbc = new Tb_ConfigBeans();
        if (tbc.isTabelacheia()) {
            jPImagemTopo.setVisible(false);
            jPImagemLateral.setVisible(false);
        } else {
            jPImagemTopo.setVisible(true);
            jPImagemLateral.setVisible(true);
        }
    }

    public byte[] converteArquivo(File f) throws FileNotFoundException, IOException {
        InputStream is = new FileInputStream(f);
        byte[] bytes = new byte[(int) f.length()];
        int offset = 0;
        int numRead = 0;
        while (offset < bytes.length
                && (numRead = is.read(bytes, offset, bytes.length - offset)) >= 0) {
            offset += numRead;
        }
        return bytes;
    }

    public byte[] converteArquivo(BufferedImage imagem) throws IOException, IOException {
        BufferedImage originalImage = imagem;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write(originalImage, "jpg", baos);
        baos.flush();
        byte[] imageInByte = baos.toByteArray();
        baos.close();
        return imageInByte;
    }

    private void consultaProdutoConfigTabela() {
        try {
            DefaultTableModel model = (DefaultTableModel) jTConsultaProduto.getModel();
            model.setNumRows(0);
            jTConsultaProduto.getColumnModel().getColumn(0).setMinWidth(100);
            jTConsultaProduto.getColumnModel().getColumn(0).setMaxWidth(100);
            jTConsultaProduto.getColumnModel().getColumn(1).setMinWidth(400);
            jTConsultaProduto.getColumnModel().getColumn(1).setMaxWidth(400);
            jTConsultaProduto.getColumnModel().getColumn(2).setMinWidth(50);
            jTConsultaProduto.getColumnModel().getColumn(2).setMaxWidth(50);
            jTConsultaProduto.getColumnModel().getColumn(3).setMinWidth(75);
            jTConsultaProduto.getColumnModel().getColumn(3).setMaxWidth(75);
            jTConsultaProduto.getColumnModel().getColumn(4).setMinWidth(100);
            jTConsultaProduto.getColumnModel().getColumn(4).setMaxWidth(100);
            List<Tb_ProdBeans> lpb = new ArrayList<>();
            lpb = new Tb_ProdDao().getProdLocal();
            for (Tb_ProdBeans pb : lpb) {
                model.addRow(new Object[]{pb.getCodigo(), pb.getDescricao(), pb.getOferta(), pb.getUnid(), pb.getValor1()});
            }
            jDConsultaProduto.setLocationRelativeTo(this);
            jDConsultaProduto.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ViewPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void inicializaTabelasConfig() {
        jTCTable1.getColumnModel().getColumn(0).setMinWidth(50);
        jTCTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        jTCTable1.getColumnModel().getColumn(1).setMinWidth(150);
        jTCTable1.getColumnModel().getColumn(2).setMinWidth(50);
        jTCTable1.getColumnModel().getColumn(2).setMaxWidth(50);
        jTCTable1.getColumnModel().getColumn(3).setMinWidth(50);
        jTCTable1.getColumnModel().getColumn(3).setMaxWidth(50);
        jTCTable1.getColumnModel().getColumn(4).setMinWidth(50);
        jTCTable1.getColumnModel().getColumn(4).setMaxWidth(50);
        jTCTable1.getColumnModel().getColumn(5).setMinWidth(50);
        jTCTable1.getColumnModel().getColumn(5).setMaxWidth(50);

        jTCTable2.getColumnModel().getColumn(0).setMinWidth(50);
        jTCTable2.getColumnModel().getColumn(0).setMaxWidth(50);
        jTCTable2.getColumnModel().getColumn(1).setMinWidth(150);
        jTCTable2.getColumnModel().getColumn(2).setMinWidth(50);
        jTCTable2.getColumnModel().getColumn(2).setMaxWidth(50);
        jTCTable2.getColumnModel().getColumn(3).setMinWidth(50);
        jTCTable2.getColumnModel().getColumn(3).setMaxWidth(50);
        jTCTable2.getColumnModel().getColumn(4).setMinWidth(50);
        jTCTable2.getColumnModel().getColumn(4).setMaxWidth(50);
        jTCTable2.getColumnModel().getColumn(5).setMinWidth(50);
        jTCTable2.getColumnModel().getColumn(5).setMaxWidth(50);

        jTCTable3.getColumnModel().getColumn(0).setMinWidth(50);
        jTCTable3.getColumnModel().getColumn(0).setMaxWidth(50);
        jTCTable3.getColumnModel().getColumn(1).setMinWidth(150);
        jTCTable3.getColumnModel().getColumn(2).setMinWidth(50);
        jTCTable3.getColumnModel().getColumn(2).setMaxWidth(50);
        jTCTable3.getColumnModel().getColumn(3).setMinWidth(50);
        jTCTable3.getColumnModel().getColumn(3).setMaxWidth(50);
        jTCTable3.getColumnModel().getColumn(4).setMinWidth(50);
        jTCTable3.getColumnModel().getColumn(4).setMaxWidth(50);
        jTCTable3.getColumnModel().getColumn(5).setMinWidth(50);
        jTCTable3.getColumnModel().getColumn(5).setMaxWidth(50);

        jTCTable4.getColumnModel().getColumn(0).setMinWidth(50);
        jTCTable4.getColumnModel().getColumn(0).setMaxWidth(50);
        jTCTable4.getColumnModel().getColumn(1).setMinWidth(150);
        jTCTable4.getColumnModel().getColumn(2).setMinWidth(50);
        jTCTable4.getColumnModel().getColumn(2).setMaxWidth(50);
        jTCTable4.getColumnModel().getColumn(3).setMinWidth(50);
        jTCTable4.getColumnModel().getColumn(3).setMaxWidth(50);
        jTCTable4.getColumnModel().getColumn(4).setMinWidth(50);
        jTCTable4.getColumnModel().getColumn(4).setMaxWidth(50);
        jTCTable4.getColumnModel().getColumn(5).setMinWidth(50);
        jTCTable4.getColumnModel().getColumn(5).setMaxWidth(50);
    }

    private void setConfigProdTerminal() {
        try {
            List<Tb_Prod_PainelBeans> lppb = new ArrayList<>();
            for (int i = 0; i < jTCTable1.getRowCount(); i++) {
                Tb_Prod_PainelBeans ppb = new Tb_Prod_PainelBeans();
                ppb.setCodigo((String) jTCTable1.getValueAt(i, 0));
                ppb.setDescricao((String) jTCTable1.getValueAt(i, 1));
                ppb.setUnid((String) jTCTable1.getValueAt(i, 2));
                ppb.setOferta((Boolean) jTCTable1.getValueAt(i, 3));
                ppb.setValor1((Float) jTCTable1.getValueAt(i, 4));
                ppb.setValor2((Float) jTCTable1.getValueAt(i, 5));
                ppb.setTerminal(new DBConfigBeans().getTerminal());
                ppb.setPainel(1);
                lppb.add(ppb);
            }
            new Tb_Prod_PainelDao().delProdPainel(new DBConfigBeans().getTerminal(), 1);
            new Tb_Prod_PainelDao().setProdPainel(lppb);
            lppb.clear();
            for (int i = 0; i < jTCTable2.getRowCount(); i++) {
                Tb_Prod_PainelBeans ppb = new Tb_Prod_PainelBeans();
                ppb.setCodigo((String) jTCTable2.getValueAt(i, 0));
                ppb.setDescricao((String) jTCTable2.getValueAt(i, 1));
                ppb.setUnid((String) jTCTable2.getValueAt(i, 2));
                ppb.setOferta((Boolean) jTCTable2.getValueAt(i, 3));
                ppb.setValor1((Float) jTCTable2.getValueAt(i, 4));
                ppb.setValor2((Float) jTCTable2.getValueAt(i, 5));
                ppb.setTerminal(new DBConfigBeans().getTerminal());
                ppb.setPainel(2);
                lppb.add(ppb);
            }
            new Tb_Prod_PainelDao().delProdPainel(new DBConfigBeans().getTerminal(), 2);
            new Tb_Prod_PainelDao().setProdPainel(lppb);
            lppb.clear();

            for (int i = 0; i < jTCTable3.getRowCount(); i++) {
                Tb_Prod_PainelBeans ppb = new Tb_Prod_PainelBeans();
                ppb.setCodigo((String) jTCTable3.getValueAt(i, 0));
                ppb.setDescricao((String) jTCTable3.getValueAt(i, 1));
                ppb.setUnid((String) jTCTable3.getValueAt(i, 2));
                ppb.setOferta((Boolean) jTCTable3.getValueAt(i, 3));
                ppb.setValor1((Float) jTCTable3.getValueAt(i, 4));
                ppb.setValor2((Float) jTCTable3.getValueAt(i, 5));
                ppb.setTerminal(new DBConfigBeans().getTerminal());
                ppb.setPainel(3);
                lppb.add(ppb);
            }
            new Tb_Prod_PainelDao().delProdPainel(new DBConfigBeans().getTerminal(), 3);
            new Tb_Prod_PainelDao().setProdPainel(lppb);
            lppb.clear();

            for (int i = 0; i < jTCTable4.getRowCount(); i++) {
                Tb_Prod_PainelBeans ppb = new Tb_Prod_PainelBeans();
                ppb.setCodigo((String) jTCTable4.getValueAt(i, 0));
                ppb.setDescricao((String) jTCTable4.getValueAt(i, 1));
                ppb.setUnid((String) jTCTable4.getValueAt(i, 2));
                ppb.setOferta((Boolean) jTCTable4.getValueAt(i, 3));
                ppb.setValor1((Float) jTCTable4.getValueAt(i, 4));
                ppb.setValor2((Float) jTCTable4.getValueAt(i, 5));
                ppb.setTerminal(new DBConfigBeans().getTerminal());
                ppb.setPainel(4);
                lppb.add(ppb);
            }
            new Tb_Prod_PainelDao().delProdPainel(new DBConfigBeans().getTerminal(), 4);
            new Tb_Prod_PainelDao().setProdPainel(lppb);
            lppb.clear();
            jDLayoutTabelas.setVisible(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Salvar Configuração das Tabelas\n" + ex);
        }
    }

    private void consultaTbProdPainel() {
        try {
            List<Tb_Prod_PainelBeans> lppb = new ArrayList<>();
            int i;
            lppb = new Tb_Prod_PainelDao().getProdPainelConfig(new DBConfigBeans().getTerminal(), 1);
            i = 0;
            for (Tb_Prod_PainelBeans ppb : lppb) {
                jTCTable1.setValueAt(ppb.getCodigo(), i, 0);
                jTCTable1.setValueAt(ppb.getDescricao(), i, 1);
                jTCTable1.setValueAt(ppb.getUnid(), i, 2);
                jTCTable1.setValueAt(ppb.getOferta(), i, 3);
                jTCTable1.setValueAt(ppb.getValor1(), i, 4);
                jTCTable1.setValueAt(ppb.getValor2(), i, 5);
                i++;
            }
            lppb.clear();

            lppb = new Tb_Prod_PainelDao().getProdPainelConfig(new DBConfigBeans().getTerminal(), 2);
            i = 0;
            for (Tb_Prod_PainelBeans ppb : lppb) {
                jTCTable2.setValueAt(ppb.getCodigo(), i, 0);
                jTCTable2.setValueAt(ppb.getDescricao(), i, 1);
                jTCTable2.setValueAt(ppb.getUnid(), i, 2);
                jTCTable2.setValueAt(ppb.getOferta(), i, 3);
                jTCTable2.setValueAt(ppb.getValor1(), i, 4);
                jTCTable2.setValueAt(ppb.getValor2(), i, 5);
                i++;
            }
            lppb.clear();

            lppb = new Tb_Prod_PainelDao().getProdPainelConfig(new DBConfigBeans().getTerminal(), 3);
            i = 0;
            for (Tb_Prod_PainelBeans ppb : lppb) {
                jTCTable3.setValueAt(ppb.getCodigo(), i, 0);
                jTCTable3.setValueAt(ppb.getDescricao(), i, 1);
                jTCTable3.setValueAt(ppb.getUnid(), i, 2);
                jTCTable3.setValueAt(ppb.getOferta(), i, 3);
                jTCTable3.setValueAt(ppb.getValor1(), i, 4);
                jTCTable3.setValueAt(ppb.getValor2(), i, 5);
                i++;
            }
            lppb.clear();

            lppb = new Tb_Prod_PainelDao().getProdPainelConfig(new DBConfigBeans().getTerminal(), 4);
            i = 0;
            for (Tb_Prod_PainelBeans ppb : lppb) {
                jTCTable4.setValueAt(ppb.getCodigo(), i, 0);
                jTCTable4.setValueAt(ppb.getDescricao(), i, 1);
                jTCTable4.setValueAt(ppb.getUnid(), i, 2);
                jTCTable4.setValueAt(ppb.getOferta(), i, 3);
                jTCTable4.setValueAt(ppb.getValor1(), i, 4);
                jTCTable4.setValueAt(ppb.getValor2(), i, 5);
                i++;
            }
            lppb.clear();
        } catch (SQLException ex) {
            new DBConfig().createArqLog("Erro ViewPrincipal : consultaTbProdPainel " + ex);
        }

    }

    public void atualizaGradeProduto() {
        //jPanel3.removeAll();;
        if (jPCentral.getComponentCount() > 0) {
            jPCentral.removeAll();;
            for (int i = 0; i < jPCentral.getComponentCount(); i++) {
                jPCentral.getComponent(i).setVisible(false);
            }
            jPCentral.setVisible(false);
            jPCentral.setVisible(true);
        }
        jPCentral.setVisible(false);
        jPCentral.setVisible(true);
        inicializaGrade();
        jPCentral.setVisible(false);
        jPCentral.setVisible(true);
    }

    private void deletaProdutoConfigTabela1() {
        DefaultTableModel model1 = (DefaultTableModel) jTCTable1.getModel();
        model1.removeRow(jTCTable1.getSelectedRow());
        model1.addRow(new Object[]{"", "", "", false, new Float(0), new Float(0)});
    }

    private void deletaProdutoConfigTabela2() {
        DefaultTableModel model1 = (DefaultTableModel) jTCTable2.getModel();
        model1.removeRow(jTCTable2.getSelectedRow());
        model1.addRow(new Object[]{"", "", "", false, new Float(0), new Float(0)});
    }

    private void deletaProdutoConfigTabela3() {
        DefaultTableModel model1 = (DefaultTableModel) jTCTable3.getModel();
        model1.removeRow(jTCTable3.getSelectedRow());
        model1.addRow(new Object[]{"", "", "", false, new Float(0), new Float(0)});
    }

    private void deletaProdutoConfigTabela4() {
        DefaultTableModel model1 = (DefaultTableModel) jTCTable4.getModel();
        model1.removeRow(jTCTable4.getSelectedRow());
        model1.addRow(new Object[]{"", "", "", false, new Float(0), new Float(0)});
    }

    private void setVisibleJdcarga() {
        jMenu.setVisible(false);
        DBConfigBeans dbc = new DBConfigBeans();
        jTlocalbalancabanco.setText(dbc.getDirdb());
        jTusuariobalancabanco.setText(dbc.getUser());
        jTsenhabalancabanco.setText(dbc.getPassword());
        jTlocalbanco.setText(dbc.getLocaldirdb());
        jTusuariobanco.setText(dbc.getLocaluser());
        jTsenhabanco.setText(dbc.getLocalpassword());
        jSTerminal.setValue(dbc.getTerminal());
        jCTipo.setSelectedItem(dbc.getTipo());
        jDcarga.setLocationRelativeTo(this);
        jDcarga.setVisible(true);
    }

    private void setInicializaTerminal() {
        try {
            jMenu.setVisible(false);
            jFileChooser1.setFileFilter(new FileNameExtensionFilter("jpg", "jpg"));
            jFileChooser1.setAcceptAllFileFilterUsed(false);
            new Thread(new Runnable() {
                @Override
                public void run() {
                    while (true) {
                        new CargaController().cargaProd();
                        try {
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            new DBConfig().createArqLog("\nViewPrincipal Construtor:Thread Encerrou:\n" + ex + "\n");
                        }
                    }
                }
            }).start();
            inicializaGrade();
            inicializarAtalhos();
            inicializaLetreiro();
            inicializaTipoLayout();
            inicializaCorBackground();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    while (true) {
                        updateConfig();
                        try {
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            new DBConfig().createArqLog("\nViewPrincipal Construtor:Thread Encerrou:\n" + ex + "\n");
                        }
                    }
                }
            }).start();
        } catch (Exception ex) {
            new DBConfig().createArqLog("ViewPrincipal-formWindowOpened-UpdateConfig:" + ex);
        }
    }

    private void setInicializaManagement() {
        jPImagemTopo.setVisible(false);
        jPImagemLateral.setVisible(false);
        jPletreiro.setVisible(false);
        jMenu1.setVisible(false);
        ViewConfigTerminais view = new ViewConfigTerminais();
        view.setVisible(true);
        jPCentral.add(view);
        jPCentral.setVisible(false);
        jPCentral.setVisible(true);
        jPCentral.validate();
        jPCentral.repaint();

    }

    private void updateConfig() {
        try {
            Tb_ConfigTempBeans dbcnt = new Tb_ConfigDao().getTB_ConfigTemp(new DBConfigBeans().getTerminal());
            if (comparaListConfig(dbcnt,new Tb_ConfigBeans())) {
                if (jPCentral.getComponentCount() > 0) {
                for (int i = 0; i < jPCentral.getComponentCount(); i++) {
                    jPCentral.getComponent(i).setVisible(false);
                }
                jPCentral.setVisible(false);
                jPCentral.setVisible(true);
            }
            inicializaGrade();
            inicializaLetreiro();
            inicializaTipoLayout();
            inicializaCorBackground();
            }
        } catch (SQLException ex) {
            new DBConfig().createArqLog("ViewPricipal-updateConfig:"+ex);
        }

    }

    private boolean comparaListConfig(Tb_ConfigTempBeans dbcnt, Tb_ConfigBeans dbConfigBeans) {        
        return !dbcnt.getIdtb_config().toString().equals(dbConfigBeans.getIdtb_config().toString());        
    }

}
