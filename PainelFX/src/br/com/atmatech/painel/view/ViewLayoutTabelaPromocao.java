/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atmatech.painel.view;

import br.com.atmatech.painel.beans.DBConfigBeans;
import br.com.atmatech.painel.beans.Tb_ConfigBeans;
import br.com.atmatech.painel.beans.Tb_Prod_Painel_PromoBeans;
import br.com.atmatech.painel.config.DBConfig;
import br.com.atmatech.painel.dao.Tb_Prod_Painel_PromoDao;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Marcos
 */
public class ViewLayoutTabelaPromocao extends javax.swing.JPanel {

    /**
     * Creates new form ViewLayoutTabelaPromocao
     */
    List<Tb_Prod_Painel_PromoBeans> lppbf = new ArrayList<>();
    ViewPrincipal view;

    public ViewLayoutTabelaPromocao(ViewPrincipal view) {
        initComponents();
        try {
            inicializaPainel();
            ajustaColunaPainel();
            updateInicializaPainel();
            this.view = view;
        } catch (Exception ex) {
            new DBConfig().createArqLog("ViewLayoutTabelaPromocao-ViewLayoutTabelaPromocao :" + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTPromocao = new javax.swing.JTable();

        jScrollPane1.setBorder(null);

        jTPromocao.setForeground(new java.awt.Color(204, 0, 0));
        jTPromocao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DESCRIÇÃO", "UNID", "OFERTA", "VALOR1", "VALOR2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTPromocao.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTPromocao.setGridColor(new java.awt.Color(255, 0, 0));
        jTPromocao.setRowHeight(55);
        jTPromocao.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTPromocao.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTPromocao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTPromocao;
    // End of variables declaration//GEN-END:variables

    private void ajustaColunaPainel() {
        Tb_ConfigBeans tbc = new Tb_ConfigBeans();
        if ((tbc.getEspacamentotabelapromo() != null) && (tbc.getEspacamentotabelapromo() > 0)) {
            jTPromocao.setRowHeight(tbc.getEspacamentotabelapromo());
        }
        Color corfonte = new Color(tbc.getCorfontetabelapromo());
        if (tbc.getTabelapromonome().length() > 0) {
            jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, tbc.getTabelapromonome(), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font(tbc.getFontetipotabelapromotitulo(), tbc.getFonteestilotabelapromotitulo(), tbc.getFontetabelapromotitulo()), new java.awt.Color(204, 0, 0))); // NOI18N
        }
        if (tbc.isCtcodigotabelapromo()) {
            jTPromocao.getColumnModel().getColumn(0).setMinWidth((int) (tbc.getFonteTabela() * 3.5));
            jTPromocao.getColumnModel().getColumn(0).setMaxWidth((int) (tbc.getFonteTabela() * 3.5));
        } else {
            jTPromocao.getColumnModel().getColumn(0).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(0).setMaxWidth(0);

        }
        if (tbc.isCtprodutotabelapromo()) {
            jTPromocao.getColumnModel().getColumn(1).setMinWidth(100);

        } else {
            jTPromocao.getColumnModel().getColumn(1).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(1).setMaxWidth(0);
        }
        if (tbc.isCtunidtabelapromo()) {
            jTPromocao.getColumnModel().getColumn(2).setMinWidth(tbc.getFonteTabela() * 2);
            jTPromocao.getColumnModel().getColumn(2).setMaxWidth(tbc.getFonteTabela() * 2);
        } else {
            jTPromocao.getColumnModel().getColumn(2).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(2).setMaxWidth(0);
        }
        if (tbc.isCtofertatabelapromo()) {
            jTPromocao.getColumnModel().getColumn(3).setMinWidth((int) (tbc.getFonteTabela() * 4.5));
            jTPromocao.getColumnModel().getColumn(3).setMaxWidth((int) (tbc.getFonteTabela() * 4.5));
        } else {
            jTPromocao.getColumnModel().getColumn(3).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(3).setMaxWidth(0);
        }
        if (tbc.isCtvalor1tabelapromo()) {
            DefaultTableCellRenderer table1 = new DefaultTableCellRenderer();
            TableColumn tc1 = jTPromocao.getColumn(jTPromocao.getColumnName(4));
            table1.setHorizontalAlignment(JLabel.RIGHT);
            tc1.setCellRenderer(table1);
            jTPromocao.getColumnModel().getColumn(4).setMinWidth((int) (tbc.getFontetabelapromo() * 3.9));
            jTPromocao.getColumnModel().getColumn(4).setMaxWidth((int) (tbc.getFontetabelapromo() * 3.9));
            jTPromocao.getColumnModel().getColumn(4).setHeaderValue(tbc.getNomevalor1tabelapromo());
            jTPromocao.getTableHeader().resizeAndRepaint();
        } else {
            jTPromocao.getColumnModel().getColumn(4).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(4).setMaxWidth(0);
        }
        if (tbc.isCtvalor2tabelapromo()) {
            DefaultTableCellRenderer table1 = new DefaultTableCellRenderer();
            TableColumn tc1 = jTPromocao.getColumn(jTPromocao.getColumnName(5));
            table1.setHorizontalAlignment(JLabel.RIGHT);
            tc1.setCellRenderer(table1);
            jTPromocao.getColumnModel().getColumn(5).setMinWidth((int) (tbc.getFontetabelapromo() * 3.9));
            jTPromocao.getColumnModel().getColumn(5).setMaxWidth((int) (tbc.getFontetabelapromo() * 3.9));
            jTPromocao.getColumnModel().getColumn(5).setHeaderValue(tbc.getNomevalor2tabelapromo());
            jTPromocao.getTableHeader().resizeAndRepaint();
        } else {
            jTPromocao.getColumnModel().getColumn(5).setMinWidth(0);
            jTPromocao.getColumnModel().getColumn(5).setMaxWidth(0);
        }
    }

    private void inicializaPainel() {
        cargaPainel();
        Tb_ConfigBeans tcb = new Tb_ConfigBeans();
        Color cor = new Color(0, 0, 0, 0);
        Font font = new java.awt.Font(tcb.getFontetipotabelapromo(), tcb.getFonteestilotabelapromo(), tcb.getFontetabelapromo());
        int rowheighet = (int) (tcb.getFontetabelapromo() * (2.2));
        Color corfonte = new Color(tcb.getCorfontetabelapromo());

        this.setBackground(cor);
        this.repaint();
        this.validate();
        jScrollPane1.setBackground(cor);
        jScrollPane1.repaint();
        jScrollPane1.validate();
        jTPromocao.getParent().setBackground(cor);
        jTPromocao.setBackground(new Color(new Color(tcb.getCorfundotabelapromo()).getRed(), new Color(tcb.getCorfundotabelapromo()).getGreen(), new Color(tcb.getCorfundotabelapromo()).getBlue(), tcb.getTranspfundotabelapromo()));

        jTPromocao.setFont(font);
        jTPromocao.setRowHeight(rowheighet);
        jTPromocao.setForeground(corfonte);
        jTPromocao.repaint();
        jTPromocao.validate();
    }

    private void updateInicializaPainel() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (getVisibleThis()) {
                    updateAtualizaPainelProd();
                    try {
                        Thread.sleep(15000);
                    } catch (InterruptedException ex) {
                        new DBConfig().createArqLog("Erro Thread Parada ViewLayoutTabelas-updateIniciallizaPainel: " + ex);
                    }
                }
            }
        }).start();
    }

    private void updateAtualizaPainelProd() {
        try {
            List<Tb_Prod_Painel_PromoBeans> lppb = new ArrayList<>();
            Integer tabelas = 0;
            String painel = "'1'";
            lppb = new Tb_Prod_Painel_PromoDao().getProdPainelTabelas(new DBConfigBeans().getTerminal(), painel);
            if (comparaListPainel(lppbf, lppb)) {                
                this.setVisible(false);
                this.view.atualizaGradeProduto();
            }
        } catch (SQLException ex) {
            new DBConfig().createArqLog("Erro ao Atualizar Produtos ViewLayoutTableas-updateInicializaPainel: " + ex);
        }
    }

    public boolean getVisibleThis() {
        return this.isVisible();
    }

    private boolean comparaListPainel(List<Tb_Prod_Painel_PromoBeans> lppbf, List<Tb_Prod_Painel_PromoBeans> lppb) {
        if (lppb != null) {
            if (lppb.size() != lppbf.size()) {
                return true;
            } else {
                for (int i = 0; i < lppb.size(); i++) {
                    if (!lppb.get(i).getCodigo().equals(lppbf.get(i).getCodigo())) {
                        return true;
                    }
                    if (!lppb.get(i).getDescricao().equals(lppbf.get(i).getDescricao())) {
                        return true;
                    }
                    if (!lppb.get(i).getUnid().equals(lppbf.get(i).getUnid())) {
                        return true;
                    }
                    if (!lppb.get(i).getValor1().toString().equals(lppbf.get(i).getValor1().toString())) {
                        return true;
                    }
                    if (!lppb.get(i).getValor2().equals(lppbf.get(i).getValor2())) {
                        return true;
                    }
                    if (!lppb.get(i).getOferta().equals(lppbf.get(i).getOferta())) {
                        return true;
                    }
                }
                return false;
            }
        }
        return false;
    }

    private void cargaPainel() {
        try{
        DecimalFormat formatter = new DecimalFormat(",##0.00");
        DefaultTableModel model = (DefaultTableModel) jTPromocao.getModel();
        model.setNumRows(0);
        List<Tb_Prod_Painel_PromoBeans> lppb = new Tb_Prod_Painel_PromoDao().getProdPainel(new DBConfigBeans().getTerminal(), 1);
        this.lppbf.addAll(lppb);
        for (Tb_Prod_Painel_PromoBeans ppb : lppb) {
            String oferta = "";
            String valor2 = "";
            if (ppb.getOferta()) {
                oferta = "<html><font color=red>OFERTA</font></html>";
            }
            if (ppb.getValor2() == 0) {
                valor2 = "";
            } else {
                valor2 = formatter.format(ppb.getValor2()).toString();
            }
            model.addRow(new Object[]{ppb.getCodigo(), ppb.getDescricao(), ppb.getUnid(), oferta, formatter.format(ppb.getValor1()), valor2});
        }
        }catch(Exception ex){
            new DBConfig().createArqLog("ViewLayoutTabelaPromocao - cargaPainel:"+ex);
        }
    }
}
