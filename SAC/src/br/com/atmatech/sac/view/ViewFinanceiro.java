/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atmatech.sac.view;

import br.com.atmatech.sac.beans.DBConfigBeans;
import br.com.atmatech.sac.beans.FinanceiroBeans;
import br.com.atmatech.sac.controller.PintarLinhasTabelaFin;
import br.com.atmatech.sac.dao.FinanceiroDao;
import br.com.atmatech.sac.report.Report;
import br.com.atmatech.sac.webService.WebServiceFinanceiro;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author MARCOS
 */
public class ViewFinanceiro extends javax.swing.JPanel {

    /**
     * Creates new form ViewModulo
     */
    String tipobusca = "";
    Boolean visivel = false;

    public ViewFinanceiro(String tipobusca) {
        initComponents();
        desativaColunas();
        this.tipobusca = tipobusca;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDaguarde = new javax.swing.JDialog();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBnovo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jBConsultar = new javax.swing.JButton();
        jBConsultar1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTVfinanceiro = new javax.swing.JTable();

        jDaguarde.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDaguarde.setMinimumSize(new java.awt.Dimension(247, 90));
        jDaguarde.setModal(true);
        jDaguarde.setUndecorated(true);
        jDaguarde.setResizable(false);

        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("AGUARDE....");

        javax.swing.GroupLayout jDaguardeLayout = new javax.swing.GroupLayout(jDaguarde.getContentPane());
        jDaguarde.getContentPane().setLayout(jDaguardeLayout);
        jDaguardeLayout.setHorizontalGroup(
            jDaguardeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDaguardeLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        jDaguardeLayout.setVerticalGroup(
            jDaguardeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDaguardeLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel21)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        setPreferredSize(new java.awt.Dimension(799, 613));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBnovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/atmatech/sac/icon/Knob Download.png"))); // NOI18N
        jBnovo.setText("Baixar");
        jBnovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        jBConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/atmatech/sac/icon/Knob Refresh.png"))); // NOI18N
        jBConsultar.setText("Consultar");
        jBConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarActionPerformed(evt);
            }
        });

        jBConsultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/atmatech/sac/icon/Knob Upload.png"))); // NOI18N
        jBConsultar1.setText("Imprimir");
        jBConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBnovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBConsultar1)
                .addGap(122, 122, 122)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBConsultar, jBnovo});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBnovo)
                    .addComponent(jBConsultar)
                    .addComponent(jBConsultar1))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTVfinanceiro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDFINANCEIRO", "DOC", "CLIENTE", "VALOR", "VENCIMENTO", "CONTATO", "TEL/CEL", "ATUALIZAÇÂO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTVfinanceiro.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTVfinanceiro.getTableHeader().setResizingAllowed(false);
        jTVfinanceiro.getTableHeader().setReorderingAllowed(false);
        jTVfinanceiro.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(jTVfinanceiro);
        if (jTVfinanceiro.getColumnModel().getColumnCount() > 0) {
            jTVfinanceiro.getColumnModel().getColumn(0).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(1).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(2).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(3).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(4).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(5).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(6).setResizable(false);
            jTVfinanceiro.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBnovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnovoActionPerformed

        if (JOptionPane.showConfirmDialog(this, "Consulta Muito Demorado, Deseja Continuar!!!", "Financeiro", JOptionPane.OK_CANCEL_OPTION) == 0) {
            this.tipobusca = "Financeiro";
            new Thread(new Runnable() {
                @Override
                public void run() {
                    // TODO add your handling code here:
                    showAguarde();
                }
            }).start();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    atualizaFinanceiro();
                }
            }).start();
        }

    }//GEN-LAST:event_jBnovoActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        if (!visivel) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    // TODO add your handling code here:
                    showAguarde();
                }
            }).start();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    buscaFinanceiro(null);
                }
            }).start();
        }
        visivel=true;
    }//GEN-LAST:event_formComponentShown

    private void jBConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarActionPerformed
        // TODO add your handling code here:
        this.tipobusca = "Financeiro";
        new Thread(new Runnable() {
            @Override
            public void run() {
                // TODO add your handling code here:
                showAguarde();
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                buscaFinanceiro(null);
            }
        }).start();
    }//GEN-LAST:event_jBConsultarActionPerformed

    private void jBConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultar1ActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable() {
            @Override
            public void run() {
                // TODO add your handling code here:
                showAguarde();
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                imprimirFinanceiro();
            }
        }).start();
    }//GEN-LAST:event_jBConsultar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConsultar;
    private javax.swing.JButton jBConsultar1;
    private javax.swing.JButton jBnovo;
    private javax.swing.JDialog jDaguarde;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTVfinanceiro;
    // End of variables declaration//GEN-END:variables

    public void showAguarde() {
        jDaguarde.setLocationRelativeTo(this.jScrollPane1);
        jDaguarde.setVisible(true);
    }

    public void closeAguarde() {
        jDaguarde.setVisible(false);
    }

    private void getFinanceiroUpdate() throws Exception {
        DBConfigBeans cb = new DBConfigBeans();
        List<FinanceiroBeans> lfb = new WebServiceFinanceiro().getFinanceiro("http://atma.serveftp.com", cb.getLogin(), cb.getSenha());
        new FinanceiroDao().dropFinanceiro();
        for (FinanceiroBeans fb : lfb) {
            new FinanceiroDao().setFinanceiro(fb);
        }
        lfb = new FinanceiroDao().getFinanceiro();
        DefaultTableModel modelfinanceiro = (DefaultTableModel) jTVfinanceiro.getModel();
        modelfinanceiro.setNumRows(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (FinanceiroBeans fb : lfb) {
            modelfinanceiro.addRow(new Object[]{fb.getIdfinanceiro(), fb.getDoc(), fb.getCliente(), fb.getValor(), sdf.format(fb.getVencimento()), fb.getContato(), fb.getTelcel(), sdf.format(fb.getAtualizacao())});
        }
    }

    private void getFinanceiro() throws SQLException {
        List<FinanceiroBeans> lfb = new FinanceiroDao().getFinanceiro();
        DefaultTableModel modelfinanceiro = (DefaultTableModel) jTVfinanceiro.getModel();
        modelfinanceiro.setNumRows(0);
        TableCellRenderer renderer = new PintarLinhasTabelaFin();
        jTVfinanceiro.setDefaultRenderer(modelfinanceiro.getColumnClass(0), renderer);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (FinanceiroBeans fb : lfb) {
            modelfinanceiro.addRow(new Object[]{fb.getIdfinanceiro(), fb.getDoc(), fb.getCliente(), fb.getValor(), sdf.format(fb.getVencimento()), fb.getContato(), fb.getTelcel(), sdf.format(fb.getAtualizacao())});
        }
    }

    private void desativaColunas() {
        jTVfinanceiro.getColumnModel().getColumn(0).setMaxWidth(0);
        jTVfinanceiro.getColumnModel().getColumn(0).setMinWidth(0);
        jTVfinanceiro.getColumnModel().getColumn(0).setPreferredWidth(0);

        jTVfinanceiro.getColumnModel().getColumn(1).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(1).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(1).setPreferredWidth(100);

        jTVfinanceiro.getColumnModel().getColumn(2).setMaxWidth(450);
        jTVfinanceiro.getColumnModel().getColumn(2).setMinWidth(450);
        jTVfinanceiro.getColumnModel().getColumn(2).setPreferredWidth(450);

        jTVfinanceiro.getColumnModel().getColumn(3).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(3).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(3).setPreferredWidth(100);

        jTVfinanceiro.getColumnModel().getColumn(4).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(4).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(4).setPreferredWidth(100);

        jTVfinanceiro.getColumnModel().getColumn(5).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(5).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(5).setPreferredWidth(100);

        jTVfinanceiro.getColumnModel().getColumn(6).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(6).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(6).setPreferredWidth(100);

        jTVfinanceiro.getColumnModel().getColumn(7).setMaxWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(7).setMinWidth(100);
        jTVfinanceiro.getColumnModel().getColumn(7).setPreferredWidth(100);
    }

    private void atualizaFinanceiro() {
        try {
            // TODO add your handling code here:
            getFinanceiroUpdate();
            jDaguarde.setVisible(false);
        } catch (Exception ex) {
            jDaguarde.setVisible(false);
            if (ex.toString().contains("Duplicate")) {
                JOptionPane.showMessageDialog(this.jScrollPane1, "Processo Esta Sendo Execultado Em Outra Estação");
            } else {
                JOptionPane.showMessageDialog(this.jScrollPane1, "Erro ao Atualizar Financeiro\n" + ex);
            }
        }
    }

    public void buscaFinanceiro(String tipobusca) {
        if (tipobusca == null) {
            tipobusca = this.tipobusca;
        } else {
            this.tipobusca = tipobusca;
        }
        try {
            // TODO add your handling code here:
            if (tipobusca.equals("Financeiro")) {
                getFinanceiro();
            } else if (tipobusca.equals("AbertoMes")) {
                getFinanceiroAbertoMes();
            } else if (tipobusca.equals("VencidosMes")) {
                getFinanceiroVencidosMes();
            } else if (tipobusca.equals("Vencidos")) {
                getFinanceiroVencidos();
            }

            jDaguarde.setVisible(false);
        } catch (Exception ex) {
            jDaguarde.setVisible(false);
            JOptionPane.showMessageDialog(this.jScrollPane1, "Erro ao Consultar Financeiro\n" + ex);
        }
    }

    private void getFinanceiroAbertoMes() throws SQLException {
        List<FinanceiroBeans> lfb = new FinanceiroDao().getFinanceiroAbertoMes();
        DefaultTableModel modelfinanceiro = (DefaultTableModel) jTVfinanceiro.getModel();
        modelfinanceiro.setNumRows(0);
        TableCellRenderer renderer = new PintarLinhasTabelaFin();
        jTVfinanceiro.setDefaultRenderer(modelfinanceiro.getColumnClass(0), renderer);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (FinanceiroBeans fb : lfb) {
            modelfinanceiro.addRow(new Object[]{fb.getIdfinanceiro(), fb.getDoc(), fb.getCliente(), fb.getValor(), sdf.format(fb.getVencimento()), fb.getContato(), fb.getTelcel(), sdf.format(fb.getAtualizacao())});
        }
    }

    private void getFinanceiroVencidosMes() throws SQLException {
        List<FinanceiroBeans> lfb = new FinanceiroDao().getFinanceiroVencidosMes();
        DefaultTableModel modelfinanceiro = (DefaultTableModel) jTVfinanceiro.getModel();
        modelfinanceiro.setNumRows(0);
        TableCellRenderer renderer = new PintarLinhasTabelaFin();
        jTVfinanceiro.setDefaultRenderer(modelfinanceiro.getColumnClass(0), renderer);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (FinanceiroBeans fb : lfb) {
            modelfinanceiro.addRow(new Object[]{fb.getIdfinanceiro(), fb.getDoc(), fb.getCliente(), fb.getValor(), sdf.format(fb.getVencimento()), fb.getContato(), fb.getTelcel(), sdf.format(fb.getAtualizacao())});
        }
    }

    private void getFinanceiroVencidos() throws SQLException {
        List<FinanceiroBeans> lfb = new FinanceiroDao().getFinanceiroVencidos();
        DefaultTableModel modelfinanceiro = (DefaultTableModel) jTVfinanceiro.getModel();
        modelfinanceiro.setNumRows(0);
        TableCellRenderer renderer = new PintarLinhasTabelaFin();
        jTVfinanceiro.setDefaultRenderer(modelfinanceiro.getColumnClass(0), renderer);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (FinanceiroBeans fb : lfb) {
            modelfinanceiro.addRow(new Object[]{fb.getIdfinanceiro(), fb.getDoc(), fb.getCliente(), fb.getValor(), sdf.format(fb.getVencimento()), fb.getContato(), fb.getTelcel(), sdf.format(fb.getAtualizacao())});
        }
    }

    private void imprimirFinanceiro() {
        try {
            // TODO add your handling code here:
            if (tipobusca.equals("Financeiro")) {
                getReportFinanceiro("");
            } else if (tipobusca.equals("AbertoMes")) {
                getReportFinanceiro(" where  MONTH(vencimento)=MONTH(now())  AND Year(vencimento)=Year(now()) order by vencimento,cliente");
            } else if (tipobusca.equals("VencidosMes")) {
                getReportFinanceiro(" where MONTH(vencimento)=MONTH(now())  AND Day(vencimento)<Day(now()) order by vencimento,cliente");
            } else if (tipobusca.equals("Vencidos")) {
                getReportFinanceiro(" where vencimento<now() order by vencimento,cliente");
            }
        } catch (Exception ex) {
            jDaguarde.setVisible(false);
            JOptionPane.showMessageDialog(this.jScrollPane1, "Erro ao Imprimir Financeiro\n" + ex);
        }

    }

    private void getReportFinanceiro(String parametro) {
        new Report().getReportFinanceiroGrade(parametro, this);
    }

}
