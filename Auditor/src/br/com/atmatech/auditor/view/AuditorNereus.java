/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atmatech.auditor.view;

import br.com.atmatech.auditor.beans.NfceBeans;
import br.com.atmatech.auditor.beans.VndCupomSeqBeans;
import br.com.atmatech.auditor.config.DBConfig;
import br.com.atmatech.auditor.dao.NfceDao;
import br.com.atmatech.auditor.dao.VndCupomSeqDao;
import br.com.atmatech.auditor.uteis.PintarLinhasTabela;
import br.com.atmatech.auditor.uteis.PintarLinhasTabela1;
import br.com.atmatech.auditor.webservice.WebServiceNFce;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Marcos
 */
public class AuditorNereus extends javax.swing.JFrame {

    /**
     * Creates new form AuditorNereus
     */
    ArrayList<NfceBeans> lnfce;
    ArrayList<NfceBeans> lnfce1;
    int qtdeenv, qtdeerro;

    public AuditorNereus() {
        initComponents();
        try {
            this.setTitle("Auditor Nereus 1.1.20");
            new DBConfig().getConfig();
            inicializaTable();
            inicializaTable1();
            jDdtini.setDate(new Date());
            jDdtfin.setDate(new Date());
            jDdtini1.setDate(new Date());
            jDdtfin1.setDate(new Date());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Abrir Configuração");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDaviso = new javax.swing.JDialog();
        jLaviso = new javax.swing.JLabel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMmarcatodos = new javax.swing.JMenuItem();
        jMdesmarcatodos = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTnfce = new javax.swing.JTable();
        jBnfceverif = new javax.swing.JButton();
        jBprocessar = new javax.swing.JButton();
        jDdtini = new com.toedter.calendar.JDateChooser();
        jDdtfin = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTnfce1 = new javax.swing.JTable();
        jBnfceverif1 = new javax.swing.JButton();
        jDdtini1 = new com.toedter.calendar.JDateChooser();
        jDdtfin1 = new com.toedter.calendar.JDateChooser();
        jLstatus = new javax.swing.JLabel();
        jBnfceverif3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTnfceseq = new javax.swing.JTable();
        jBnfceverif2 = new javax.swing.JButton();

        jDaviso.setTitle("AVISO");
        jDaviso.setLocationByPlatform(true);
        jDaviso.setMinimumSize(new java.awt.Dimension(453, 119));
        jDaviso.setModal(true);
        jDaviso.setUndecorated(true);
        jDaviso.setResizable(false);

        jLaviso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jDavisoLayout = new javax.swing.GroupLayout(jDaviso.getContentPane());
        jDaviso.getContentPane().setLayout(jDavisoLayout);
        jDavisoLayout.setHorizontalGroup(
            jDavisoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLaviso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );
        jDavisoLayout.setVerticalGroup(
            jDavisoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDavisoLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLaviso, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jMmarcatodos.setLabel("Marcar Todos");
        jMmarcatodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMmarcatodosActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMmarcatodos);

        jMdesmarcatodos.setLabel("Desmarcar Todos");
        jMdesmarcatodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMdesmarcatodosActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMdesmarcatodos);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Auditor Nereus 1.1.15");
        setResizable(false);

        jTnfce.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTnfce.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_CUPOM", "NRO_DCTO", "CHAVE", "CHAVE_XML", "DT_VENDA", "ID_PDV", "SEFAZ", "CHAVE_SEFAZ", "ATUALIZAR", "STATUS_NFC"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTnfce.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTnfce.getTableHeader().setReorderingAllowed(false);
        jTnfce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTnfceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTnfce);

        jBnfceverif.setText("VERIFICAR");
        jBnfceverif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnfceverifActionPerformed(evt);
            }
        });

        jBprocessar.setText("PROCESSAR");
        jBprocessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBprocessarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBnfceverif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBprocessar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDdtini, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDdtfin, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jDdtfin, jDdtini});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBnfceverif)
                        .addComponent(jBprocessar))
                    .addComponent(jDdtini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDdtfin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("NFce Xml", jPanel1);

        jTnfce1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTnfce1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_CUPOM", "NRO_DCTO", "CHAVE", "DT_VENDA", "ID_PDV", "STATUS_NFC", "STATUS_SEFAZ", "ATUALIZAR", "VALOR NFCE", "VALOR SEFAZ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTnfce1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTnfce1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTnfce1);

        jBnfceverif1.setText("VERIFICAR");
        jBnfceverif1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnfceverif1ActionPerformed(evt);
            }
        });

        jBnfceverif3.setText("PROCESSAR");
        jBnfceverif3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnfceverif3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jBnfceverif1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBnfceverif3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDdtini1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDdtfin1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181)
                .addComponent(jLstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBnfceverif1, jBnfceverif3});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDdtini1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDdtfin1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBnfceverif1)
                            .addComponent(jBnfceverif3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("NFce Status", jPanel3);

        jTnfceseq.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTnfceseq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SERIE", "NRO_DCTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTnfceseq.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTnfceseq);

        jBnfceverif2.setText("SEQ.NRO NFCE");
        jBnfceverif2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnfceverif2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jBnfceverif2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(746, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBnfceverif2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Validação", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBnfceverifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnfceverifActionPerformed
        // TODO add your handling code here:  
        if (new File("./nfce" + new Date().getDay() + new Date().getMonth() + new Date().getYear()).exists()) {
            new WebServiceNFce().deleteTree(new File("./nfce" + new Date().getDay() + new Date().getMonth() + new Date().getYear()));
        }

        new Thread(new Runnable() {
            @Override
            public void run() {
                buscaNfce();
                closeAviso();
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                showAviso();
            }
        }).start();
    }//GEN-LAST:event_jBnfceverifActionPerformed

    private void jBprocessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBprocessarActionPerformed
        // TODO add your handling code here:
        if (verificMarcado()) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    updateNfce();
                    closeAviso();
                }
            }).start();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    showAviso();
                }
            }).start();
        }
    }//GEN-LAST:event_jBprocessarActionPerformed

    private void jBnfceverif1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnfceverif1ActionPerformed
        // TODO add your handling code here:   
        qtdeenv = 0;
        qtdeerro = 0;
        jLstatus.setText("");
        new Thread(new Runnable() {
            @Override
            public void run() {
                buscaNfceCancelado();
                // selecionaDivergente();
                closeAviso();
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                showAviso();
                jLstatus.setText("Corretos:" + qtdeenv + ", Erros:" + qtdeerro);
                selecionaDivergente();
            }
        }).start();
    }//GEN-LAST:event_jBnfceverif1ActionPerformed

    private void jBnfceverif2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnfceverif2ActionPerformed
        // TODO add your handling code here:
        jLaviso.setText("");
        new Thread(new Runnable() {
            @Override
            public void run() {
                buscaSequencia();
                closeAviso();
            }
        }).start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                 showAviso();
            }
        }).start();

    }//GEN-LAST:event_jBnfceverif2ActionPerformed

    private void jTnfceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTnfceMouseClicked
        // TODO add your handling code here:
        if (jTnfce.getSelectedRow() >= 0) {
            if ((evt.getModifiers() & MouseEvent.BUTTON3_MASK) != 0) {
                jPopupMenu1.show(jTnfce, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jTnfceMouseClicked

    private void jMmarcatodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMmarcatodosActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTnfce.getRowCount(); i++) {
            jTnfce.setValueAt(true, i, 8);
        }
    }//GEN-LAST:event_jMmarcatodosActionPerformed

    private void jMdesmarcatodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMdesmarcatodosActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTnfce.getRowCount(); i++) {
            jTnfce.setValueAt(false, i, 8);
        }
    }//GEN-LAST:event_jMdesmarcatodosActionPerformed

    private void jBnfceverif3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnfceverif3ActionPerformed
        // TODO add your handling code here
        if (verificMarcadoNfce1()) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    updateNfce1();
                    closeAviso();
                }
            }).start();
            new Thread(new Runnable() {
                @Override
                public void run() {
                    showAviso();
                }
            }).start();
        }
    }//GEN-LAST:event_jBnfceverif3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuditorNereus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuditorNereus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuditorNereus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuditorNereus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuditorNereus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBnfceverif;
    private javax.swing.JButton jBnfceverif1;
    private javax.swing.JButton jBnfceverif2;
    private javax.swing.JButton jBnfceverif3;
    private javax.swing.JButton jBprocessar;
    private javax.swing.JDialog jDaviso;
    private com.toedter.calendar.JDateChooser jDdtfin;
    private com.toedter.calendar.JDateChooser jDdtfin1;
    private com.toedter.calendar.JDateChooser jDdtini;
    private com.toedter.calendar.JDateChooser jDdtini1;
    private static javax.swing.JLabel jLaviso;
    private javax.swing.JLabel jLstatus;
    private javax.swing.JMenuItem jMdesmarcatodos;
    private javax.swing.JMenuItem jMmarcatodos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTnfce;
    private javax.swing.JTable jTnfce1;
    private javax.swing.JTable jTnfceseq;
    // End of variables declaration//GEN-END:variables

    private void buscaNfce() {
        DefaultTableModel modelnfce = (DefaultTableModel) jTnfce.getModel();
        modelnfce.setNumRows(0);
        try {
            jLaviso.setText("Analisando Banco Local");
            lnfce = new NfceDao().getNfceXmlIncorreto(jDdtini.getDate(), jDdtfin.getDate());
            for (NfceBeans nfce : lnfce) {
                modelnfce.addRow(new Object[]{nfce.getId_cupom(), nfce.getNro_dcto(), nfce.getChave(), nfce.getChave_xml(), nfce.getDt_venda(), nfce.getId_pdv(), "", "", false, nfce.getStatus_nfc()});
            }
            buscaSefazNfce(lnfce);
            jLaviso.setText("");
        } catch (SQLException | IOException ex) {
            jLaviso.setText("");
            JOptionPane.showMessageDialog(rootPane, "Erro ao Buscar Nfce local" + ex);
        }

    }

    private void inicializaTable() {
        jTnfce.getColumnModel().getColumn(0).setMinWidth(250);
        jTnfce.getColumnModel().getColumn(0).setMaxWidth(250);
        jTnfce.getColumnModel().getColumn(0).setPreferredWidth(250);

        jTnfce.getColumnModel().getColumn(1).setMinWidth(50);
        jTnfce.getColumnModel().getColumn(1).setMaxWidth(50);
        jTnfce.getColumnModel().getColumn(1).setPreferredWidth(50);

        jTnfce.getColumnModel().getColumn(2).setMinWidth(350);
        jTnfce.getColumnModel().getColumn(2).setMaxWidth(350);
        jTnfce.getColumnModel().getColumn(2).setPreferredWidth(350);

        jTnfce.getColumnModel().getColumn(3).setMinWidth(350);
        jTnfce.getColumnModel().getColumn(3).setMaxWidth(350);
        jTnfce.getColumnModel().getColumn(3).setPreferredWidth(350);

        jTnfce.getColumnModel().getColumn(4).setMinWidth(100);
        jTnfce.getColumnModel().getColumn(4).setMaxWidth(100);
        jTnfce.getColumnModel().getColumn(4).setPreferredWidth(100);

        jTnfce.getColumnModel().getColumn(5).setMinWidth(60);
        jTnfce.getColumnModel().getColumn(5).setMaxWidth(60);
        jTnfce.getColumnModel().getColumn(5).setPreferredWidth(60);

        jTnfce.getColumnModel().getColumn(6).setMinWidth(50);
        jTnfce.getColumnModel().getColumn(6).setMaxWidth(50);
        jTnfce.getColumnModel().getColumn(6).setPreferredWidth(50);

        jTnfce.getColumnModel().getColumn(7).setMinWidth(350);
        jTnfce.getColumnModel().getColumn(7).setMaxWidth(350);
        jTnfce.getColumnModel().getColumn(7).setPreferredWidth(350);

        jTnfce.getColumnModel().getColumn(8).setMinWidth(100);
        jTnfce.getColumnModel().getColumn(8).setMaxWidth(100);
        jTnfce.getColumnModel().getColumn(8).setPreferredWidth(100);

        jTnfce.getColumnModel().getColumn(9).setMinWidth(0);
        jTnfce.getColumnModel().getColumn(9).setMaxWidth(0);
        jTnfce.getColumnModel().getColumn(9).setPreferredWidth(0);

        TableCellRenderer renderer = new PintarLinhasTabela();
        jTnfce.setDefaultRenderer(jTnfce.getColumnClass(9), renderer);
    }

    private void inicializaTable1() {
        jTnfce1.getColumnModel().getColumn(0).setMinWidth(250);
        jTnfce1.getColumnModel().getColumn(0).setMaxWidth(250);
        jTnfce1.getColumnModel().getColumn(0).setPreferredWidth(250);

        jTnfce1.getColumnModel().getColumn(1).setMinWidth(50);
        jTnfce1.getColumnModel().getColumn(1).setMaxWidth(50);
        jTnfce1.getColumnModel().getColumn(1).setPreferredWidth(50);

        jTnfce1.getColumnModel().getColumn(2).setMinWidth(350);
        jTnfce1.getColumnModel().getColumn(2).setMaxWidth(350);
        jTnfce1.getColumnModel().getColumn(2).setPreferredWidth(350);

        jTnfce1.getColumnModel().getColumn(3).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(3).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(3).setPreferredWidth(100);

        jTnfce1.getColumnModel().getColumn(4).setMinWidth(80);
        jTnfce1.getColumnModel().getColumn(4).setMaxWidth(80);
        jTnfce1.getColumnModel().getColumn(4).setPreferredWidth(80);

        jTnfce1.getColumnModel().getColumn(5).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(5).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(5).setPreferredWidth(100);

        jTnfce1.getColumnModel().getColumn(6).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(6).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(6).setPreferredWidth(100);

        jTnfce1.getColumnModel().getColumn(7).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(7).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(7).setPreferredWidth(100);
        
        jTnfce1.getColumnModel().getColumn(8).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(8).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(8).setPreferredWidth(100);

        jTnfce1.getColumnModel().getColumn(9).setMinWidth(100);
        jTnfce1.getColumnModel().getColumn(9).setMaxWidth(100);
        jTnfce1.getColumnModel().getColumn(9).setPreferredWidth(100);
        
        TableCellRenderer renderer = new PintarLinhasTabela1();
        jTnfce1.setDefaultRenderer(jTnfce1.getColumnClass(5), renderer);
        jTnfce1.repaint();
    }

    private void showAviso() {
        jDaviso.setLocationRelativeTo(this);
        jDaviso.setVisible(true);
    }

    private void closeAviso() {
        jDaviso.setVisible(false);
    }

    private void buscaSefazNfce(ArrayList<NfceBeans> chave) {
        int i = 1;
        for (NfceBeans nfce : chave) {
            try {
                buscaSefazNfceChave(nfce, chave.size(), i);
                i++;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao Consultar Chave no Sefaz:" + nfce.getChave() + " \n" + ex);
                if (JOptionPane.showConfirmDialog(rootPane, "Deseja Consultar a Chave: " + nfce.getChave() + ", Novamente ") == 0) {
                    try {
                        buscaSefazNfceChave(nfce, chave.size(), i);
                        i++;
                    } catch (Exception ex1) {
                        JOptionPane.showMessageDialog(rootPane, "Erro ao Consultar Novamente Chave no Sefaz:" + nfce.getChave() + " \n" + ex1);
                        i++;
                    }
                }
            }
        }

    }

    private void updateNfce() {
        for (int i = 0; i < jTnfce.getRowCount(); i++) {
            if ((Boolean) jTnfce.getValueAt(i, 8)) {
                if (!jTnfce.getValueAt(i, 7).equals("")) {
                    try {
                        jLaviso.setText("Atualizando: " + jTnfce.getValueAt(i, 1).toString());
                        new NfceDao().updateNfce(jTnfce.getValueAt(i, 0).toString(), jTnfce.getValueAt(i, 6).toString(), jTnfce.getValueAt(i, 7).toString());
                    } catch (SQLException | IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Erro ao Atualizar:" + jTnfce.getValueAt(i, 7).toString() + " \n" + ex);
                    }
                }

            }
        }
    }

    private void updateNfce1() {
        for (int i = 0; i < jTnfce1.getRowCount(); i++) {
            if ((Boolean) jTnfce1.getValueAt(i, 7)) {
                if (!jTnfce1.getValueAt(i, 5).equals(jTnfce1.getValueAt(i, 6))) {
                    if (jTnfce1.getValueAt(i, 6).equals("ENVIADO")) {
                        try {
                            jLaviso.setText("Atualizando: " + jTnfce1.getValueAt(i, 1).toString());
                            new NfceDao().updateNfceStatus(jTnfce1.getValueAt(i, 0).toString(), "ENVIADO", "NAO", 1);
                        } catch (SQLException | IOException ex) {
                            JOptionPane.showMessageDialog(rootPane, "Erro ao Atualizar:" + jTnfce.getValueAt(i, 2).toString() + " \n" + ex);
                        }
                    } else if (jTnfce1.getValueAt(i, 6).equals("CANCELADO")) {
                        try {
                            jLaviso.setText("Atualizando: " + jTnfce1.getValueAt(i, 1).toString());
                            new NfceDao().updateNfceStatus(jTnfce1.getValueAt(i, 0).toString(), "CANCELADO", "SIM", 3);
                        } catch (SQLException | IOException ex) {
                            JOptionPane.showMessageDialog(rootPane, "Erro ao Atualizar:" + jTnfce.getValueAt(i, 2).toString() + " \n" + ex);
                        }
                    }

                }

            }
        }
    }

    private boolean verificMarcado() {
        for (int i = 0; i < jTnfce.getRowCount(); i++) {
            if ((Boolean) jTnfce.getValueAt(i, 8)) {
                return true;
            }
        }
        return false;
    }

    private boolean verificMarcadoNfce1() {

        for (int i = 0; i < jTnfce1.getRowCount(); i++) {
            if ((Boolean) jTnfce1.getValueAt(i, 7)) {
                return true;
            }
        }
        return false;
    }

    private void buscaNfceCancelado() {
        try {
            DefaultTableModel modelnfce1 = (DefaultTableModel) jTnfce1.getModel();
            modelnfce1.setNumRows(0);
            jLaviso.setText("Analisando Banco Local");
            lnfce1 = new NfceDao().getNfceXmlCancelado(jDdtini1.getDate(), jDdtfin1.getDate());
            DecimalFormat formatter = new DecimalFormat("##.##");
            for (NfceBeans nfce : lnfce1) {
                //Float valor=Float.parseFloat(formatter.format(nfce.getValor().toString()).replace(",", "."));
                modelnfce1.addRow(new Object[]{nfce.getId_cupom(), nfce.getNro_dcto(), nfce.getChave(), nfce.getDt_venda(), nfce.getId_pdv(), nfce.getStatus_nfc(), "", false,nfce.getValor(),""});
            }
            buscaSefazNfceTotal(lnfce1);
            jTnfce1.repaint();
        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Consultar Vendas Base Local \n" + ex);
        }
    }

    private void buscaSefazNfceTotal(ArrayList<NfceBeans> chave) {
        int i = 1;
        for (NfceBeans nfce : chave) {
            try {
                jLaviso.setText("Analisando Banco Local com Sefaz:" + i++ + "|" + chave.size());
                Map<String,String> status=new HashMap<String, String>();
                status = new WebServiceNFce().SearcheStatus(nfce.getChave());
                jTnfce1.setValueAt(status.get("chave"), i - 2, 6);
                jTnfce1.setValueAt(Float.parseFloat(status.get("valor")), i - 2, 9);  
                if ((jTnfce1.getValueAt(i - 2, 6).toString().equals(jTnfce1.getValueAt(i - 2, 5).toString())) &&(jTnfce1.getValueAt(i - 2, 8).toString().equals(jTnfce1.getValueAt(i - 2, 9).toString()))) {
                    qtdeenv = qtdeenv + 1;                    
                } else {
                    qtdeerro = qtdeerro + 1;
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro ao Consultar Chave no Sefaz:" + nfce.getChave() + " \n" + ex);
            }
        }
    }

    private void buscaSefazNfceChave(NfceBeans nfce, int size, int i) throws Exception {
        jLaviso.setText("Analisando Banco Local com Sefaz:" + i + "|" + size);
        String xmlret = "false";
        if (nfce.getChave_xml().contains("52")) {
            xmlret = new WebServiceNFce().Searche(nfce.getChave_xml());
        }

        if ((!xmlret.contains(nfce.getChave_xml())) || (nfce.getChave_xml().length() < 44)) {
            if (nfce.getChave().contains("52")) {
                xmlret = new WebServiceNFce().Searche(nfce.getChave());
            }
            if (xmlret.contains(nfce.getChave())) {
                jTnfce.setValueAt(xmlret, i - 1, 6);
                jTnfce.setValueAt(nfce.getChave(), i - 1, 7);
            }
        } else {
            jTnfce.setValueAt(xmlret, i - 1, 6);
            jTnfce.setValueAt(nfce.getChave_xml(), i - 1, 7);
        }
    }

    private void selecionaDivergente() {        
        DefaultTableModel modelnfce1 = (DefaultTableModel) jTnfce1.getModel();
        if (jTnfce1.getRowCount() > 0) {            
            for (int i = 0; i < jTnfce1.getRowCount(); i++) {                                
                if ((jTnfce1.getValueAt(i, 5).equals(jTnfce1.getValueAt(i, 6))) && (jTnfce1.getValueAt(i, 8).toString().equals(jTnfce1.getValueAt(i, 9).toString()))) {
                    modelnfce1.removeRow(i);                    
                    i--;
                }
            }
            jTnfce1.setModel(modelnfce1);
        }
    }

    private void buscaSequencia() {
        jLaviso.setText("Analisando Banco Local");
        DefaultTableModel modelntseq = (DefaultTableModel) jTnfceseq.getModel();
        modelntseq.setNumRows(0);
        try {
            List<VndCupomSeqBeans> lvcsm = new VndCupomSeqDao().getVndCupomSeqMax();

            for (int i = 0; i < lvcsm.size(); i++) {
                List<Integer> lvcs = new VndCupomSeqDao().getVndCupomSeq(lvcsm.get(i).getNro_nfce());
                for (int j = 0; j < lvcsm.get(i).getMax_dcto(); j++) {
                    if (!lvcs.contains(j + 1)) {
                        modelntseq.addRow(new Object[]{lvcsm.get(i).getNro_nfce(), j + 1});
                    }

                }
            }

        } catch (SQLException | IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao Consultar Sequencia \n" + ex);
        }

    }
}
