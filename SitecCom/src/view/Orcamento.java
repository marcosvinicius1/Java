/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bancodados.CriaConexao;
import bins.*;
import dao.OrcamentoDao;
import dao.PessoaDao;
import dao.PessoaOrcamentoDao;
import dao.ProdutoDao;
import dao.ReceberDao;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MARCOS
 */
public class Orcamento extends javax.swing.JFrame {

    DefaultTableModel tmppessoa = new DefaultTableModel(null, new String[]{"ID", "NOME", "APELIDO", "CPF_CNPJ", "TELEFONE"});
    List<PessoaBins> lppessoa;
    DefaultTableModel tmpvendedor = new DefaultTableModel(null, new String[]{"ID", "NOME"});
    List<PessoaBins> lpvendedor;
    DefaultTableModel tmpproduto = new DefaultTableModel(null, new String[]{"ID", "CODIGO BARRA", "DESCRICAO", "QUANTIDADE", "VALOR CUSTO", "VALOR VENDA"});
    List<ProdutoBins> lpproduto;
    DefaultTableModel tmporcamento = new DefaultTableModel(null, new String[]{"ID", "CODBARRA", "DESCRICAO", "VALOR UNITARIO", "QUANTIDADE", "DESCONTO", "VALOR VENDA"});
    float somaproduto = 0;
    String numero;
    DefaultTableModel tmpdorcamento = new DefaultTableModel(null, new String[]{"ORCAMENTO", "CLIENTE", "DATA", "VALOR TOTAL", "TIPO"});
    List<PesoaOrcamentoBins> lpporcamento;
    List<OrcamentoBins> lporcamento;

    /**
     * Creates new form Orcamento
     */
    public Orcamento() {
        initComponents();
        inicializaTabelas();//INICIALIZA TABELAS NO JFRAME
        inicializaAtalhos();//INICIALIZA ATALHOS NO JFRAME
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDcliente = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTdpessoa = new javax.swing.JTable();
        jTdidpessoa = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTdpesquisacliente = new javax.swing.JTextField();
        jRdnome = new javax.swing.JRadioButton();
        jRdapelido = new javax.swing.JRadioButton();
        jRdcpf_cnpj = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        jDvendedor = new javax.swing.JDialog();
        jTdpesquisavendedor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTdvendedor = new javax.swing.JTable();
        jTdidvendedor = new javax.swing.JTextField();
        jDproduto = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTdpproduto = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jTdpesquisaproduto = new javax.swing.JTextField();
        jRdpdescricao = new javax.swing.JRadioButton();
        jRdpcodbarra = new javax.swing.JRadioButton();
        jTdidproduto = new javax.swing.JTextField();
        buttonGroupProduto = new javax.swing.ButtonGroup();
        buttonGroupCliente = new javax.swing.ButtonGroup();
        jDpagamento = new javax.swing.JDialog();
        jBdfechaorcamento = new javax.swing.JButton();
        jBDcancelar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jFdtotalorcamento = new javax.swing.JFormattedTextField();
        jCdformapagamento = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jRdorcamento = new javax.swing.JRadioButton();
        jRdvenda = new javax.swing.JRadioButton();
        buttonGrouppagamento = new javax.swing.ButtonGroup();
        jDorcamento = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTdopesquisa = new javax.swing.JTextField();
        jRdocliente = new javax.swing.JRadioButton();
        jRdonumero = new javax.swing.JRadioButton();
        jRdodata = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTdporcamento = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        buttonGrouppesqorcamento = new javax.swing.ButtonGroup();
        jDsenhalibera = new javax.swing.JDialog();
        jPasswordFieldsenha = new javax.swing.JPasswordField();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jDdatavec = new javax.swing.JDialog();
        jDdvencimento = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jBdok = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTparcela = new javax.swing.JTextField();
        jTdorc = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTorcamento = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTclientenome = new javax.swing.JTextField();
        jTclientecnpj = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBpesqcliente = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTvendedornome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jBpesqvendedor = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTcodigoproduto = new javax.swing.JTextField();
        jTprodutodescricao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jFprodutoqtde = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jFprodutovalorunit = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jFprodutovalortot = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jFprodutodescporc = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jBpesqproduto = new javax.swing.JButton();
        jBconfirma = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jFprodutodescreal = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jFtotalorcamento = new javax.swing.JFormattedTextField();
        jBexcluiitemorc = new javax.swing.JButton();
        jBfechavendaorc = new javax.swing.JButton();
        jTnumeroorcamento = new javax.swing.JTextField();
        jBnovoorc = new javax.swing.JButton();
        jBalterarorc = new javax.swing.JButton();
        jBexcluirorc = new javax.swing.JButton();
        jBconsultaorc = new javax.swing.JButton();
        jBsairorc = new javax.swing.JButton();
        jBcalcelarorc = new javax.swing.JButton();
        jTodata = new javax.swing.JTextField();
        jBorcimprimir = new javax.swing.JButton();

        jDcliente.setTitle("PESQUISA CLIENTES");
        jDcliente.setMinimumSize(new java.awt.Dimension(720, 420));
        jDcliente.setModal(true);
        jDcliente.setResizable(false);

        jTdpessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RAZÃO", "APELIDO", "CPF_CNPJ", "TELEFONE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTdpessoa.getTableHeader().setResizingAllowed(false);
        jTdpessoa.getTableHeader().setReorderingAllowed(false);
        jTdpessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTdpessoaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTdpessoa);

        jTdidpessoa.setEditable(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jTdpesquisacliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdpesquisaclienteActionPerformed(evt);
            }
        });
        jTdpesquisacliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTdpesquisaclienteKeyReleased(evt);
            }
        });

        buttonGroupCliente.add(jRdnome);
        jRdnome.setSelected(true);
        jRdnome.setText("RAZÃO");
        jRdnome.setName("nome"); // NOI18N

        buttonGroupCliente.add(jRdapelido);
        jRdapelido.setText("FANTASIA");
        jRdapelido.setName("fantasia"); // NOI18N

        buttonGroupCliente.add(jRdcpf_cnpj);
        jRdcpf_cnpj.setText("CPF_CNPJ");
        jRdcpf_cnpj.setName("cpf_cnpj"); // NOI18N

        jLabel22.setText("PESQUISA:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTdpesquisacliente, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRdnome, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRdapelido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRdcpf_cnpj)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTdpesquisacliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRdnome)
                    .addComponent(jRdapelido)
                    .addComponent(jRdcpf_cnpj)
                    .addComponent(jLabel22))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDclienteLayout = new javax.swing.GroupLayout(jDcliente.getContentPane());
        jDcliente.getContentPane().setLayout(jDclienteLayout);
        jDclienteLayout.setHorizontalGroup(
            jDclienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDclienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDclienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTdidpessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jDclienteLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel6, jScrollPane3});

        jDclienteLayout.setVerticalGroup(
            jDclienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDclienteLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jTdidpessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jDvendedor.setTitle("VENDEDOR");
        jDvendedor.setMinimumSize(new java.awt.Dimension(363, 293));
        jDvendedor.setModal(true);
        jDvendedor.setResizable(false);

        jTdpesquisavendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdpesquisavendedorActionPerformed(evt);
            }
        });
        jTdpesquisavendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTdpesquisavendedorKeyPressed(evt);
            }
        });

        jLabel11.setText("NOME:");

        jTdvendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTdvendedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTdvendedorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTdvendedor);

        jTdidvendedor.setEditable(false);
        jTdidvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdidvendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDvendedorLayout = new javax.swing.GroupLayout(jDvendedor.getContentPane());
        jDvendedor.getContentPane().setLayout(jDvendedorLayout);
        jDvendedorLayout.setHorizontalGroup(
            jDvendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDvendedorLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jDvendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDvendedorLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTdpesquisavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jTdidvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jDvendedorLayout.setVerticalGroup(
            jDvendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDvendedorLayout.createSequentialGroup()
                .addGroup(jDvendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDvendedorLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jTdpesquisavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDvendedorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTdidvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jDproduto.setTitle("PRODUTO");
        jDproduto.setMinimumSize(new java.awt.Dimension(701, 400));
        jDproduto.setModal(true);
        jDproduto.setResizable(false);

        jTdpproduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO BARRA", "DESCRICAO", "QUANTIDADE", "VALOR CUSTO", "VALOR VENDA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTdpproduto.getTableHeader().setResizingAllowed(false);
        jTdpproduto.getTableHeader().setReorderingAllowed(false);
        jTdpproduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTdpprodutoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTdpproduto);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel26.setText("PESQUISA:");

        jTdpesquisaproduto.setName("descricao"); // NOI18N
        jTdpesquisaproduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTdpesquisaprodutoKeyReleased(evt);
            }
        });

        buttonGroupProduto.add(jRdpdescricao);
        jRdpdescricao.setSelected(true);
        jRdpdescricao.setText("DESCRIÇÃO");
        jRdpdescricao.setName("descricao"); // NOI18N

        buttonGroupProduto.add(jRdpcodbarra);
        jRdpcodbarra.setText("CODBARRA");
        jRdpcodbarra.setName("codbarra"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTdpesquisaproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRdpdescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRdpcodbarra)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jTdpesquisaproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRdpdescricao)
                    .addComponent(jRdpcodbarra))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTdidproduto.setEditable(false);

        javax.swing.GroupLayout jDprodutoLayout = new javax.swing.GroupLayout(jDproduto.getContentPane());
        jDproduto.getContentPane().setLayout(jDprodutoLayout);
        jDprodutoLayout.setHorizontalGroup(
            jDprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDprodutoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jDprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane5)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTdidproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jDprodutoLayout.setVerticalGroup(
            jDprodutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDprodutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTdidproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jDpagamento.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDpagamento.setTitle("FECHAMENTO");
        jDpagamento.setMinimumSize(new java.awt.Dimension(430, 280));
        jDpagamento.setModal(true);
        jDpagamento.setResizable(false);

        jBdfechaorcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Uteis/salvar.png"))); // NOI18N
        jBdfechaorcamento.setText("OK");
        jBdfechaorcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdfechaorcamentoActionPerformed(evt);
            }
        });

        jBDcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Uteis/CANCELAR.png"))); // NOI18N
        jBDcancelar.setText("CANCELAR");
        jBDcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDcancelarActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel12.setText("TOTAL ORCAMENTO:");

        jFdtotalorcamento.setEditable(false);
        jFdtotalorcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFdtotalorcamentoActionPerformed(evt);
            }
        });

        jCdformapagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DINHEIRO", "CHEQUE", "CONVENIO", "CARTAO" }));
        jCdformapagamento.setName(""); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFdtotalorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCdformapagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jFdtotalorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCdformapagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO"));

        buttonGrouppagamento.add(jRdorcamento);
        jRdorcamento.setSelected(true);
        jRdorcamento.setText("ORCAMENTO");

        buttonGrouppagamento.add(jRdvenda);
        jRdvenda.setText("VENDA");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jRdorcamento)
                .addGap(42, 42, 42)
                .addComponent(jRdvenda)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRdvenda)
                    .addComponent(jRdorcamento))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDpagamentoLayout = new javax.swing.GroupLayout(jDpagamento.getContentPane());
        jDpagamento.getContentPane().setLayout(jDpagamentoLayout);
        jDpagamentoLayout.setHorizontalGroup(
            jDpagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDpagamentoLayout.createSequentialGroup()
                .addGroup(jDpagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDpagamentoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDpagamentoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDpagamentoLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jBdfechaorcamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBDcancelar)
                .addGap(45, 45, 45))
        );
        jDpagamentoLayout.setVerticalGroup(
            jDpagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDpagamentoLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDpagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBdfechaorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jDorcamento.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDorcamento.setTitle("PESQUISA ORCAMENTO");
        jDorcamento.setFocusCycleRoot(false);
        jDorcamento.setMinimumSize(new java.awt.Dimension(708, 403));
        jDorcamento.setModal(true);
        jDorcamento.setResizable(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setMaximumSize(new java.awt.Dimension(380, 72));
        jPanel8.setPreferredSize(new java.awt.Dimension(658, 72));

        jLabel13.setText("PESQUISA:");

        jTdopesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTdopesquisaKeyReleased(evt);
            }
        });

        buttonGrouppesqorcamento.add(jRdocliente);
        jRdocliente.setSelected(true);
        jRdocliente.setText("CLIENTE");
        jRdocliente.setName("pessoa.nome"); // NOI18N

        buttonGrouppesqorcamento.add(jRdonumero);
        jRdonumero.setText("NUMERO");
        jRdonumero.setName("pesoaorcamento.id"); // NOI18N

        buttonGrouppesqorcamento.add(jRdodata);
        jRdodata.setText("DATA");
        jRdodata.setName("data"); // NOI18N
        jRdodata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRdodataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTdopesquisa)
                .addGap(18, 18, 18)
                .addComponent(jRdocliente)
                .addGap(18, 18, 18)
                .addComponent(jRdonumero)
                .addGap(18, 18, 18)
                .addComponent(jRdodata)
                .addGap(27, 27, 27))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTdopesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRdocliente)
                    .addComponent(jRdonumero)
                    .addComponent(jRdodata))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTdporcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "CLIENTE", "DATA", "VALOR TOTAL", "TIPO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTdporcamento.getTableHeader().setResizingAllowed(false);
        jTdporcamento.getTableHeader().setReorderingAllowed(false);
        jTdporcamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTdporcamentoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTdporcamento);
        jTdporcamento.getColumnModel().getColumn(0).setResizable(false);
        jTdporcamento.getColumnModel().getColumn(1).setResizable(false);
        jTdporcamento.getColumnModel().getColumn(2).setResizable(false);
        jTdporcamento.getColumnModel().getColumn(3).setResizable(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Uteis/EMPRIMIR32X32.png"))); // NOI18N
        jButton1.setText("IMPRIMIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDorcamentoLayout = new javax.swing.GroupLayout(jDorcamento.getContentPane());
        jDorcamento.getContentPane().setLayout(jDorcamentoLayout);
        jDorcamentoLayout.setHorizontalGroup(
            jDorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDorcamentoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jDorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jDorcamentoLayout.setVerticalGroup(
            jDorcamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDorcamentoLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDsenhalibera.setTitle("SENHA LIBERACAO");
        jDsenhalibera.setMinimumSize(new java.awt.Dimension(331, 130));
        jDsenhalibera.setModal(true);
        jDsenhalibera.setResizable(false);

        jLabel14.setText("DIGITE A SENHA ADMINISTRATIVA");

        jButton2.setText("ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDsenhaliberaLayout = new javax.swing.GroupLayout(jDsenhalibera.getContentPane());
        jDsenhalibera.getContentPane().setLayout(jDsenhaliberaLayout);
        jDsenhaliberaLayout.setHorizontalGroup(
            jDsenhaliberaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDsenhaliberaLayout.createSequentialGroup()
                .addGroup(jDsenhaliberaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDsenhaliberaLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jDsenhaliberaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jDsenhaliberaLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPasswordFieldsenha, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jDsenhaliberaLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jDsenhaliberaLayout.setVerticalGroup(
            jDsenhaliberaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDsenhaliberaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jDdatavec.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDdatavec.setTitle("BOLETO");
        jDdatavec.setMinimumSize(new java.awt.Dimension(500, 180));
        jDdatavec.setModal(true);
        jDdatavec.setResizable(false);

        jLabel15.setText("DATA DE VENCIMENTO");

        jLabel16.setText("QUANTIDADE DE PARCELAS");

        jLabel17.setText("SELECIONE A QUANTIDADE DE PARCELAS E A DATA DE VENCIMENTO");

        jBdok.setText("OK");
        jBdok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdokActionPerformed(evt);
            }
        });

        jLabel18.setText("ORCAMENTO");

        jTparcela.setText("1");

        jTdorc.setEditable(false);

        javax.swing.GroupLayout jDdatavecLayout = new javax.swing.GroupLayout(jDdatavec.getContentPane());
        jDdatavec.getContentPane().setLayout(jDdatavecLayout);
        jDdatavecLayout.setHorizontalGroup(
            jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDdatavecLayout.createSequentialGroup()
                .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDdatavecLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTdorc))
                        .addGap(32, 32, 32)
                        .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jTparcela, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDdatavecLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel15))
                            .addGroup(jDdatavecLayout.createSequentialGroup()
                                .addComponent(jDdvencimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(24, 24, 24))))
                    .addGroup(jDdatavecLayout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jBdok, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDdatavecLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel17)))
                .addGap(33, 33, 33))
        );
        jDdatavecLayout.setVerticalGroup(
            jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDdatavecLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel18)))
                .addGap(18, 18, 18)
                .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDdvencimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDdatavecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTparcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTdorc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBdok)
                .addGap(17, 17, 17))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ORCAMENTO");
        setResizable(false);

        jTorcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODBARRA", "DESCRICAO", "VALOR UNITARIO", "QUANTIDADE", "DESCONTO", "VALOR TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTorcamento.getTableHeader().setResizingAllowed(false);
        jTorcamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTorcamento);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("CLIENTE"));
        jPanel2.setToolTipText("CLIENTE");
        jPanel2.setPreferredSize(new java.awt.Dimension(900, 76));

        jLabel1.setText("NOME:");

        jTclientenome.setEditable(false);

        jTclientecnpj.setEditable(false);

        jLabel2.setText("CPF/CNPJ:");

        jBpesqcliente.setText("F1");
        jBpesqcliente.setEnabled(false);
        jBpesqcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpesqclienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTclientenome, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTclientecnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBpesqcliente)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTclientenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTclientecnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jBpesqcliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("VENDEDOR"));

        jTvendedornome.setEditable(false);
        jTvendedornome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTvendedornomeActionPerformed(evt);
            }
        });

        jLabel3.setText("NOME:");

        jBpesqvendedor.setText("F2");
        jBpesqvendedor.setEnabled(false);
        jBpesqvendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpesqvendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTvendedornome, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBpesqvendedor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTvendedornome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBpesqvendedor))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("PRODUTOS"));
        jPanel3.setPreferredSize(new java.awt.Dimension(850, 113));

        jLabel4.setText("CODIGO:");

        jTcodigoproduto.setEditable(false);
        jTcodigoproduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTcodigoprodutoKeyPressed(evt);
            }
        });

        jTprodutodescricao.setEditable(false);

        jLabel5.setText("DESCRICAO:");

        jFprodutoqtde.setEditable(false);
        jFprodutoqtde.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));
        jFprodutoqtde.setText("0,00");
        jFprodutoqtde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFprodutoqtdeKeyReleased(evt);
            }
        });

        jLabel6.setText("QUANTIDADE:");

        jFprodutovalorunit.setEditable(false);
        jFprodutovalorunit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));

        jLabel7.setText("VALOR UNITARIO:");

        jFprodutovalortot.setEditable(false);
        jFprodutovalortot.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));
        jFprodutovalortot.setText("0,00");

        jLabel8.setText("VALOR TOTAL");

        jFprodutodescporc.setEditable(false);
        jFprodutodescporc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));
        jFprodutodescporc.setText("0,00");
        jFprodutodescporc.setToolTipText("");
        jFprodutodescporc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFprodutodescporcKeyReleased(evt);
            }
        });

        jLabel9.setText("DESCONTO");

        jBpesqproduto.setText("F3");
        jBpesqproduto.setEnabled(false);
        jBpesqproduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpesqprodutoActionPerformed(evt);
            }
        });

        jBconfirma.setText("CONFIRMA-F4");
        jBconfirma.setEnabled(false);
        jBconfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBconfirmaActionPerformed(evt);
            }
        });

        jLabel19.setText("%");

        jFprodutodescreal.setEditable(false);
        jFprodutodescreal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));
        jFprodutodescreal.setText("0,00");
        jFprodutodescreal.setToolTipText("");
        jFprodutodescreal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFprodutodescrealActionPerformed(evt);
            }
        });
        jFprodutodescreal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFprodutodescrealKeyReleased(evt);
            }
        });

        jLabel20.setText("R$");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTprodutodescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTcodigoproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jBpesqproduto)))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(24, 24, 24)
                        .addComponent(jFprodutoqtde, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFprodutovalorunit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFprodutovalortot, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBconfirma)
                        .addGap(45, 45, 45))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFprodutodescporc, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFprodutodescreal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jFprodutodescporc, jFprodutodescreal});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTcodigoproduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFprodutoqtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jFprodutodescporc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jBpesqproduto)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFprodutodescreal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFprodutovalorunit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jFprodutovalortot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTprodutodescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jBconfirma))
                .addGap(21, 21, 21))
        );

        jLabel10.setText("TOTAL ORCAMENTO:");

        jFtotalorcamento.setEditable(false);
        jFtotalorcamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##0.00"))));

        jBexcluiitemorc.setText("EXCLUIR ITEM");
        jBexcluiitemorc.setEnabled(false);
        jBexcluiitemorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluiitemorcActionPerformed(evt);
            }
        });

        jBfechavendaorc.setText("FECHA VENDA");
        jBfechavendaorc.setEnabled(false);
        jBfechavendaorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBfechavendaorcActionPerformed(evt);
            }
        });

        jTnumeroorcamento.setEditable(false);

        jBnovoorc.setText("NOVO");
        jBnovoorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBnovoorcActionPerformed(evt);
            }
        });

        jBalterarorc.setText("ALTERAR");
        jBalterarorc.setEnabled(false);
        jBalterarorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalterarorcActionPerformed(evt);
            }
        });

        jBexcluirorc.setText("EXCLUIR");
        jBexcluirorc.setEnabled(false);
        jBexcluirorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluirorcActionPerformed(evt);
            }
        });

        jBconsultaorc.setText("CONSULTA");
        jBconsultaorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBconsultaorcActionPerformed(evt);
            }
        });

        jBsairorc.setText("SAIR");
        jBsairorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsairorcActionPerformed(evt);
            }
        });

        jBcalcelarorc.setText("CANCELAR");
        jBcalcelarorc.setEnabled(false);
        jBcalcelarorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcalcelarorcActionPerformed(evt);
            }
        });

        jTodata.setEditable(false);

        jBorcimprimir.setText("IMPRIMIR");
        jBorcimprimir.setEnabled(false);
        jBorcimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBorcimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBnovoorc, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBalterarorc)
                        .addGap(25, 25, 25)
                        .addComponent(jBexcluirorc, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBconsultaorc, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBcalcelarorc)
                        .addGap(18, 18, 18)
                        .addComponent(jBsairorc, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jTodata)
                        .addGap(22, 22, 22)
                        .addComponent(jTnumeroorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jBorcimprimir)
                            .addGap(56, 56, 56)
                            .addComponent(jBfechavendaorc)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jBexcluiitemorc)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jFtotalorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel3, jScrollPane1});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBfechavendaorc, jBorcimprimir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTnumeroorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBnovoorc)
                    .addComponent(jBalterarorc)
                    .addComponent(jBexcluirorc)
                    .addComponent(jBconsultaorc)
                    .addComponent(jBsairorc)
                    .addComponent(jBcalcelarorc)
                    .addComponent(jTodata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jFtotalorcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBexcluiitemorc)
                    .addComponent(jBfechavendaorc)
                    .addComponent(jBorcimprimir))
                .addGap(25, 25, 25))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBfechavendaorc, jBorcimprimir});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTvendedornomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTvendedornomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTvendedornomeActionPerformed
   public String formataValor(Double s){
       DecimalFormat df= new DecimalFormat("##0.00");
       String numero="";
       try{
       numero=df.format(s);
       }catch(Exception ex){
           JOptionPane.showMessageDialog(null, "Erro ao Formatar"+ex);
       }
       return numero;
  }
    private void inicializaTabelas(){//INICIALIZA TABELAS NO JFRAME
        jTdpessoa.getColumnModel().getColumn(0).setMaxWidth(40);
        jTdpessoa.getColumnModel().getColumn(1);
        jTdpessoa.getColumnModel().getColumn(2);
        jTdpessoa.getColumnModel().getColumn(3);
        jTdpessoa.getColumnModel().getColumn(4);

        jTdvendedor.getColumnModel().getColumn(0).setMaxWidth(40);
        jTdvendedor.getColumnModel().getColumn(1);

        jTdpproduto.getColumnModel().getColumn(0).setMaxWidth(40);
        jTdpproduto.getColumnModel().getColumn(1);
        jTdpproduto.getColumnModel().getColumn(2);
        jTdpproduto.getColumnModel().getColumn(3);
        jTdpproduto.getColumnModel().getColumn(4);
        jTdpproduto.getColumnModel().getColumn(5);

        jTorcamento.getColumnModel().getColumn(0).setMaxWidth(40);
        jTorcamento.getColumnModel().getColumn(1);
        jTorcamento.getColumnModel().getColumn(2);
        jTorcamento.getColumnModel().getColumn(3);
        jTorcamento.getColumnModel().getColumn(4);
        jTorcamento.getColumnModel().getColumn(5);
        jTorcamento.getColumnModel().getColumn(6);

        jTdporcamento.getColumnModel().getColumn(0);
        jTdporcamento.getColumnModel().getColumn(1);
        jTdporcamento.getColumnModel().getColumn(2);
        jTdporcamento.getColumnModel().getColumn(3);
        jTdporcamento.getColumnModel().getColumn(4).setMaxWidth(50);
    }
    private void inicializaAtalhos(){
        //ATALHO PARA JBCLIENTE
        KeyStroke KeyStrokeJBCLIENTE = KeyStroke.getKeyStroke(KeyEvent.VK_F1,0);
        String actionNameJBCLIENTE="TECLA_F1";
        InputMap InputMapJBCLIENTE= jBpesqcliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        InputMapJBCLIENTE.put(KeyStrokeJBCLIENTE, actionNameJBCLIENTE);
        ActionMap actionMapJBCLIENTE=jBpesqcliente.getActionMap();
        actionMapJBCLIENTE.put(actionNameJBCLIENTE, acaoJBpesquisacliente);
        
        //ATALHO PARA JBVENDEDOR
        KeyStroke KeyStrokeJBVENDEDOR = KeyStroke.getKeyStroke(KeyEvent.VK_F2,0);
        String actionNameJBVENDEDOR= "TECLA_F2";
        InputMap InputMapJBVENDEDOR= jBpesqvendedor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        InputMapJBVENDEDOR.put(KeyStrokeJBVENDEDOR, actionNameJBVENDEDOR);
        ActionMap actionMapJBVENDEDOR=jBpesqvendedor.getActionMap();
        actionMapJBVENDEDOR.put(actionNameJBVENDEDOR, acaoJBpesquisavendedor);
        
        //ATALHO PARA JBPRODUTO
        KeyStroke KeyStrokeJBPRODUTO = KeyStroke.getKeyStroke(KeyEvent.VK_F3,0);
        String actionNameJBPRODUTO= "TECLA_F3";
        InputMap InputMapJBPRODUTO= jBpesqproduto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        InputMapJBPRODUTO.put(KeyStrokeJBPRODUTO, actionNameJBPRODUTO);
        ActionMap actionMapJBPRODUTO=jBpesqproduto.getActionMap();
        actionMapJBPRODUTO.put(actionNameJBPRODUTO, acaoJBpesquisaproduto);
        
        //ATALHO PARA JBCONFIRMA
        KeyStroke KeyStrokeJBCONFIRMA = KeyStroke.getKeyStroke(KeyEvent.VK_F4,0);
        String actionNameJBCONFIRMA= "TECLA_F4";
        InputMap InputMapJBCONFIRMA= jBconfirma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        InputMapJBCONFIRMA.put(KeyStrokeJBCONFIRMA, actionNameJBCONFIRMA);
        ActionMap actionMapJBCONFIRMA=jBconfirma.getActionMap();
        actionMapJBCONFIRMA.put(actionNameJBCONFIRMA, acaoJBconfirma);
    }
    //ACAO DO BOTAO JBCLIENTE
    Action acaoJBpesquisacliente= new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            jBpesqcliente.doClick();
        }
    };
    //ACAO DO BOTAO JBVENDEDOR
    Action acaoJBpesquisavendedor= new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            jBpesqvendedor.doClick();
        }
    };
    //ACAO DO BOTAO JBPRODUTO
    Action acaoJBpesquisaproduto= new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            jBpesqproduto.doClick();
        }
    };
    //ACAO DO JBCONFIRMA
    Action acaoJBconfirma= new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            jBconfirma.doClick();
        }
    };
    //FUNCAO CONVERTE DATA
    public java.sql.Date ConverteData(String data) {
        java.sql.Date date = null;
        if (data != "" && data != null) {
            try {
                DateFormat formato = new SimpleDateFormat("dd.MM.yyyy");
                date = new java.sql.Date(formato.parse(data).getTime());
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        return date;
    }
    public void habilita() {//metodo habilita campos da tela
        jBpesqcliente.setEnabled(true);
        jBpesqvendedor.setEnabled(true);
        jBpesqproduto.setEnabled(true);
        jBconfirma.setEnabled(true);
        jTcodigoproduto.setEditable(true);
        jFprodutoqtde.setEditable(true);
        jFprodutodescporc.setEditable(true);
        jFprodutodescreal.setEditable(true);
    }

    public void desabilita() {//metodo desabilita campos da tela
        jBpesqcliente.setEnabled(false);
        jBpesqvendedor.setEnabled(false);
        jBpesqproduto.setEnabled(false);
        jBconfirma.setEnabled(false);
        jTcodigoproduto.setEditable(false);
        jFprodutoqtde.setEditable(false);
        jFprodutodescporc.setEditable(false);
        jFprodutodescreal.setEditable(false);

    }
    private void jBfechavendaorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBfechavendaorcActionPerformed
        // TODO add your handling code here:
        if (jTorcamento.getRowCount() > 0) {
            jDpagamento.setLocationRelativeTo(null);
            jFdtotalorcamento.setText(jFtotalorcamento.getText());
            jDpagamento.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Orcamento precisa ter itens");
        }
    }//GEN-LAST:event_jBfechavendaorcActionPerformed

    private void jTdpessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTdpessoaMouseClicked
        // TODO add your handling code here:
        selecaopesquisapessoa(lppessoa);
        jDcliente.setVisible(false);
    }//GEN-LAST:event_jTdpessoaMouseClicked
    public void selecaopesquisapessoa(List<PessoaBins> pb) {
        for (int i = 0; i < pb.size(); i++) {
            if (jTdpessoa.getSelectedRow() == i) {
                jTclientenome.setText(pb.get(i).getNome());
                jTclientecnpj.setText(pb.get(i).getCpf_cnpj());
                jTdidpessoa.setText(String.valueOf(pb.get(i).getId()));
            }
        }
    }
    private void jTdpesquisaclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdpesquisaclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdpesquisaclienteActionPerformed

    private void jBpesqclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpesqclienteActionPerformed
        // TODO add your handling code here:
        jDcliente.setLocationRelativeTo(null);
        jDcliente.setVisible(true);
        DefaultTableModel modelocidade = (DefaultTableModel) jTdpessoa.getModel(); //CRIA OBJETO MODELO DO TIPO DEFAULTTABLEMODEL
        modelocidade.setNumRows(0);
        jTdpesquisacliente.requestFocus();
        jTdpesquisacliente.setText("");
        
    }//GEN-LAST:event_jBpesqclienteActionPerformed

    private void jBpesqvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpesqvendedorActionPerformed
        // TODO add your handling code here:
        jDvendedor.setLocationRelativeTo(null);
        jDvendedor.setVisible(true);
        DefaultTableModel modelovendedor = (DefaultTableModel) jTdvendedor.getModel();
        modelovendedor.setNumRows(0);
        jTdpesquisavendedor.requestFocus();
        jTdpesquisavendedor.setText("");
        
    }//GEN-LAST:event_jBpesqvendedorActionPerformed

    private void jTdpesquisavendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdpesquisavendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdpesquisavendedorActionPerformed

    private void jTdpesquisavendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdpesquisavendedorKeyPressed
        // TODO add your handling code here:        
        try {
            PessoaDao pd = new PessoaDao();
            DadosEmpresaBins de = new DadosEmpresaBins();
            lpvendedor = pd.getListavendedor("%" + jTdpesquisavendedor.getText() + "%", de.getId());
            mostravendedor(lpvendedor);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar" + ex);
        }

    }//GEN-LAST:event_jTdpesquisavendedorKeyPressed

    private void jTdidvendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdidvendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdidvendedorActionPerformed

    private void jTdvendedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTdvendedorMouseClicked
        // TODO add your handling code here:
        selecaopesquisavendedor(lpvendedor);
        jDvendedor.setVisible(false);

    }//GEN-LAST:event_jTdvendedorMouseClicked

    private void jBpesqprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpesqprodutoActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modeloproduto = (DefaultTableModel) jTdpproduto.getModel();
        modeloproduto.setNumRows(0);
        jDproduto.setLocationRelativeTo(null);
        jDproduto.setVisible(true);
        jTdpesquisaproduto.setText("");
        jTdpesquisaproduto.requestFocus();
    }//GEN-LAST:event_jBpesqprodutoActionPerformed

    private void jTdpprodutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTdpprodutoMouseClicked
        // TODO add your handling code here:
        jFprodutoqtde.setText("0,00");
        jFprodutovalorunit.setText("0,00");
        jFprodutodescporc.setText("0,00");
        jFprodutovalortot.setText("0,00");
        jFprodutodescreal.setText("0,00");
        selecionapesquisaproduto(lpproduto);
        jDproduto.setVisible(false);
        
    }//GEN-LAST:event_jTdpprodutoMouseClicked
    public void selecionapesquisaproduto(List<ProdutoBins> pb) {
        for (int i = 0; i < pb.size(); i++) {
            if (jTdpproduto.getSelectedRow() == i) {
                jTdidproduto.setText(String.valueOf(pb.get(i).getId()));
                jTcodigoproduto.setText(pb.get(i).getCodbarra());
                jTprodutodescricao.setText(pb.get(i).getDescricao());
                jFprodutovalorunit.setText(String.valueOf(pb.get(i).getPrecovenda()).replace(".", ","));
                jFprodutovalortot.setText(String.valueOf(pb.get(i).getPrecovenda()).replace(".", ","));
                jFprodutoqtde.setText("1,00");
            }
        }
    }

    public void calculatotalvenda() {//metodo calcula total do produto
        double vunit = Double.parseDouble(jFprodutovalorunit.getText().replace(",", "."));
        double qtde = Double.parseDouble(jFprodutoqtde.getText().replace(",", "."));
        double desc = Double.parseDouble(jFprodutodescreal.getText().replace(",", "."));
       // desc=(vunit*qtde)*desc/100;
        double valor=((vunit * qtde)-desc);
        jFprodutovalortot.setText(formataValor(valor).replace(".", ","));
    }
    private void jTcodigoprodutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTcodigoprodutoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jFprodutoqtde.setText("0,00");
            jFprodutovalorunit.setText("0,00");
            jFprodutodescporc.setText("0,00");
            jFprodutovalortot.setText("0,00");
            pesquisapcodbarra();
        }
    }//GEN-LAST:event_jTcodigoprodutoKeyPressed

    private void jBconfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBconfirmaActionPerformed
        // TODO add your handling code here:
        float ptotal = Float.valueOf(jFprodutovalortot.getText().replace(",", "."));
        
        if (!"".equals(jTdidproduto.getText())) {
            if (ptotal > 0) {
                DefaultTableModel modeloorcamento = (DefaultTableModel) jTorcamento.getModel();
                modeloorcamento.addRow(new Object[]{jTdidproduto.getText(), jTcodigoproduto.getText(), jTprodutodescricao.getText(),
                    jFprodutovalorunit.getText(), jFprodutoqtde.getText(), jFprodutodescreal.getText(), jFprodutovalortot.getText()});
                somaproduto = somaproduto + Float.valueOf(jFprodutovalortot.getText().replace(",", "."));
                jFtotalorcamento.setText(String.valueOf(somaproduto).replace(".", ","));
                limpaproduto();
            } else {
                JOptionPane.showMessageDialog(null, "Valor Total Produto Igual ou Menor Que 0,00");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Produto");
        }
    }//GEN-LAST:event_jBconfirmaActionPerformed

    private void jBexcluiitemorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluiitemorcActionPerformed
        // TODO add your handling code here:
        if (jTorcamento.getSelectedRow() >= 0) {
            String totalitem = String.valueOf(jTorcamento.getValueAt(jTorcamento.getSelectedRow(), 6)).replace(",", ".");
            float itemformatado = Float.valueOf(totalitem);
            somaproduto = somaproduto - itemformatado;
            jFtotalorcamento.setText(String.valueOf(somaproduto).replace(".", ","));
            ((DefaultTableModel) jTorcamento.getModel()).removeRow(jTorcamento.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione Um Produto Para Ser Excluido");
        }
    }//GEN-LAST:event_jBexcluiitemorcActionPerformed

    private void jBdfechaorcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdfechaorcamentoActionPerformed
        // TODO add your handling code here: 
       fechapagamento();
       fechaorcamento();
    }//GEN-LAST:event_jBdfechaorcamentoActionPerformed
    public void fechaorcamento(){
         Aguarde a = new Aguarde();
        numero = jTnumeroorcamento.getText();//VARIAVEL RECEBE NUMERO DO ORCAMENTO
        if ("".equals(jTnumeroorcamento.getText())) {//SE O ORCAMENTO NAO TIVER UM NUMERO CADASTRADO           
            cadastraorcamento();        
            threadaguarde(a);//execulta animacao aguarde
            threadorcamento(a);//thread chama metodo imprime orcamento
           // desabilita();//desabilita campos
          //  limpaorcamento();//limpa campos
          //  novoconsultasair();//limpa campos
        } else {//ORCAMENTO TEM UM NUMERO CADASTRADO
            removeprodutoorcamento();//REMOVE OS PRODUTOS DO BANCO COM O NUMERO DE ORCAMENTO
            alteraorcamento();//ALTERA ORCAMENTO E INSERE OS NOVOS ITENS COM O NUMERO DE ORCAMENTO
           // novoconsultasair();          
            threadaguarde(a);//execulta animacao aguarde
            threadorcamento(a);//thread chama metodo imprime orcamento
           // limpaorcamento();//limpa campos
        }
    }
    public void fechapagamento() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                jDpagamento.setVisible(false);
                
            }
        }).start();
    }
    public void baixaestoque(int id, Float qtde) {//metodo baixa estoque
        if (jRdvenda.isSelected()) {
            ProdutoBins pb = new ProdutoBins();
            pb.setId(id);
            try {
                ProdutoDao pd = new ProdutoDao();
                pd.baixaestoque(pb, qtde);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao baixar estoque" + ex);
            }
        }
    }

    public void retornaestoque(int id, Float qtde) {//retorna estoque
        ProdutoBins pb = new ProdutoBins();//objeto de produtos bins
        pb.setId(id);//seta no id empresa o valor recebido no parametro
        try {
            ProdutoDao pd = new ProdutoDao();//objeto produto dao
            pd.retornaestoque(pb, qtde);//metodo que retorna estoque do produto
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao retornar estoque" + ex);
        }
    }

    public void imprimeorcamento(String norcamento) {//metodo imprime orcamento
        try {
            int numero = Integer.valueOf(norcamento);//variavel recebe numero orcamento
            CriaConexao con = new CriaConexao();//cria variavel tipo conexao
            Map map = new HashMap();//cria variativo de parametro
            map.put("numero", numero);//recebe parametro para o relatorio
            JasperPrint jasperPrint = JasperFillManager.fillReport("./Relatorio/orcamento.jasper", map, CriaConexao.getConexao());//chama relatorio   
            JasperViewer jrviewer = new JasperViewer(jasperPrint, false);//cria variavel do tipo vil
            jrviewer.setVisible(true);   //visualiza o relatorio
            jrviewer.toFront();  //coloca ela na frente das janelas
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatorio" + ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Selecione um Orcamento" + ex);
        }
    }

    public void alteraorcamento() {
        if (jTorcamento.getRowCount() > 0) {
            DadosEmpresaBins de = new DadosEmpresaBins();
            DataBins db = new DataBins();
            String data2 = String.valueOf(db.getDia()) + "." + String.valueOf(db.getMes()) + "." + String.valueOf(db.getAno());
            String data = String.valueOf(db.getAno()) + "." + String.valueOf(db.getMes()) + "." + String.valueOf(db.getDia());
            PesoaOrcamentoBins po = new PesoaOrcamentoBins();
            if (!"".equals(jTdidpessoa.getText()) && !"".equals(jTdidvendedor.getText())) {
                po.setPessoacliente(Integer.valueOf(jTdidpessoa.getText()));
                po.setPessoavendedor(Integer.valueOf(jTdidvendedor.getText()));
                po.setEmpresa(de.getId());
                po.setData(data);
                po.setVorcamento(Float.valueOf(jFdtotalorcamento.getText().replace(",", ".")));
                po.setTipo(selecaotipoorcamento());
                po.setId(Integer.parseInt(jTnumeroorcamento.getText()));
                po.setFormapg(String.valueOf(jCdformapagamento.getSelectedItem()));
                try {
                    PessoaOrcamentoDao pd = new PessoaOrcamentoDao();
                    pd.altera(po);
                    int numeroorcamento = Integer.parseInt(jTnumeroorcamento.getText());
                    produtoorcamento(numeroorcamento);
                    if("CONVENIO".equals(String.valueOf(jCdformapagamento.getSelectedItem())) && jRdvenda.isSelected()){
                        jTdorc.setText(String.valueOf(numeroorcamento));
                        jDdvencimento.setDate(ConverteData(data2));
                        jDdatavec.setLocationRelativeTo(null);
                        jDdatavec.setVisible(true);                       
                       // gerafinanceiro(numeroorcamento);
                    }else{
                        desabilita();
                        limpaorcamento();
                        novoconsultasair();
                    }
                   /* desabilita();
                    limpaorcamento();
                    novoconsultasair();*/
                    JOptionPane.showMessageDialog(null, "Orcamento Alterado");

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao cadastrar pesssoa orcamento" + ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Obrigatorio ter Cliente e Vendedor");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Orcamento precisa ter itens");
        }
    }

    public void cadastraorcamento() {
        if (jTorcamento.getRowCount() > 0) {

            DadosEmpresaBins de = new DadosEmpresaBins();
            DataBins db = new DataBins();
            String norcamento = numeroorcamento();
            String data = String.valueOf(db.getAno()) + "." + String.valueOf(db.getMes())+"."+String.valueOf(db.getDia());
            String data2 =  String.valueOf(db.getDia())+ "." + String.valueOf(db.getMes())+"."+String.valueOf(db.getAno());
            PesoaOrcamentoBins po = new PesoaOrcamentoBins();
            if (!"".equals(jTdidpessoa.getText()) && !"".equals(jTdidvendedor.getText())) {
                po.setPessoacliente(Integer.valueOf(jTdidpessoa.getText()));
                po.setPessoavendedor(Integer.valueOf(jTdidvendedor.getText()));
                po.setEmpresa(de.getId());
                po.setData(data);
                po.setVorcamento(Float.valueOf(jFdtotalorcamento.getText().replace(",", ".")));
                po.setTipo(selecaotipoorcamento());
                po.setFormapg(String.valueOf(jCdformapagamento.getSelectedItem()));
                try {
                    PessoaOrcamentoDao pd = new PessoaOrcamentoDao();
                    pd.adiciona(po);
                    try {
                        final int retorno = pd.ultimoadiciona();
                        numero = String.valueOf(retorno);
                        produtoorcamento(retorno);
                        if ("CONVENIO".equals(String.valueOf(jCdformapagamento.getSelectedItem())) && jRdvenda.isSelected()) {
                            jTdorc.setText(String.valueOf(retorno));
                            jDdvencimento.setDate(ConverteData(data2));
                            jDdatavec.setModal(true);
                            jDdatavec.setLocationRelativeTo(null);
                            jDdatavec.setVisible(true);
                            //gerafinanceiro(retorno);
                        } else {
                            desabilita();//desabilita campos
                            limpaorcamento();//limpa campos
                            novoconsultasair();//limpa campos 
                        }
                        JOptionPane.showMessageDialog(null, "Orcamento Cadastrado");
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao cadastrar produtos orcamento" + ex);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao cadastrar pesssoa orcamento" + ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Obrigatorio ter Cliente e Vendedor");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Orcamento precisa ter itens");
        }
    }

    public void gerafinanceiro(int norca,String datavenc,Float valor,String obs) {
        DadosEmpresaBins eb = new DadosEmpresaBins();
        DataBins db = new DataBins();
        String data = String.valueOf(db.getAno()) + "." + String.valueOf(db.getMes()) + "." + String.valueOf(db.getDia());
       // String datavenc = db.getDia()+ "." + db.getMesVenc()+ "." +db.getAno();
        if (jRdvenda.isSelected()) {
            ReceberBins rb = new ReceberBins();
            rb.setVendedor(Integer.valueOf(jTdidvendedor.getText()));
            rb.setCliente(Integer.valueOf(jTdidpessoa.getText()));
            rb.setNorcamento(norca);
            rb.setNdocumento("");
            rb.setEmissao("PROPRIA");
            rb.setTipo("DUPLICATA");
            rb.setPg("N");
            rb.setDatavenda(data);
            rb.setDatavencimento(datavenc);
            rb.setValor(valor);
            rb.setObs(obs);
            rb.setEmpresa(eb.getId());
            
            try {
                ReceberDao rd = new ReceberDao();
                rd.adiciona(rb);
                //JOptionPane.showMessageDialog(null, "Financeiro do Orcamento " + norca + " Gerado");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Gerar Financeiro\n" + ex);
            }
        }
    }
    private void jBnovoorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBnovoorcActionPerformed
        // TODO add your handling code here:
        DataBins db = new DataBins();
        habilita();
        limpaorcamento();
        jTodata.setText(db.dia + "." + db.mes + "." + db.ano);
        cancelarfechavendaexcluiitem();
        jRdorcamento.setSelected(true);
    }//GEN-LAST:event_jBnovoorcActionPerformed
    public void cancelarfechavendaexcluiitem() {
        jBcalcelarorc.setEnabled(true);
        jBfechavendaorc.setEnabled(true);
        jBexcluiitemorc.setEnabled(true);
        jBnovoorc.setEnabled(false);
        jBalterarorc.setEnabled(false);
        jBexcluirorc.setEnabled(false);
        jBconsultaorc.setEnabled(false);
        jBsairorc.setEnabled(false);
        jBorcimprimir.setEnabled(false);
    }

    public void novoconsultasair() {
        jBcalcelarorc.setEnabled(false);
        jBfechavendaorc.setEnabled(false);
        jBexcluiitemorc.setEnabled(false);
        jBnovoorc.setEnabled(true);
        jBalterarorc.setEnabled(false);
        jBexcluirorc.setEnabled(false);
        jBconsultaorc.setEnabled(true);
        jBsairorc.setEnabled(true);
        jBorcimprimir.setEnabled(false);
    }

    public void alterarexcluirconsultacancelar() {
        jBcalcelarorc.setEnabled(true);
        jBfechavendaorc.setEnabled(false);
        jBexcluiitemorc.setEnabled(false);
        jBnovoorc.setEnabled(false);
        jBalterarorc.setEnabled(true);
        jBexcluirorc.setEnabled(true);
        jBconsultaorc.setEnabled(true);
        jBsairorc.setEnabled(false);
        jBorcimprimir.setEnabled(false);
    }

    public void limpaorcamento() {
        DefaultTableModel modeloorcamento = (DefaultTableModel) jTorcamento.getModel();
        modeloorcamento.setNumRows(0);
        somaproduto = 0;
        jTdidpessoa.setText("");
        jTodata.setText("");
        jTdidvendedor.setText("");
        jTnumeroorcamento.setText("");
        jTclientenome.setText("");
        jTclientecnpj.setText("");
        jTvendedornome.setText("");
        jFtotalorcamento.setText("0,00");
        jFprodutodescreal.setText("0,00");
        limpaproduto();

    }
    private void jFdtotalorcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFdtotalorcamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFdtotalorcamentoActionPerformed

    private void jBDcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDcancelarActionPerformed
        // TODO add your handling code here:
        jDpagamento.setVisible(false);
    }//GEN-LAST:event_jBDcancelarActionPerformed

    private void jBalterarorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalterarorcActionPerformed
        // TODO add your handling code here:
        boolean reaborc = reabriorcamento();//metodo reabri orcamento
        if (jRdvenda.isSelected() && reaborc) {//verifica se o radio buton da forma de pagamento venda esta selecionado e se a senha esta correta
            for (int i = 0; i < jTorcamento.getRowCount(); i++) {//metodo para percorrer a tabela do itens do orcamento
                String qtdetab = String.valueOf(jTorcamento.getValueAt(i, 4));//percorre as linha da coluna qtde
                Float qtde = Float.valueOf(qtdetab);//converte o resultado
                String prodtab = String.valueOf(jTorcamento.getValueAt(i, 0));//converte o numero do orcamento                         
                int idprod = Integer.valueOf(prodtab);
                retornaestoque(idprod, qtde);//metodo retorna estoque
                
            }
            try {//APAGA FINANCEIRO REFERENTE AO NUERO DO ORCAMENTO
                ReceberBins rb= new ReceberBins();
                rb.setNorcamento(Integer.valueOf(jTnumeroorcamento.getText()));//NUMERO DO ORCAMENTO
                ReceberDao rd= new ReceberDao();
                rd.removeNorcamento(rb);//METODO REMOVE NUEMRO DO ORCAMENTO
                desabilita();//habilita os campos da tela
                limpaorcamento();//limpa a tela orcamento
                novoconsultasair();//abilita os botoes especificado
                jBorcimprimir.setEnabled(false);//abilita botao emprimir
            } catch (SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao Apagar Financeiro");
            }
            
        } else if (jRdvenda.isSelected() && !reaborc) {//se ele a senha estiver errado execulta os metodos abaixo
            novoconsultasair();//abilita os botoes especificado
            desabilita();//desabilita os campos da tela
            jBorcimprimir.setEnabled(true);
        } else {//se estiver certa abre orcamento
            habilita();
            cancelarfechavendaexcluiitem();
            jBorcimprimir.setEnabled(false);
        }
    }//GEN-LAST:event_jBalterarorcActionPerformed
    public boolean reabriorcamento() {//metodo reabri orcamento
        if (jRdvenda.isSelected()) {//verifica se o radio buton da forma de pagamento venda esta selecionado
            int resp = JOptionPane.showConfirmDialog(null, "Orcamento ja fechado,Deseja Reabrilo?", "Desbloqueio Orcamento", JOptionPane.YES_NO_OPTION);
            if (resp == 0) {//compara o retorno do JOptionPane
                jDsenhalibera.setLocationRelativeTo(null);
                jPasswordFieldsenha.setText("");//set vazio no campo JDialog de digitacao senha
                jDsenhalibera.setVisible(true);//torna vizivel o JDialog
                String resps = jPasswordFieldsenha.getText();//recebe o campo digitado no JDialog
                DadosEmpresaBins de = new DadosEmpresaBins();//objeto dados empresa
                if (resps.equals(de.getSenha())) { //compara se a senha esta correta
                    try {
                        PessoaOrcamentoDao pod = new PessoaOrcamentoDao();//objeto PessoaOrcamento
                        int resultado = pod.liberaorcamento(Integer.valueOf(jTnumeroorcamento.getText()));//muda o tipo do orcamento para orcamento
                        if (resultado >= 1) {//verifica se o retorno do metodo mudou algum orcamento
                            JOptionPane.showMessageDialog(null, "Orcamento desbloqueado");
                            return true;
                        } else {// se retorna verificacao do if for 0 ele nao acho nenhum orcamento com o numero indicado
                            JOptionPane.showMessageDialog(null, "Orcamento Nao encontrado");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao desbloquear" + ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Senha incorreta");
                }
            }
        }
        return false;
    }
    private void jBcalcelarorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcalcelarorcActionPerformed
        // TODO add your handling code here:
        limpaorcamento();
        desabilita();
        novoconsultasair();
    }//GEN-LAST:event_jBcalcelarorcActionPerformed

    private void jBconsultaorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBconsultaorcActionPerformed
        // TODO add your handling code here:
        DefaultTableModel orcamento = (DefaultTableModel) jTdporcamento.getModel();
        orcamento.setNumRows(0);
        jDorcamento.setLocationRelativeTo(null);
        jDorcamento.setVisible(true);
        jTdopesquisa.setText("");
    }//GEN-LAST:event_jBconsultaorcActionPerformed

    private void jRdodataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRdodataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRdodataActionPerformed

    private void jTdporcamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTdporcamentoMouseClicked
        // TODO add your handling code here:
        selecaoorcamento(lpporcamento);//metodo prenche tela com os dados do orcamento
        jDorcamento.setVisible(false);
        jBorcimprimir.setEnabled(true);
        somaproduto = Float.valueOf(jFtotalorcamento.getText().replace(",", "."));
        if (!Orcamento.this.isVisible()) {
            Orcamento.this.setVisible(true);
        }

    }//GEN-LAST:event_jTdporcamentoMouseClicked

    private void jBsairorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsairorcActionPerformed
        // TODO add your handling code here:
        Orcamento.this.setVisible(false);
    }//GEN-LAST:event_jBsairorcActionPerformed

    private void jBexcluirorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluirorcActionPerformed
        // TODO add your handling code here:
        if (jRdvenda.isSelected()) {
            JOptionPane.showMessageDialog(null, "Orcamento ja fechado");
        } else {
            removeprodutoorcamento();
            removeclienteorcamento();
            limpaorcamento();
            novoconsultasair();
            JOptionPane.showMessageDialog(null, "Orcamento Excluido");
        }

    }//GEN-LAST:event_jBexcluirorcActionPerformed

    private void jBorcimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBorcimprimirActionPerformed
        // TODO add your handling code here:    
        Aguarde a = new Aguarde();
        numero = jTnumeroorcamento.getText();
        threadaguarde(a);
        threadorcamento(a);
    }//GEN-LAST:event_jBorcimprimirActionPerformed
    public void threadaguarde( final Aguarde a) {//execulta animacao aguarde
        new Thread(new Runnable() {
            @Override
            public void run() {
                a.setVisible(true);
            }
        }).start();
    }

    public void threadorcamento(final Aguarde a) {//thread imprime orcamento
        new Thread(new Runnable() {
            @Override
            public void run() {
                imprimeorcamento(numero);
                a.setVisible(false);
            }
        }).start();
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jDorcamento.setVisible(false);
        Aguarde a = new Aguarde();
        threadaguarde(a);
        threadorcamentojd(a);
    }//GEN-LAST:event_jButton1ActionPerformed
    public void threadorcamentojd(final Aguarde a) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                imprimeorcamento();
                a.setVisible(false);
            }
        }).start();
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jDsenhalibera.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTdpesquisaclienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdpesquisaclienteKeyReleased
        // TODO add your handling code here:
        try {
            PessoaDao pd = new PessoaDao();
            DadosEmpresaBins de = new DadosEmpresaBins();
            lppessoa = pd.getListacliente("%" + jTdpesquisacliente.getText() + "%", selecaojrd(), de.getId());
            mostrapesquisapessoa(lppessoa);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar" + ex);
        }
    }//GEN-LAST:event_jTdpesquisaclienteKeyReleased

    private void jTdpesquisaprodutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdpesquisaprodutoKeyReleased
        // TODO add your handling code here:
         pesquisaproduto();
    }//GEN-LAST:event_jTdpesquisaprodutoKeyReleased

    private void jTdopesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdopesquisaKeyReleased
        // TODO add your handling code here:
         try {
            PessoaOrcamentoDao pod = new PessoaOrcamentoDao();
            DadosEmpresaBins de = new DadosEmpresaBins();
            lpporcamento = pod.getLista("%" + jTdopesquisa.getText() + "%", Selecaojrdorcamento(), de.getId());
            listaorcamento(lpporcamento);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar orcamento" + ex);
        }
    }//GEN-LAST:event_jTdopesquisaKeyReleased

    private void jBdokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdokActionPerformed
        // TODO add your handling code here:
         
        int parc=Integer.valueOf(jTparcela.getText());
        String dia=new SimpleDateFormat("dd").format(jDdvencimento.getDate());
        String mes= new SimpleDateFormat("MM").format(jDdvencimento.getDate());
        String ano=new SimpleDateFormat("yyyy").format(jDdvencimento.getDate());
        String obs;
        if(parc>0){
            int cont=0;
            Float valor=Float.valueOf(jFtotalorcamento.getText().replace(",", "."))/parc;
            while(cont<parc){
                obs="PARCELA "+(cont+1)+" DE "+parc; 
                gerafinanceiro(Integer.valueOf(jTdorc.getText()),ano+"."+mes+"."+dia,valor,obs);
                 mes=MesVencOrc(mes);
                 cont++;
            } 
            jDdatavec.setVisible(false);
            desabilita();//desabilita campos
            limpaorcamento();//limpa campos
            novoconsultasair();//limpa campos 
        }else{
          JOptionPane.showMessageDialog(null, "QUANTIDADE DE PARCELAS INVALIDA ");
        }
    }//GEN-LAST:event_jBdokActionPerformed

    private void jFprodutoqtdeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFprodutoqtdeKeyReleased
        // TODO add your handling code here:
        try{
            calculatotalvenda();
        }catch(NumberFormatException e){            
        }
    }//GEN-LAST:event_jFprodutoqtdeKeyReleased

    private void jFprodutodescporcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFprodutodescporcKeyReleased
        // TODO add your handling code here:
        calculaDescPorcentagem();   
      
    }//GEN-LAST:event_jFprodutodescporcKeyReleased

    private void jFprodutodescrealKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFprodutodescrealKeyReleased
        // TODO add your handling code here:
        calculaDescReal();       
    }//GEN-LAST:event_jFprodutodescrealKeyReleased

    private void jFprodutodescrealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFprodutodescrealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFprodutodescrealActionPerformed
    public void calculaDescReal(){
        DadosEmpresaBins de=new DadosEmpresaBins();
        try{
        double descreal=Double.valueOf(jFprodutodescreal.getText().replace(",", "."));
        double vunit=Double.valueOf(jFprodutovalorunit.getText().replace(",", "."));
        double qtde=Double.valueOf(jFprodutoqtde.getText().replace(",", "."));
        double vtotal=qtde*vunit;
        double descporc=(descreal/vtotal)*100;
        
        if(descporc<=Double.valueOf(de.getDesconto())){
            
            jFprodutodescporc.setText(formataValor(descporc).replace(".", ","));
            calculatotalvenda();
            
        }else if(liberaDesconto()){
            
            jFprodutodescporc.setText(formataValor(descporc).replace(".", ","));
            calculatotalvenda();
            
        }else{
            
            jFprodutodescporc.setText("0,00");
            jFprodutodescreal.setText("0,00");
            calculatotalvenda();
            
        }
        }catch(NumberFormatException ex){
            jFprodutodescporc.setText("0,00");
            
            calculatotalvenda();
        }
    }
    public void calculaDescPorcentagem(){
        try {
            DadosEmpresaBins de = new DadosEmpresaBins();
            double desc = Double.valueOf(jFprodutodescporc.getText().replace(",", "."));
            double vdesc = de.getDesconto();
            if (desc <= vdesc) {
                
                double vunit = Double.valueOf(jFprodutovalorunit.getText().replace(",", "."));
                double qtde = Double.valueOf(jFprodutoqtde.getText().replace(",", "."));
                desc = (vunit * qtde) * desc / 100;
                jFprodutodescreal.setText(formataValor(desc).replace(".", ","));
                calculatotalvenda();
            } else if (liberaDesconto()) {
                
                double vunit = Double.valueOf(jFprodutovalorunit.getText().replace(",", "."));
                double qtde = Double.valueOf(jFprodutoqtde.getText().replace(",", "."));
                desc = (vunit * qtde) * desc / 100;
                jFprodutodescreal.setText(formataValor(desc).replace(".", ","));
                calculatotalvenda();
            } else {
                jFprodutodescporc.setText("0,00");
                jFprodutodescreal.setText("0,00");
                calculatotalvenda();
            }
        } catch (NumberFormatException ex) {

            jFprodutodescreal.setText("0,00");
            calculatotalvenda();
        }
    }
    public boolean liberaDesconto(){
        if(JOptionPane.showConfirmDialog(null, "Desconto Nao Permitido Deseja Confirmar ?", "LIBERA DESCONTO", JOptionPane.YES_NO_OPTION)==0){
            jPasswordFieldsenha.setText("");
            jDsenhalibera.setLocationRelativeTo(null);
            jDsenhalibera.setVisible(true);
             String resps = jPasswordFieldsenha.getText();
             DadosEmpresaBins de=new DadosEmpresaBins();
             if(de.getSenha().equals(resps)){
                 return true;
             }else{
                 JOptionPane.showMessageDialog(null, "Senha Incorreta");
                 return false;
             }
             
        }
        return false;
    }
    private String MesVencOrc(String mes){//acresenta um dia a mais no mes da frame orcamento
        int m=Integer.parseInt(mes)+1;
        if(m<10){
            return "0"+String.valueOf(m);
        }
        return String.valueOf(m); 
    }
    public void imprimeorcamento() {
        try {
            DadosEmpresaBins de = new DadosEmpresaBins();
            String sql = "" + Selecaojrdorcamento() + " like '%" + jTdopesquisa.getText() + "%' and pesoaorcamento.empresa=" + de.getId() + "";
            CriaConexao con = new CriaConexao();//cria variavel tipo conexao
            Map map = new HashMap();//cria variativo de parametro
            map.put("sql", sql);//recebe parametro para o relatorio
            map.put("subsql", sql);//recebe segundo parametro para relatorio
            JasperPrint jasperPrint = JasperFillManager.fillReport("./Relatorio/cabecalhoorcamento.jasper", map, CriaConexao.getConexao());//chama relatorio   
            JasperViewer jrviewer = new JasperViewer(jasperPrint, false);//cria variavel do tipo vil
            jrviewer.setVisible(true);   //visualiza o relatorio
            jrviewer.toFront();  //coloca ela na frente das janelas
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatorio" + ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Selecione um Orcamento" + ex);
        }
    }

    public void removeprodutoorcamento() {
        try {
            OrcamentoDao od = new OrcamentoDao();
            OrcamentoBins ob = new OrcamentoBins();
            ob.setPessoa(Integer.parseInt(jTnumeroorcamento.getText()));
            od.remove(ob);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir produto" + ex);
        }
    }

    public void removeclienteorcamento() {
        try {
            PessoaOrcamentoDao pod = new PessoaOrcamentoDao();
            PesoaOrcamentoBins pob = new PesoaOrcamentoBins();
            pob.setId(Integer.parseInt(jTnumeroorcamento.getText()));
            pod.remove(pob);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir cliente" + ex);
        }
    }

    public void selecaoorcamento(List<PesoaOrcamentoBins> pob) {//metodo que preenche a tela com os dados 
        for (int i = 0; i < pob.size(); i++) {
            if (jTdporcamento.getSelectedRow() == i) {
                jTodata.setText(pob.get(i).getData());
                jTnumeroorcamento.setText(String.valueOf(pob.get(i).getId()));
                jFtotalorcamento.setText(String.valueOf(pob.get(i).getVorcamento()).replace(".", ","));
                jTdidpessoa.setText(String.valueOf(pob.get(i).getPessoacliente()));
                jTdidvendedor.setText(String.valueOf(pob.get(i).getPessoavendedor()));
                marcajrbfechamento(pob.get(i).getTipo());
                selecaoproduto(pob.get(i).getId());//metodo busca o produto do orcamento
                selecaocliente(pob.get(i).getPessoacliente());//metodo busca o cliente do orcamento
                selecaovendedor(pob.get(i).getPessoavendedor());//metodo busca o vendedor do orcamento
            }
        }
    }

    public int selecaopagamento(String forma) {//metodo retorna a forma de pagamento
        switch (forma) {
            case "DINHEIRO":
                return 0;
            case "CHEQUE":
                return 1;
            case "CONVENIO":
                return 2;
            case "CARTAO":
                return 3;
        }
        return 0;
    }

    public void selecaoproduto(int id) {
        try {
            OrcamentoDao od = new OrcamentoDao();
            lporcamento = od.getLista(id);
            listaprodutoorcamento(lporcamento);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar produto orcamento" + ex);
        }
    }

    public void selecaocliente(int id) {

        try {
            PessoaDao pd = new PessoaDao();
            lppessoa = pd.getpessoa(id);
            listacliente(lppessoa);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar cliente" + ex);
        }
    }

    public void listacliente(List<PessoaBins> pb) {
        jTclientenome.setText(pb.get(0).getNome());
        jTclientecnpj.setText(pb.get(0).getCpf_cnpj());
    }

    public void selecaovendedor(int id) {

        try {
            PessoaDao pd = new PessoaDao();
            lppessoa = pd.getpessoa(id);
            listavendedor(lppessoa);
            alterarexcluirconsultacancelar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar vendedor" + ex);
        }
    }

    public void listavendedor(List<PessoaBins> pb) {
        jTvendedornome.setText(pb.get(0).getNome());
    }

    public void listaprodutoorcamento(List<OrcamentoBins> ob) {
        DefaultTableModel modeloorcamento = (DefaultTableModel) jTorcamento.getModel();
        modeloorcamento.setNumRows(0);
        for (int i = 0; i < ob.size(); i++) {
            jCdformapagamento.setSelectedIndex(selecaopagamento(ob.get(i).getFormapg()));
            Object idproduto = ob.get(i).getProduto();
            modeloorcamento.addRow(new Object[]{idproduto, ob.get(i).getCodproduto(), ob.get(i).getDescproduto(),
                ob.get(i).getPrecovenda(), ob.get(i).getQtde(), ob.get(i).getDesconto(), ob.get(i).getPrecotproduto()});
        }

    }

    public void marcajrbfechamento(String f) {
        if ("O".equals(f)) {
            jRdorcamento.setSelected(true);
        } else {
            jRdvenda.setSelected(true);
        }
    }

    public String Selecaojrdorcamento() {
        if (jRdocliente.isSelected()) {
            return jRdocliente.getName();
        } else if (jRdodata.isSelected()) {
            return jRdodata.getName();
        } else {
            return jRdonumero.getName();
        }
    }

    public void listaorcamento(List<PesoaOrcamentoBins> pob) {
        DefaultTableModel orcamento = (DefaultTableModel) jTdporcamento.getModel();
        orcamento.setNumRows(0);
        for (int i = 0; i < pob.size(); i++) {
            orcamento.addRow(new Object[]{pob.get(i).getId(), pob.get(i).getNpessoacliente(), pob.get(i).getData(), pob.get(i).getVorcamento(), pob.get(i).getTipo()});

        }
    }

    public String numeroorcamento() {
        DataBins db = new DataBins();
        String numero = db.ano + "" + db.mes + "" + db.dia + "" + db.hora + "" + db.minuto + "" + db.segundo;
        return numero;
    }

    public void produtoorcamento(int idpessoa) {
        DataBins db = new DataBins();

        String data =  String.valueOf(db.getAno())+ "." + String.valueOf(db.getMes()) + "." + String.valueOf(db.getDia());
        for (int i = 0; i < jTorcamento.getRowCount(); i++) {
            try {
                DadosEmpresaBins de = new DadosEmpresaBins();
                OrcamentoBins ob = new OrcamentoBins();
                String idproduto = String.valueOf(jTorcamento.getValueAt(i, 0));
                String qtde = String.valueOf(jTorcamento.getValueAt(i, 4));
                String pvenda = String.valueOf(jTorcamento.getValueAt(i, 3));
                String desconto = String.valueOf(jTorcamento.getValueAt(i, 5));
                String tproduto = String.valueOf(jTorcamento.getValueAt(i, 6));

                ob.setProduto(Integer.valueOf(idproduto));
                ob.setPessoa(idpessoa);
                ob.setQtde(Float.valueOf(qtde.replace(",", ".")));
                ob.setPrecovenda(Float.valueOf(pvenda.replace(",", ".")));
                ob.setDesconto(Float.valueOf(desconto.replace(",", ".")));
                ob.setPrecotproduto(Float.valueOf(tproduto.replace(",", ".")));
                ob.setPrecotorcamento(Float.valueOf(jFtotalorcamento.getText().replace(",", ".")));
                ob.setFormapg(String.valueOf(jCdformapagamento.getSelectedItem()));
                // ob.setTipo(selecaotipoorcamento());
                ob.setData(data);
                OrcamentoDao od = new OrcamentoDao();
                od.adiciona(ob);
                baixaestoque(ob.getProduto(), ob.getQtde());
            } catch (SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao gravar Produto" + ex);
            }


        }

    }

    public String selecaotipoorcamento() {
        if (jRdorcamento.isSelected()) {
            return "O";
        } else {
            return "V";
        }
    }

    public void limpaproduto() {
        jFprodutoqtde.setText("0,00");
        jFprodutovalorunit.setText("0,00");
        jFprodutodescporc.setText("0,00");
        jFprodutovalortot.setText("0,00");
        jTcodigoproduto.setText("");
        jTprodutodescricao.setText("");
        jTdidproduto.setText("");
        jFprodutodescreal.setText("0,00");
        
    }

    public void pesquisaproduto() {
        try {
            ProdutoDao pd = new ProdutoDao();
            DadosEmpresaBins de = new DadosEmpresaBins();
            lpproduto = pd.getprodutoativo("%" + jTdpesquisaproduto.getText() + "%", butongroupproduto(), de.getId());
            listaproduto(lpproduto);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar produto\n" + ex);
        }

    }

    public void pesquisapcodbarra() {
        try {
            ProdutoDao pd = new ProdutoDao();
            DadosEmpresaBins de = new DadosEmpresaBins();
            lpproduto = pd.getprodutoativo(jTcodigoproduto.getText(), "codbarra", de.getId());
            produtocodbarra(lpproduto);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar produto\n" + ex);
        }

    }

    public void produtocodbarra(List<ProdutoBins> pb) {
        if (pb.size() == 1) {
            jTprodutodescricao.setText(pb.get(0).getDescricao());
            jTdidproduto.setText(String.valueOf(pb.get(0).getId()));
            jFprodutovalorunit.setText(String.valueOf(pb.get(0).getPrecovenda()).replace(".", ","));
            jFprodutoqtde.setText("1,00");
            jFprodutovalortot.setText(String.valueOf(pb.get(0).getPrecovenda()).replace(".", ","));
        } else {
            JOptionPane.showMessageDialog(null, "Produto não Encontrado!!");
        }
    }

    public void listaproduto(List<ProdutoBins> pb) {
        DefaultTableModel modeloproduto = (DefaultTableModel) jTdpproduto.getModel();
        modeloproduto.setNumRows(0);
        for (int i = 0; i < pb.size(); i++) {
            modeloproduto.addRow(new Object[]{pb.get(i).getId(), pb.get(i).getCodbarra(), pb.get(i).getDescricao(), pb.get(i).getQtde(), pb.get(i).getCustoreal(), pb.get(i).getPrecovenda()});
        }
    }

    public String butongroupproduto() {
        if (jRdpcodbarra.isSelected()) {
            return jRdpcodbarra.getName();
        } else {
            return jRdpdescricao.getName();

        }
    }

    public void selecaopesquisavendedor(List<PessoaBins> pb) {
        for (int i = 0; i < pb.size(); i++) {
            if (jTdvendedor.getSelectedRow() == i) {
                jTdidvendedor.setText(String.valueOf(pb.get(i).getId()));
                jTvendedornome.setText(pb.get(i).getNome());
            }
        }
    }

    public void mostravendedor(List<PessoaBins> pb) {
        DefaultTableModel modelovendedor = (DefaultTableModel) jTdvendedor.getModel();
        modelovendedor.setNumRows(0);
        for (int i = 0; i < pb.size(); i++) {
            modelovendedor.addRow(new Object[]{pb.get(i).getId(), pb.get(i).getNome()});
        }
    }

    public String selecaojrd() {
        if (jRdapelido.isSelected()) {
            return jRdapelido.getName();
        }
        if (jRdcpf_cnpj.isSelected()) {
            return jRdcpf_cnpj.getName();
        }
        if (jRdnome.isSelected()) {
            return jRdnome.getName();
        } else {
            return null;
        }
    }

    public void mostrapesquisapessoa(List<PessoaBins> lpessoa) {
        DefaultTableModel modelocidade = (DefaultTableModel) jTdpessoa.getModel(); //CRIA OBJETO MODELO DO TIPO DEFAULTTABLEMODEL
        modelocidade.setNumRows(0);//
        for (int i = 0; i < lpessoa.size(); i++) { //ENQUANTO O RESET DO METODO EXECULTA SQL TIVER DADOS ELE VAI PREENCHER A TABELA
            modelocidade.addRow(new Object[]{lpessoa.get(i).getId(), lpessoa.get(i).getNome(), lpessoa.get(i).getFantasia(), lpessoa.get(i).getCpf_cnpj(), lpessoa.get(i).getTelefone()});
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orcamento().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCliente;
    private javax.swing.ButtonGroup buttonGroupProduto;
    private javax.swing.ButtonGroup buttonGrouppagamento;
    private javax.swing.ButtonGroup buttonGrouppesqorcamento;
    private javax.swing.JButton jBDcancelar;
    private javax.swing.JButton jBalterarorc;
    private javax.swing.JButton jBcalcelarorc;
    private javax.swing.JButton jBconfirma;
    private javax.swing.JButton jBconsultaorc;
    private javax.swing.JButton jBdfechaorcamento;
    private javax.swing.JButton jBdok;
    private javax.swing.JButton jBexcluiitemorc;
    private javax.swing.JButton jBexcluirorc;
    private javax.swing.JButton jBfechavendaorc;
    private javax.swing.JButton jBnovoorc;
    private javax.swing.JButton jBorcimprimir;
    private javax.swing.JButton jBpesqcliente;
    private javax.swing.JButton jBpesqproduto;
    private javax.swing.JButton jBpesqvendedor;
    private javax.swing.JButton jBsairorc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCdformapagamento;
    private javax.swing.JDialog jDcliente;
    private javax.swing.JDialog jDdatavec;
    private com.toedter.calendar.JDateChooser jDdvencimento;
    public javax.swing.JDialog jDorcamento;
    private javax.swing.JDialog jDpagamento;
    private javax.swing.JDialog jDproduto;
    private javax.swing.JDialog jDsenhalibera;
    private javax.swing.JDialog jDvendedor;
    private javax.swing.JFormattedTextField jFdtotalorcamento;
    private javax.swing.JFormattedTextField jFprodutodescporc;
    private javax.swing.JFormattedTextField jFprodutodescreal;
    private javax.swing.JFormattedTextField jFprodutoqtde;
    private javax.swing.JFormattedTextField jFprodutovalortot;
    private javax.swing.JFormattedTextField jFprodutovalorunit;
    private javax.swing.JFormattedTextField jFtotalorcamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPasswordField jPasswordFieldsenha;
    private javax.swing.JRadioButton jRdapelido;
    private javax.swing.JRadioButton jRdcpf_cnpj;
    private javax.swing.JRadioButton jRdnome;
    private javax.swing.JRadioButton jRdocliente;
    private javax.swing.JRadioButton jRdodata;
    private javax.swing.JRadioButton jRdonumero;
    private javax.swing.JRadioButton jRdorcamento;
    private javax.swing.JRadioButton jRdpcodbarra;
    private javax.swing.JRadioButton jRdpdescricao;
    private javax.swing.JRadioButton jRdvenda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTclientecnpj;
    private javax.swing.JTextField jTclientenome;
    private javax.swing.JTextField jTcodigoproduto;
    private javax.swing.JTextField jTdidpessoa;
    private javax.swing.JTextField jTdidproduto;
    private javax.swing.JTextField jTdidvendedor;
    protected javax.swing.JTextField jTdopesquisa;
    private javax.swing.JTextField jTdorc;
    private javax.swing.JTextField jTdpesquisacliente;
    private javax.swing.JTextField jTdpesquisaproduto;
    private javax.swing.JTextField jTdpesquisavendedor;
    private javax.swing.JTable jTdpessoa;
    protected javax.swing.JTable jTdporcamento;
    private javax.swing.JTable jTdpproduto;
    private javax.swing.JTable jTdvendedor;
    private javax.swing.JTextField jTnumeroorcamento;
    private javax.swing.JTextField jTodata;
    private javax.swing.JTable jTorcamento;
    private javax.swing.JTextField jTparcela;
    private javax.swing.JTextField jTprodutodescricao;
    private javax.swing.JTextField jTvendedornome;
    // End of variables declaration//GEN-END:variables
}
