/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bancodados.CriaConexao;
import bins.CaixaBins;
import bins.DadosEmpresaBins;
import bins.DataBins;
import bins.ReceberBins;
import dao.CaixaDao;
import dao.ReceberDao;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MARCOS
 */
public class Caixa extends javax.swing.JFrame {
    List<CaixaBins> lcaixarec;
    List<CaixaBins> lcaixarecdet;
    List<ReceberBins> lcaixaarec;
    List<ReceberBins> lcaixaarecdet;
    /**
     * Creates new form Caixa
     */
    public Caixa() {
        initComponents();
        inicializaTabelas();
        DataBins db= new DataBins();
        String data= db.getDia()+"."+db.getMes()+"."+db.getAno();
        jDdatafinal.setDate(ConverteData(data));
        jDdatainicial.setDate(ConverteData(data));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compoundPainter1 = new org.jdesktop.swingx.painter.CompoundPainter();
        jDdatainicial = new com.toedter.calendar.JDateChooser();
        jDdatafinal = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTrecTotal = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTrecDescritivo = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTarecTotal = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTarecDescritivo = new javax.swing.JTable();
        jBpesquisa = new javax.swing.JButton();
        jCRelatorio = new javax.swing.JComboBox();
        jBrelatorio = new javax.swing.JButton();
        jTrecebeu = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTareceber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CAIXA");
        setResizable(false);

        jLabel1.setText("DATA INICIAL");

        jLabel2.setText("DATA FINAL");

        jTrecTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FORMAS DE PAGAMENTO", "VALOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTrecTotal.getTableHeader().setResizingAllowed(false);
        jTrecTotal.getTableHeader().setReorderingAllowed(false);
        jTrecTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTrecTotalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTrecTotal);

        jLabel3.setText("RECEBEU TOTALIZADO");

        jTrecDescritivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATA PAGAMENTO", "ORCAMENTO", "DUPLICATA", "CLIENTE", "VALOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTrecDescritivo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTrecDescritivo.getTableHeader().setResizingAllowed(false);
        jTrecDescritivo.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTrecDescritivo);

        jLabel4.setText("DESCRITIVO");

        jLabel5.setText("A RECEBER TOTALIZADO");

        jTarecTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FORMAS DE PAGAMENTO", "VALOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTarecTotal.getTableHeader().setResizingAllowed(false);
        jTarecTotal.getTableHeader().setReorderingAllowed(false);
        jTarecTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTarecTotalMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTarecTotal);

        jLabel6.setText("DESCRITIVO");

        jTarecDescritivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATA DA VENDA", "ORCAMENTO", "DUPLICATA", "CLIENTE", "VALOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTarecDescritivo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTarecDescritivo.getTableHeader().setResizingAllowed(false);
        jTarecDescritivo.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTarecDescritivo);

        jBpesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Uteis/pesquisa32x32.png"))); // NOI18N
        jBpesquisa.setText("PESQUISAR");
        jBpesquisa.setMaximumSize(new java.awt.Dimension(133, 32));
        jBpesquisa.setMinimumSize(new java.awt.Dimension(133, 32));
        jBpesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpesquisaActionPerformed(evt);
            }
        });

        jCRelatorio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RELATORIO_CAIXA_DETALHADO" }));
        jCRelatorio.setEnabled(false);

        jBrelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Uteis/EMPRIMIR32X32.png"))); // NOI18N
        jBrelatorio.setText("IMPRIMIR");
        jBrelatorio.setEnabled(false);
        jBrelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBrelatorioActionPerformed(evt);
            }
        });

        jTrecebeu.setEditable(false);
        jTrecebeu.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTrecebeu.setText("0");

        jLabel7.setText("TOTAL:");

        jTareceber.setEditable(false);
        jTareceber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTareceber.setText("0");

        jLabel8.setText("TOTAL:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTareceber, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jDdatainicial, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDdatafinal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBrelatorio))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTrecebeu, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDdatainicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDdatafinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBpesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBrelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTrecebeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTareceber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(829, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //ATIVA BOTOES DE CONSULTA
    public void ativaImprimir(){
        jCRelatorio.setEnabled(true);
        jBrelatorio.setEnabled(true);
    } 
    //DESATIVA BOTOES DE CONSULTA
    public void desativaImprimir(){
        jCRelatorio.setEnabled(false);
        jBrelatorio.setEnabled(false);
    }
    public void limpatela(){
        //LIMPA TABELA ARECEBER TOTAL
        DefaultTableModel modeloarectotal = (DefaultTableModel) jTarecTotal.getModel();
        modeloarectotal.setNumRows(0);
        //LIMPA TABELA ARECEBER DESCRITIVO
        DefaultTableModel modeloarecdescritivo = (DefaultTableModel) jTarecDescritivo.getModel();
        modeloarecdescritivo.setNumRows(0);
        jTrecebeu.setText("0");
        //LIMPA TABELA RECEBER TOTAL
        DefaultTableModel modelorectotal = (DefaultTableModel) jTrecTotal.getModel();
        modelorectotal.setNumRows(0);
        //LIMPA TABELA RECEBER DESCRITIVO
        DefaultTableModel modelorecdescritivo = (DefaultTableModel) jTrecDescritivo.getModel();
        modelorecdescritivo.setNumRows(0);
        jTareceber.setText("0");
        //SETA DATAS DO DIA NA VIEW
        DataBins db= new DataBins();
        String data= db.getDia()+"."+db.getMes()+"."+db.getAno();
        jDdatafinal.setDate(ConverteData(data));
        jDdatainicial.setDate(ConverteData(data));
        
        desativaImprimir();
    }
    private void inicializaTabelas(){
         //TABELA RECEBER TOTAL
        jTrecTotal.getColumnModel().getColumn(0);
        jTrecTotal.getColumnModel().getColumn(1).setMaxWidth(100);
        //TABELA RECEBER DESCRITIVO
        jTrecDescritivo.getColumnModel().getColumn(0).setMaxWidth(120);
        jTrecDescritivo.getColumnModel().getColumn(0).setMinWidth(120);
        jTrecDescritivo.getColumnModel().getColumn(1).setMaxWidth(100);
        jTrecDescritivo.getColumnModel().getColumn(1).setMinWidth(100);
        jTrecDescritivo.getColumnModel().getColumn(2).setMaxWidth(100);
        jTrecDescritivo.getColumnModel().getColumn(2).setMinWidth(100);
        jTrecDescritivo.getColumnModel().getColumn(3).setMaxWidth(350);
        jTrecDescritivo.getColumnModel().getColumn(3).setMinWidth(350);
        jTrecDescritivo.getColumnModel().getColumn(4).setMaxWidth(100);
        jTrecDescritivo.getColumnModel().getColumn(4).setMinWidth(100);
        //TABELA ARECEBER
        jTarecTotal.getColumnModel().getColumn(0);
        jTarecTotal.getColumnModel().getColumn(1).setMaxWidth(100);
        //TABELA ARECEBER DESCRITIVO
        jTarecDescritivo.getColumnModel().getColumn(0).setMaxWidth(120);
        jTarecDescritivo.getColumnModel().getColumn(0).setMinWidth(120);
        jTarecDescritivo.getColumnModel().getColumn(1).setMaxWidth(100);
        jTarecDescritivo.getColumnModel().getColumn(1).setMinWidth(100);
        jTarecDescritivo.getColumnModel().getColumn(2).setMaxWidth(100);
        jTarecDescritivo.getColumnModel().getColumn(2).setMinWidth(100);
        jTarecDescritivo.getColumnModel().getColumn(3).setMaxWidth(350);
        jTarecDescritivo.getColumnModel().getColumn(3).setMinWidth(350);
        jTarecDescritivo.getColumnModel().getColumn(4).setMaxWidth(100);
        jTarecDescritivo.getColumnModel().getColumn(4).setMinWidth(100);
    }
    private void jBpesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpesquisaActionPerformed
        // TODO add your handling code here:
        pesquisaPagamentoRec();
        pesquisaPagamentoArec();
        ativaImprimir();
    }//GEN-LAST:event_jBpesquisaActionPerformed

    private void jTrecTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTrecTotalMouseClicked
        // TODO add your handling code here:
        selecaoPagamentoRec();
    }//GEN-LAST:event_jTrecTotalMouseClicked

    private void jTarecTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTarecTotalMouseClicked
        // TODO add your handling code here:
        selecaoPagamentoArec();
    }//GEN-LAST:event_jTarecTotalMouseClicked

    private void jBrelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrelatorioActionPerformed
        // TODO add your handling code here:
        Aguarde a= new Aguarde();
        threadAguarde(a);
        threadRelatorio(a);
    }//GEN-LAST:event_jBrelatorioActionPerformed
    //THREAD AGUARDE
    private void threadAguarde(final Aguarde a){
        new Thread(new Runnable() {

            @Override
            public void run() {
                a.setVisible(true);
            }
        }).start();
    }
    //THREAD RELATORIO
    private void threadRelatorio(final Aguarde a){
        new Thread(new Runnable() {

            @Override
            public void run() {
                imprimeRelatorio();
                a.setVisible(false);
            }
        }).start();
    }
    //METODO IMPRIME RELATORIO
    private void imprimeRelatorio() {
        try {
            DadosEmpresaBins eb = new DadosEmpresaBins();
            String datainicial = new SimpleDateFormat("yyyy.MM.dd").format(jDdatainicial.getDate());
            String datafinal = new SimpleDateFormat("yyyy.MM.dd").format(jDdatafinal.getDate());
            Map map = new HashMap();
            map.put("EMPRESA", eb.getId());
            map.put("DATAINICIAL", datainicial);
            map.put("DATAFINAL", datafinal);
            
            JasperPrint jasperprint = JasperFillManager.fillReport("./Relatorio/" + jCRelatorio.getSelectedItem() + ".jasper", map, CriaConexao.getConexao());//chama relatorio   
            JasperViewer jasperviewer = new JasperViewer(jasperprint, false);
            jasperviewer.setVisible(true);
            jasperviewer.toFront();
        } catch (JRException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao gerar relatorio" + ex);
        }
    }
    //SELECIONA FORMA DE PAGAMENTO A RECEBER PARA DETALHE
    private void selecaoPagamentoArec(){
        for(int i=0;i<lcaixaarec.size();i++){
            if(jTarecTotal.getSelectedRow()==i){               
                try {
                    ReceberDao rd = new ReceberDao();
                    DadosEmpresaBins de = new DadosEmpresaBins();
                    String datainicial = new SimpleDateFormat("yyyy.MM.dd").format(jDdatainicial.getDate());
                    String datafinal = new SimpleDateFormat("yyyy.MM.dd").format(jDdatafinal.getDate());
                    lcaixaarecdet = rd.getPagamentoNaoPagosDetalhado(de.getId(), datainicial, datafinal, lcaixaarec.get(i).getTipo());
                    selecaoPagamentoArecDetalhe(lcaixaarecdet);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"Erro ao Pesquisar Detalhe da Forma de Pagamento Areceber"+lcaixaarec.get(i).getTipo()+"\n"+ex);
                }
            }       
        }
    }
    //SELECIONA FORMA DE PAGAMENTO DETALHADA
    private void selecaoPagamentoArecDetalhe(List<ReceberBins> lrecdet){
        DefaultTableModel modeloarecdet= (DefaultTableModel) jTarecDescritivo.getModel();
        modeloarecdet.setNumRows(0);
        for(int i=0;i<lrecdet.size();i++){
            
            modeloarecdet.addRow(new Object[]{lrecdet.get(i).getDatavenda(),lrecdet.get(i).getNorcamento(),
                lrecdet.get(i).getId(),lrecdet.get(i).getNomecliente(),lrecdet.get(i).getValor()});
        }
    }
    //SELECIONA FORMA DE PAGAMENTO A RECEBER
    private void pesquisaPagamentoArec(){
         //LIMPA TABELA RECEBER TOTAL
        DefaultTableModel modeloarectotal = (DefaultTableModel) jTarecTotal.getModel();
        modeloarectotal.setNumRows(0);
        //LIMPA TABELA RECEBER DESCRITIVO
        DefaultTableModel modeloarecdescritivo = (DefaultTableModel) jTarecDescritivo.getModel();
        modeloarecdescritivo.setNumRows(0);
        try {
            ReceberDao rd= new ReceberDao();
            DadosEmpresaBins de= new DadosEmpresaBins();
            String datainicial=new SimpleDateFormat("yyyy.MM.dd").format(jDdatainicial.getDate());
            String datafinal=new SimpleDateFormat("yyyy.MM.dd").format(jDdatafinal.getDate());
            lcaixaarec= rd.getFormaPagamentoNaoPagos(de.getId(), datainicial, datafinal);
            listaFormasArec(lcaixaarec);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Pesquisa Formas de Pagamento Areceber\n"+ex);
        }
    }
    //SELECIONA FORMA DE PAGAMENTO A RECEBER 
    private void listaFormasArec(List<ReceberBins> caixaListaArec){      
       DefaultTableModel modeloarectotal= (DefaultTableModel) jTarecTotal.getModel();
       modeloarectotal.setNumRows(0);
       Float soma=0f;
       for(int i=0;i<caixaListaArec.size();i++){
           modeloarectotal.addRow(new Object[]{caixaListaArec.get(i).getTipo(),caixaListaArec.get(i).getValor()});
           soma=soma+Float.valueOf(caixaListaArec.get(i).getValor());
           jTareceber.setText(String.valueOf(soma));
       }
  }
    
    
    
    //SELECIONA FORMA DE PAGAMENTO PARA DETALHE
    private void selecaoPagamentoRec(){
        
        for(int i=0;i<lcaixarec.size();i++){
            if (jTrecTotal.getSelectedRow() == i) {
                try {
                    CaixaDao cd = new CaixaDao();
                    DadosEmpresaBins de = new DadosEmpresaBins();
                    String datainicial = new SimpleDateFormat("yyyy.MM.dd").format(jDdatainicial.getDate());
                    String datafinal = new SimpleDateFormat("yyyy.MM.dd").format(jDdatafinal.getDate());
                    lcaixarecdet = cd.getPagamentoDetalhado(lcaixarec.get(i).getFormapg(), de.getId(), datainicial, datafinal);
                    listaFormasDetalhe(lcaixarecdet);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao Pesquisar Detalhe da Forma de Pagamento" + lcaixarec.get(i).getFormapg() + "\n" + ex);
                }
            }
        }
    }
    //PESQUISA FORMAS DE PAGAMENTO
    public void pesquisaPagamentoRec(){
        //LIMPA TABELA RECEBER TOTAL
        DefaultTableModel modelorectotal = (DefaultTableModel) jTrecTotal.getModel();
        modelorectotal.setNumRows(0);
        //LIMPA TABELA RECEBER DESCRITIVO
        DefaultTableModel modelorecdescritivo = (DefaultTableModel) jTrecDescritivo.getModel();
        modelorecdescritivo.setNumRows(0);
        try {
            CaixaDao cd= new CaixaDao();
            DadosEmpresaBins de= new DadosEmpresaBins();
            String datainicial=new SimpleDateFormat("yyyy.MM.dd").format(jDdatainicial.getDate());
            String datafinal=new SimpleDateFormat("yyyy.MM.dd").format(jDdatafinal.getDate());
            lcaixarec= cd.getFormaPagamento(de.getId(),datainicial,datafinal);
            listaFormas(lcaixarec);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Pesquisa Formas de Pagamento Receber\n"+ex);
        }
    }
    //LISTA FORMAS DE PAGAMENTO
   public void listaFormas(List<CaixaBins> caixalista){
       DefaultTableModel modelorectotal= (DefaultTableModel) jTrecTotal.getModel();
       modelorectotal.setNumRows(0);
       Float soma=0f;
       for(int i=0;i<caixalista.size();i++){
           modelorectotal.addRow(new Object[]{caixalista.get(i).getFormapg(),caixalista.get(i).getValor()});
           soma=soma+Float.valueOf(caixalista.get(i).getValor());
           jTrecebeu.setText(String.valueOf(soma));
       }
   }
   //LISTA DETALHE DAS FORMAS DE PAGAMENTO
   public void listaFormasDetalhe(List<CaixaBins> caixadetalhe){
       DefaultTableModel modelorecdescritivo= (DefaultTableModel) jTrecDescritivo.getModel();
       modelorecdescritivo.setNumRows(0);
       for(int i=0;i<caixadetalhe.size();i++){
           modelorecdescritivo.addRow(new Object[]{caixadetalhe.get(i).getDatapagamento(),caixadetalhe.get(i).getPesoaorcamento(),caixadetalhe.get(i).getReceber(),caixadetalhe.get(i).getPessoa(),caixadetalhe.get(i).getValor()});
       }
   }
   //FUNCAO CONVERTE DATA
    private java.sql.Date ConverteData(String data) {
        java.sql.Date date = null;
        if (data != "" && data != null) {
            try {
                DateFormat formato = new SimpleDateFormat("dd.MM.yyyy");
                date = new java.sql.Date(formato.parse(data).getTime());
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        return date;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caixa().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.painter.CompoundPainter compoundPainter1;
    private javax.swing.JButton jBpesquisa;
    private javax.swing.JButton jBrelatorio;
    private javax.swing.JComboBox jCRelatorio;
    private com.toedter.calendar.JDateChooser jDdatafinal;
    private com.toedter.calendar.JDateChooser jDdatainicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTarecDescritivo;
    private javax.swing.JTable jTarecTotal;
    private javax.swing.JTextField jTareceber;
    private javax.swing.JTable jTrecDescritivo;
    private javax.swing.JTable jTrecTotal;
    private javax.swing.JTextField jTrecebeu;
    // End of variables declaration//GEN-END:variables

    
}
